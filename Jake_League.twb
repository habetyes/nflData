<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='DefensiveDeepTargetSuccessRate' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource inline='true' name='Clipboard_20190729T173001' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20190729T173001' name='Clipboard_20190729T173001leaf'>
            <connection class='textscan' directory='C:/Users/habet/Documents/My Tableau Repository/Datasources/Clipboard_20190729T173001' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='Clipboard_20190729T173001leaf' name='Clipboard_20190729T173001#txt' table='[Clipboard_20190729T173001#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Player' ordinal='0' />
            <column datatype='string' name='POS' ordinal='1' />
            <column datatype='real' name='Jake Points' ordinal='2' />
            <column datatype='real' name='PPG' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clipboard_20190729T173001#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[Clipboard_20190729T173001#txt]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[POS]</local-name>
            <parent-name>[Clipboard_20190729T173001#txt]</parent-name>
            <remote-alias>POS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jake Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jake Points]</local-name>
            <parent-name>[Clipboard_20190729T173001#txt]</parent-name>
            <remote-alias>Jake Points</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPG]</local-name>
            <parent-name>[Clipboard_20190729T173001#txt]</parent-name>
            <remote-alias>PPG</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/habet/Documents/My Tableau Repository/Datasources/Clipboard_20190729T173001.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2019 07:53:47 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Clipboard_20190729T173001' increment-value='%null%' refresh-type='create' rows-inserted='612' timestamp-start='2019-08-11 07:53:47.826' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Player</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Player]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Player</remote-alias>
              <ordinal>0</ordinal>
              <family>Clipboard_20190729T173001#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>606</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>POS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[POS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>POS</remote-alias>
              <ordinal>1</ordinal>
              <family>Clipboard_20190729T173001#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Jake Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Jake Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Jake Points</remote-alias>
              <ordinal>2</ordinal>
              <family>Clipboard_20190729T173001#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>471</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPG</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPG</remote-alias>
              <ordinal>3</ordinal>
              <family>Clipboard_20190729T173001#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.478261' measure-ordering='alphabetic' measure-percentage='0.521739' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='3_years_data' inline='true' name='federated.1o8o9eo1g1psq913n5y1110ylllr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3_years_data' name='textscan.1i9cdui1vf8btu1dgcw091tv9kke'>
            <connection class='textscan' directory='C:/Users/habet/Desktop/Python_Practice/NFL' filename='3_years_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1i9cdui1vf8btu1dgcw091tv9kke' name='Jake_Scoring.csv' table='[Jake_Scoring#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='week_number' ordinal='2' />
            <column datatype='string' name='weather' ordinal='3' />
            <column datatype='integer' name='time_zone' ordinal='4' />
            <column datatype='string' name='game_time' ordinal='5' />
            <column datatype='string' name='stadium' ordinal='6' />
            <column datatype='string' name='roof' ordinal='7' />
            <column datatype='string' name='surface' ordinal='8' />
            <column datatype='string' name='home_team' ordinal='9' />
            <column datatype='string' name='away_team' ordinal='10' />
            <column datatype='string' name='wall_clock' ordinal='11' />
            <column datatype='string' name='offense' ordinal='12' />
            <column datatype='string' name='defense' ordinal='13' />
            <column datatype='integer' name='home_points' ordinal='14' />
            <column datatype='integer' name='away_points' ordinal='15' />
            <column datatype='integer' name='game_play_number' ordinal='16' />
            <column datatype='datetime' name='duration' ordinal='17' />
            <column datatype='integer' name='drive_number' ordinal='18' />
            <column datatype='string' name='start_reason' ordinal='19' />
            <column datatype='string' name='end_reason' ordinal='20' />
            <column datatype='integer' name='plays_in_drive' ordinal='21' />
            <column datatype='integer' name='drive_play_number' ordinal='22' />
            <column datatype='integer' name='quarter' ordinal='23' />
            <column datatype='datetime' name='game_clock' ordinal='24' />
            <column datatype='string' name='field_position' ordinal='25' />
            <column datatype='integer' name='line_of_scrimmage' ordinal='26' />
            <column datatype='integer' name='down' ordinal='27' />
            <column datatype='integer' name='distance' ordinal='28' />
            <column datatype='real' name='play_clock' ordinal='29' />
            <column datatype='string' name='huddle' ordinal='30' />
            <column datatype='string' name='play_type' ordinal='31' />
            <column datatype='string' name='play_result' ordinal='32' />
            <column datatype='real' name='men_in_box' ordinal='33' />
            <column datatype='real' name='players_rushed' ordinal='34' />
            <column datatype='real' name='blitz' ordinal='35' />
            <column datatype='string' name='qb_at_snap' ordinal='36' />
            <column datatype='string' name='play_direction' ordinal='37' />
            <column datatype='string' name='pocket_location' ordinal='38' />
            <column datatype='string' name='pass_route' ordinal='39' />
            <column datatype='integer' name='screen_pass' ordinal='40' />
            <column datatype='real' name='touchdown' ordinal='41' />
            <column datatype='string' name='QB_team' ordinal='42' />
            <column datatype='string' name='QB_name' ordinal='43' />
            <column datatype='real' name='QB_attempt' ordinal='44' />
            <column datatype='real' name='QB_complete' ordinal='45' />
            <column datatype='string' name='QB_incomplete_type' ordinal='46' />
            <column datatype='real' name='QB_air_yards' ordinal='47' />
            <column datatype='real' name='QB_yards' ordinal='48' />
            <column datatype='real' name='QB_firstdown' ordinal='49' />
            <column datatype='real' name='QB_blitz' ordinal='50' />
            <column datatype='real' name='QB_hurry' ordinal='51' />
            <column datatype='real' name='QB_knockdown' ordinal='52' />
            <column datatype='real' name='QB_pocket_time' ordinal='53' />
            <column datatype='real' name='QB_inside20' ordinal='54' />
            <column datatype='real' name='QB_goaltogo' ordinal='55' />
            <column datatype='string' name='flex_team' ordinal='56' />
            <column datatype='string' name='flex_position' ordinal='57' />
            <column datatype='string' name='flex_name' ordinal='58' />
            <column datatype='real' name='flex_yards' ordinal='59' />
            <column datatype='real' name='flex_attempt' ordinal='60' />
            <column datatype='real' name='flex_running_lane' ordinal='61' />
            <column datatype='real' name='flex_brokentackle' ordinal='62' />
            <column datatype='real' name='flex_yacontact' ordinal='63' />
            <column datatype='real' name='flex_target' ordinal='64' />
            <column datatype='real' name='flex_reception' ordinal='65' />
            <column datatype='real' name='flex_yacatch' ordinal='66' />
            <column datatype='real' name='flex_firstdown' ordinal='67' />
            <column datatype='real' name='flex_inside20' ordinal='68' />
            <column datatype='real' name='flex_goaltogo' ordinal='69' />
            <column datatype='real' name='flex_scramble' ordinal='70' />
            <column datatype='real' name='flex_kneel' ordinal='71' />
            <column datatype='real' name='flex_dropped' ordinal='72' />
            <column datatype='string' name='DB_name' ordinal='73' />
            <column datatype='string' name='DB_team' ordinal='74' />
            <column datatype='real' name='DB_target' ordinal='75' />
            <column datatype='real' name='DB_completion' ordinal='76' />
            <column datatype='real' name='DB_tackle' ordinal='77' />
            <column datatype='integer' name='10_zone' ordinal='78' />
            <column datatype='real' name='Jake_Points' ordinal='79' />
            <column datatype='real' name='flex_opportunities' ordinal='80' />
            <column datatype='real' name='flex_touches' ordinal='81' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[week_number]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>week_number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_zone]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>time_zone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_time]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>game_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stadium</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stadium]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>stadium</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>roof</remote-name>
            <remote-type>129</remote-type>
            <local-name>[roof]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>roof</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>surface</remote-name>
            <remote-type>129</remote-type>
            <local-name>[surface]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>surface</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_team]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>home_team</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[away_team]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>away_team</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wall_clock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wall_clock]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>wall_clock</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense</remote-name>
            <remote-type>129</remote-type>
            <local-name>[offense]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>offense</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defense</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defense]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>defense</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_points]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>home_points</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_points]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>away_points</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_play_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[game_play_number]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>game_play_number</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>134</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[drive_number]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>drive_number</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_reason]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>start_reason</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_reason]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>end_reason</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>plays_in_drive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[plays_in_drive]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>plays_in_drive</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_play_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[drive_play_number]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>drive_play_number</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_clock</remote-name>
            <remote-type>134</remote-type>
            <local-name>[game_clock]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>game_clock</remote-alias>
            <ordinal>24</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>field_position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[field_position]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>field_position</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_of_scrimmage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[line_of_scrimmage]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>line_of_scrimmage</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>down</remote-name>
            <remote-type>20</remote-type>
            <local-name>[down]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>down</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_clock</remote-name>
            <remote-type>5</remote-type>
            <local-name>[play_clock]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>play_clock</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>huddle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[huddle]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>huddle</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_type]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>play_type</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_result]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>play_result</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>men_in_box</remote-name>
            <remote-type>5</remote-type>
            <local-name>[men_in_box]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>men_in_box</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>players_rushed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[players_rushed]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>players_rushed</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blitz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[blitz]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>blitz</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qb_at_snap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[qb_at_snap]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>qb_at_snap</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_direction]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>play_direction</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pocket_location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pocket_location]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>pocket_location</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pass_route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pass_route]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>pass_route</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>screen_pass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[screen_pass]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>screen_pass</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>touchdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[touchdown]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>touchdown</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_team]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_team</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_name]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_name</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_attempt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_attempt]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_attempt</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_complete</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_complete]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_complete</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_incomplete_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_incomplete_type]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_incomplete_type</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_air_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_air_yards]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_air_yards</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_yards]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_yards</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_firstdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_firstdown]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_firstdown</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_blitz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_blitz]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_blitz</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_hurry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_hurry]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_hurry</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_knockdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_knockdown]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_knockdown</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_pocket_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_pocket_time]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_pocket_time</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_inside20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_inside20]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_inside20</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_goaltogo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_goaltogo]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>QB_goaltogo</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_team]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_team</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_position]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_position</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_name]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_name</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yards]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_yards</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_attempt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_attempt]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_attempt</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_running_lane</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_running_lane]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_running_lane</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_brokentackle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_brokentackle]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_brokentackle</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yacontact</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yacontact]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_yacontact</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_target]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_target</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_reception</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_reception]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_reception</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yacatch</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yacatch]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_yacatch</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_firstdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_firstdown]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_firstdown</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_inside20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_inside20]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_inside20</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_goaltogo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_goaltogo]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_goaltogo</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_scramble</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_scramble]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_scramble</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_kneel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_kneel]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_kneel</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_dropped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_dropped]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_dropped</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DB_name]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>DB_name</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DB_team]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>DB_team</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_target]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>DB_target</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_completion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_completion]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>DB_completion</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_tackle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_tackle]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>DB_tackle</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10_zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10_zone]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>10_zone</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jake_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jake_Points]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>Jake_Points</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_opportunities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_opportunities]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_opportunities</remote-alias>
            <ordinal>80</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_touches</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_touches]</local-name>
            <parent-name>[Jake_Scoring.csv]</parent-name>
            <remote-alias>flex_touches</remote-alias>
            <ordinal>81</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='10 Zone' datatype='integer' name='[10_zone]' role='dimension' type='ordinal' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[cum:ctd:flex_opportunities:qk]&quot;' value='Rank' />
          <alias key='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915676925952:qk]&quot;' value='ADOT' />
        </aliases>
      </column>
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(COUNTD([flex_opportunities]))'>
          <table-calc ordering-field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Flex Opportunity' datatype='real' name='[Calculation_1195142765681205248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([flex_attempt]) + sum([flex_target])' />
      </column>
      <column caption='Blitz Reception' datatype='real' name='[Calculation_225179997269442561]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF ([blitz] = 1.0, [flex_reception], 0)' />
      </column>
      <column caption='Blitz Target' datatype='real' name='[Calculation_225179997272903682]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([blitz] = 1, [flex_target],0)' />
      </column>
      <column caption='Blitz Catch Rate' datatype='real' name='[Calculation_225179997273071619]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_225179997269442561])/sum([Calculation_225179997272903682])' />
      </column>
      <column caption='Completion Percentage' datatype='real' name='[Calculation_225179997274169348]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([QB_complete])/sum([QB_attempt])' />
      </column>
      <column caption='Blitz Attempts' datatype='real' name='[Calculation_225179997274464261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([blitz] = 1, [QB_attempt], 0)' />
      </column>
      <column caption='Blitz Completion' datatype='real' name='[Calculation_225179997274611718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([blitz] = 1, [QB_complete],0)' />
      </column>
      <column caption='Blitz Completion Percentage' datatype='real' name='[Calculation_225179997274689543]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_225179997274611718])/sum([Calculation_225179997274464261])' />
      </column>
      <column caption='QB Blitz Improvement' datatype='real' name='[Calculation_225179997278126088]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_225179997274689543] - [Calculation_225179997274169348]' />
      </column>
      <column caption='Avg Air Yards' datatype='real' name='[Calculation_310466915676925952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([QB_air_yards])' />
      </column>
      <column caption='Targets per Game' datatype='real' name='[Calculation_310466915677716481]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([flex_target])/COUNTD([week_number])' />
      </column>
      <column caption='Air Yards Per Game' datatype='real' name='[Calculation_310466915678015490]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([QB_air_yards])/COUNTD([week_number])' />
      </column>
      <column caption='Fantasy Points per Game' datatype='real' name='[Calculation_310466915678724099]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Jake_Points])/COUNTD([week_number])' />
      </column>
      <column caption='Points Per Target' datatype='real' name='[Calculation_310466915679125508]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_310466915678724099]/[Calculation_310466915677716481]' />
      </column>
      <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
      </column>
      <column caption='Total Target Volume' datatype='string' name='[Calculation_904097646302031883]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF INT(sum([flex_target])) &gt;100 then &apos;Over 100&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 74 then &apos;75-99&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 49 then &apos;50 - 74&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 0 then &apos;&lt; 50&apos;&#13;&#10;END' />
      </column>
      <column caption='Games Played' datatype='integer' name='[Calculation_929711862915489792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd([week_number])' />
      </column>
      <column caption='Points Per Game' datatype='real' name='[Calculation_929711862915624961]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Jake_Points])/[Calculation_929711862915489792]' />
      </column>
      <column caption='Touches' datatype='real' name='[Calculation_929711862986338306]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([flex_attempt]) + sum([flex_reception])' />
      </column>
      <column caption='First Down Rate' datatype='real' name='[Calculation_929711862993539075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([flex_firstdown])/[Calculation_929711862986338306]' />
      </column>
      <column caption='DB completion' datatype='real' name='[DB_completion]' role='measure' type='quantitative' />
      <column caption='DB name' datatype='string' name='[DB_name]' role='dimension' type='nominal' />
      <column caption='DB tackle' datatype='real' name='[DB_tackle]' role='measure' type='quantitative' />
      <column caption='DB target' datatype='real' name='[DB_target]' role='measure' type='quantitative' />
      <column caption='DB team' datatype='string' name='[DB_team]' role='dimension' type='nominal' />
      <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='QB air yards (bin)' datatype='integer' name='[QB air yards (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[QB_air_yards]' peg='0' size='5' />
      </column>
      <column aggregation='None' caption='QB pocket time (bin)' datatype='integer' name='[QB pocket time (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[QB_pocket_time]' peg='0' size='1' />
      </column>
      <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
      <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
      <column caption='QB blitz' datatype='real' name='[QB_blitz]' role='measure' type='quantitative' />
      <column caption='QB complete' datatype='real' name='[QB_complete]' role='measure' type='quantitative' />
      <column caption='QB firstdown' datatype='real' name='[QB_firstdown]' role='measure' type='quantitative' />
      <column caption='QB goaltogo' datatype='real' name='[QB_goaltogo]' role='measure' type='quantitative' />
      <column caption='QB hurry' datatype='real' name='[QB_hurry]' role='measure' type='quantitative' />
      <column caption='QB incomplete type' datatype='string' name='[QB_incomplete_type]' role='dimension' type='nominal' />
      <column caption='QB inside20' datatype='real' name='[QB_inside20]' role='measure' type='quantitative' />
      <column caption='QB knockdown' datatype='real' name='[QB_knockdown]' role='measure' type='quantitative' />
      <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='QB pocket time' datatype='real' name='[QB_pocket_time]' role='dimension' type='ordinal' />
      <column caption='QB team' datatype='string' name='[QB_team]' role='dimension' type='nominal' />
      <column caption='QB yards' datatype='real' name='[QB_yards]' role='measure' type='quantitative' />
      <column caption='Away Points' datatype='integer' name='[away_points]' role='measure' type='quantitative' />
      <column caption='Away Team' datatype='string' name='[away_team]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Blitz' datatype='real' name='[blitz]' role='dimension' type='ordinal' />
      <column caption='Distance' datatype='integer' name='[distance]' role='measure' type='quantitative' />
      <column caption='Down' datatype='integer' name='[down]' role='measure' type='quantitative' />
      <column caption='Drive Number' datatype='integer' name='[drive_number]' role='dimension' type='ordinal' />
      <column caption='Drive Play Number' datatype='integer' name='[drive_play_number]' role='dimension' type='ordinal' />
      <column aggregation='Hour' caption='Duration' datatype='datetime' name='[duration]' role='dimension' type='ordinal' />
      <column caption='End Reason' datatype='string' name='[end_reason]' role='dimension' type='nominal' />
      <column caption='Field Position' datatype='string' name='[field_position]' role='dimension' type='nominal' />
      <column caption='Flex Attempt' datatype='real' name='[flex_attempt]' role='measure' type='quantitative' />
      <column caption='Flex Brokentackle' datatype='real' name='[flex_brokentackle]' role='measure' type='quantitative' />
      <column caption='Flex Dropped' datatype='real' name='[flex_dropped]' role='measure' type='quantitative' />
      <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
      <column caption='Flex Goaltogo' datatype='real' name='[flex_goaltogo]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Flex Inside20' datatype='real' name='[flex_inside20]' role='dimension' type='ordinal' />
      <column caption='Flex Kneel' datatype='real' name='[flex_kneel]' role='measure' type='quantitative' />
      <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
      <column datatype='real' name='[flex_opportunities]' role='measure' type='quantitative' />
      <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
      <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
      <column caption='Flex Running Lane' datatype='real' name='[flex_running_lane]' role='measure' type='quantitative' />
      <column caption='Flex Scramble' datatype='real' name='[flex_scramble]' role='measure' type='quantitative' />
      <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
      <column caption='Flex Team' datatype='string' name='[flex_team]' role='dimension' type='nominal' />
      <column caption='Flex Yacatch' datatype='real' name='[flex_yacatch]' role='measure' type='quantitative' />
      <column caption='Flex Yacontact' datatype='real' name='[flex_yacontact]' role='measure' type='quantitative' />
      <column caption='Flex Yards' datatype='real' name='[flex_yards]' role='measure' type='quantitative' />
      <column aggregation='Hour' caption='Game Clock' datatype='datetime' name='[game_clock]' role='dimension' type='ordinal' />
      <column caption='Game Play Number' datatype='integer' name='[game_play_number]' role='dimension' type='ordinal' />
      <column caption='Game Time' datatype='string' name='[game_time]' role='dimension' type='nominal' />
      <column caption='Home Points' datatype='integer' name='[home_points]' role='measure' type='quantitative' />
      <column caption='Home Team' datatype='string' name='[home_team]' role='dimension' type='nominal' />
      <column caption='Huddle' datatype='string' name='[huddle]' role='dimension' type='nominal' />
      <column caption='Line Of Scrimmage' datatype='integer' name='[line_of_scrimmage]' role='measure' type='quantitative' />
      <column caption='Men In Box' datatype='real' name='[men_in_box]' role='measure' type='quantitative' />
      <column caption='Offense' datatype='string' name='[offense]' role='dimension' type='nominal' />
      <column caption='Pass Route' datatype='string' name='[pass_route]' role='dimension' type='nominal' />
      <column caption='Play Clock' datatype='real' name='[play_clock]' role='measure' type='quantitative' />
      <column caption='Play Direction' datatype='string' name='[play_direction]' role='dimension' type='nominal' />
      <column caption='Play Result' datatype='string' name='[play_result]' role='dimension' type='nominal' />
      <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
      <column caption='Players Rushed' datatype='real' name='[players_rushed]' role='measure' type='quantitative' />
      <column caption='Plays In Drive' datatype='integer' name='[plays_in_drive]' role='measure' type='quantitative' />
      <column caption='Pocket Location' datatype='string' name='[pocket_location]' role='dimension' type='nominal' />
      <column caption='Qb At Snap' datatype='string' name='[qb_at_snap]' role='dimension' type='nominal' />
      <column caption='Quarter' datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column caption='Roof' datatype='string' name='[roof]' role='dimension' type='nominal' />
      <column caption='Screen Pass' datatype='integer' name='[screen_pass]' role='measure' type='quantitative' />
      <column caption='Stadium' datatype='string' name='[stadium]' role='dimension' type='nominal' />
      <column caption='Start Reason' datatype='string' name='[start_reason]' role='dimension' type='nominal' />
      <column caption='Surface' datatype='string' name='[surface]' role='dimension' type='nominal' />
      <column caption='Time Zone' datatype='integer' name='[time_zone]' role='measure' type='quantitative' />
      <column caption='Touchdown' datatype='real' name='[touchdown]' role='measure' type='quantitative' />
      <column caption='Wall Clock' datatype='string' name='[wall_clock]' role='dimension' type='nominal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[flex_position]' derivation='Attribute' name='[attr:flex_position:nk]' pivot='key' type='nominal' />
      <column-instance column='[QB_air_yards]' derivation='Avg' name='[avg:QB_air_yards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flex_target]' derivation='Avg' name='[avg:flex_target:qk]' pivot='key' type='quantitative' />
      <column-instance column='[play_clock]' derivation='Avg' name='[avg:play_clock:qk]' pivot='key' type='quantitative' />
      <column-instance column='[game_play_number]' derivation='Count' name='[cnt:game_play_number:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flex_opportunities]' derivation='CountD' name='[cum:ctd:flex_opportunities:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
      </column-instance>
      <column-instance column='[AJ Green Games]' derivation='InOut' name='[io:AJ Green Games:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='W/O AJ Green' />
          <alias key='true' value='W/ AJ Green' />
        </aliases>
      </column-instance>
      <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
      <column-instance column='[week_number]' derivation='None' name='[none:week_number:ok]' pivot='key' type='ordinal' />
      <column-instance column='[flex_target]' derivation='Sum' name='[pcto:sum:flex_target:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[flex_target]' derivation='Sum' name='[pcto:sum:flex_target:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[flex_target]' derivation='Sum' name='[pcto:sum:flex_target:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[flex_target]' derivation='Sum' name='[pcto:sum:flex_target:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1195142765681205248]' derivation='Sum' name='[sum:Calculation_1195142765681205248:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flex_firstdown]' derivation='Sum' name='[sum:flex_firstdown:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
      <column-instance column='[play_clock]' derivation='Sum' name='[sum:play_clock:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1195142765681205248]' derivation='User' name='[usr:Calculation_1195142765681205248:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_225179997274169348]' derivation='User' name='[usr:Calculation_225179997274169348:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_225179997274689543]' derivation='User' name='[usr:Calculation_225179997274689543:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_225179997278126088]' derivation='User' name='[usr:Calculation_225179997278126088:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_310466915676925952]' derivation='User' name='[usr:Calculation_310466915676925952:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_310466915677716481]' derivation='User' name='[usr:Calculation_310466915677716481:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_310466915678015490]' derivation='User' name='[usr:Calculation_310466915678015490:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_310466915678724099]' derivation='User' name='[usr:Calculation_310466915678724099:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_310466915679125508]' derivation='User' name='[usr:Calculation_310466915679125508:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
      <group caption='AJ Green Games' name='[AJ Green Games]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:week_number:ok]' member='1' />
          <groupfilter function='member' level='[none:week_number:ok]' member='2' />
          <groupfilter function='member' level='[none:week_number:ok]' member='3' />
          <groupfilter function='member' level='[none:week_number:ok]' member='4' />
          <groupfilter function='member' level='[none:week_number:ok]' member='5' />
          <groupfilter function='member' level='[none:week_number:ok]' member='6' />
          <groupfilter function='member' level='[none:week_number:ok]' member='7' />
          <groupfilter function='member' level='[none:week_number:ok]' member='8' />
        </groupfilter>
      </group>
      <group caption='Deep Targets' name='[Deep Targets]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='20.0' function='range' level='[QB_air_yards]' to='61.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Starting QBs' name='[Starting QBs]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[QB_name]' member='&quot;Aaron Rodgers&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Alex Smith&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Andrew Luck&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Andy Dalton&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Baker Mayfield&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Ben Roethlisberger&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Blake Bortles&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Cam Newton&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Carson Wentz&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Dak Prescott&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Derek Carr&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Deshaun Watson&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Drew Brees&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Eli Manning&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Jameis Winston&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Jared Goff&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Jimmy Garoppolo&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Joe Flacco&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Josh Allen&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Josh Rosen&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Kirk Cousins&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Lamar Jackson&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Marcus Mariota&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Matt Ryan&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Matthew Stafford&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Mitchell Trubisky&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Nick Foles&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Patrick Mahomes II&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Philip Rivers&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Russell Wilson&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Ryan Fitzpatrick&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Sam Darnold&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Tom Brady&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/habet/Documents/My Tableau Repository/Datasources/3_years_data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2019 07:53:15 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='3_years_data' increment-value='%null%' refresh-type='create' rows-inserted='101132' timestamp-start='2019-08-11 07:53:15.028' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101132</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>week_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[week_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>week_number</remote-alias>
              <ordinal>2</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weather]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather</remote-alias>
              <ordinal>3</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2466</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_zone</remote-name>
              <remote-type>20</remote-type>
              <local-name>[time_zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_zone</remote-alias>
              <ordinal>4</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[game_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_time</remote-alias>
              <ordinal>5</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>924</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stadium</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stadium]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stadium</remote-alias>
              <ordinal>6</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>roof</remote-name>
              <remote-type>129</remote-type>
              <local-name>[roof]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>roof</remote-alias>
              <ordinal>7</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>surface</remote-name>
              <remote-type>129</remote-type>
              <local-name>[surface]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>surface</remote-alias>
              <ordinal>8</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[home_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_team</remote-alias>
              <ordinal>9</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[away_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_team</remote-alias>
              <ordinal>10</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wall_clock</remote-name>
              <remote-type>129</remote-type>
              <local-name>[wall_clock]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wall_clock</remote-alias>
              <ordinal>11</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>95473</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offense</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offense]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offense</remote-alias>
              <ordinal>12</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>defense</remote-name>
              <remote-type>129</remote-type>
              <local-name>[defense]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>defense</remote-alias>
              <ordinal>13</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_points</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_points</remote-alias>
              <ordinal>14</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_points</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_points</remote-alias>
              <ordinal>15</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_play_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[game_play_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_play_number</remote-alias>
              <ordinal>16</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration</remote-name>
              <remote-type>134</remote-type>
              <local-name>[duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration</remote-alias>
              <ordinal>17</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>1432</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>drive_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[drive_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>drive_number</remote-alias>
              <ordinal>18</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start_reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_reason</remote-alias>
              <ordinal>19</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end_reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_reason</remote-alias>
              <ordinal>20</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>plays_in_drive</remote-name>
              <remote-type>20</remote-type>
              <local-name>[plays_in_drive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>plays_in_drive</remote-alias>
              <ordinal>21</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>drive_play_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[drive_play_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>drive_play_number</remote-alias>
              <ordinal>22</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quarter</remote-name>
              <remote-type>20</remote-type>
              <local-name>[quarter]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quarter</remote-alias>
              <ordinal>23</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_clock</remote-name>
              <remote-type>134</remote-type>
              <local-name>[game_clock]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_clock</remote-alias>
              <ordinal>24</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>3377</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>field_position</remote-name>
              <remote-type>129</remote-type>
              <local-name>[field_position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>field_position</remote-alias>
              <ordinal>25</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line_of_scrimmage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[line_of_scrimmage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line_of_scrimmage</remote-alias>
              <ordinal>26</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>down</remote-name>
              <remote-type>20</remote-type>
              <local-name>[down]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>down</remote-alias>
              <ordinal>27</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance</remote-name>
              <remote-type>20</remote-type>
              <local-name>[distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance</remote-alias>
              <ordinal>28</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>play_clock</remote-name>
              <remote-type>5</remote-type>
              <local-name>[play_clock]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>play_clock</remote-alias>
              <ordinal>29</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>huddle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[huddle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>huddle</remote-alias>
              <ordinal>30</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>play_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[play_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>play_type</remote-alias>
              <ordinal>31</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>play_result</remote-name>
              <remote-type>129</remote-type>
              <local-name>[play_result]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>play_result</remote-alias>
              <ordinal>32</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>men_in_box</remote-name>
              <remote-type>5</remote-type>
              <local-name>[men_in_box]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>men_in_box</remote-alias>
              <ordinal>33</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>players_rushed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[players_rushed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>players_rushed</remote-alias>
              <ordinal>34</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>blitz</remote-name>
              <remote-type>5</remote-type>
              <local-name>[blitz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>blitz</remote-alias>
              <ordinal>35</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>qb_at_snap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[qb_at_snap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>qb_at_snap</remote-alias>
              <ordinal>36</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>play_direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[play_direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>play_direction</remote-alias>
              <ordinal>37</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pocket_location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pocket_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pocket_location</remote-alias>
              <ordinal>38</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pass_route</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pass_route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pass_route</remote-alias>
              <ordinal>39</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>screen_pass</remote-name>
              <remote-type>20</remote-type>
              <local-name>[screen_pass]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>screen_pass</remote-alias>
              <ordinal>40</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>touchdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[touchdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>touchdown</remote-alias>
              <ordinal>41</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[QB_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_team</remote-alias>
              <ordinal>42</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[QB_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_name</remote-alias>
              <ordinal>43</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>158</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_attempt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_attempt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_attempt</remote-alias>
              <ordinal>44</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_complete</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_complete]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_complete</remote-alias>
              <ordinal>45</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_incomplete_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[QB_incomplete_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_incomplete_type</remote-alias>
              <ordinal>46</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_air_yards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_air_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_air_yards</remote-alias>
              <ordinal>47</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_yards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_yards</remote-alias>
              <ordinal>48</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>132</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_firstdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_firstdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_firstdown</remote-alias>
              <ordinal>49</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_blitz</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_blitz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_blitz</remote-alias>
              <ordinal>50</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_hurry</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_hurry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_hurry</remote-alias>
              <ordinal>51</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_knockdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_knockdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_knockdown</remote-alias>
              <ordinal>52</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_pocket_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_pocket_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_pocket_time</remote-alias>
              <ordinal>53</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8110</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_inside20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_inside20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_inside20</remote-alias>
              <ordinal>54</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_goaltogo</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_goaltogo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_goaltogo</remote-alias>
              <ordinal>55</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[flex_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_team</remote-alias>
              <ordinal>56</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_position</remote-name>
              <remote-type>129</remote-type>
              <local-name>[flex_position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_position</remote-alias>
              <ordinal>57</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[flex_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_name</remote-alias>
              <ordinal>58</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1664</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_yards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_yards</remote-alias>
              <ordinal>59</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>147</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_attempt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_attempt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_attempt</remote-alias>
              <ordinal>60</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_running_lane</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_running_lane]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_running_lane</remote-alias>
              <ordinal>61</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_brokentackle</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_brokentackle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_brokentackle</remote-alias>
              <ordinal>62</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_yacontact</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_yacontact]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_yacontact</remote-alias>
              <ordinal>63</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_target</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_target]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_target</remote-alias>
              <ordinal>64</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_reception</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_reception]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_reception</remote-alias>
              <ordinal>65</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_yacatch</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_yacatch]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_yacatch</remote-alias>
              <ordinal>66</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_firstdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_firstdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_firstdown</remote-alias>
              <ordinal>67</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_inside20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_inside20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_inside20</remote-alias>
              <ordinal>68</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_goaltogo</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_goaltogo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_goaltogo</remote-alias>
              <ordinal>69</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_scramble</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_scramble]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_scramble</remote-alias>
              <ordinal>70</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_kneel</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_kneel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_kneel</remote-alias>
              <ordinal>71</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_dropped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_dropped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_dropped</remote-alias>
              <ordinal>72</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DB_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_name</remote-alias>
              <ordinal>73</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2283</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DB_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_team</remote-alias>
              <ordinal>74</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_target</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DB_target]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_target</remote-alias>
              <ordinal>75</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_completion</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DB_completion]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_completion</remote-alias>
              <ordinal>76</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_tackle</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DB_tackle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_tackle</remote-alias>
              <ordinal>77</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>10_zone</remote-name>
              <remote-type>20</remote-type>
              <local-name>[10_zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>10_zone</remote-alias>
              <ordinal>78</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Jake_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Jake_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Jake_Points</remote-alias>
              <ordinal>79</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_opportunities</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_opportunities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_opportunities</remote-alias>
              <ordinal>80</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_touches</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_touches]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_touches</remote-alias>
              <ordinal>81</ordinal>
              <family>Jake_Scoring.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.440741' group-percentage='0.144444' measure-ordering='alphabetic' measure-percentage='0.414815' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[attr:flex_position:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:flex_position:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;K&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OL&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;QB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:QB_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Carson Wentz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Rivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kirk Cousins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aaron Rodgers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baker Mayfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Stafford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tom Brady&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dak Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russell Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ben Roethlisberger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitchell Trubisky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Josh Allen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lamar Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jimmy Garoppolo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blake Bortles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Drew Brees&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nick Foles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eli Manning&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jameis Winston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joe Flacco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Josh Rosen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Derek Carr&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Fitzpatrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cam Newton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Mahomes II&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andrew Luck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcus Mariota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jared Goff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Deshaun Watson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sam Darnold&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andy Dalton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Ryan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:flex_position:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:flex_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Peterson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andre Roberts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benjamin Watson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Hoyer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carson Wentz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Moore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;D.J. Moore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Darren Waller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Demaryius Thomas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dion Lewis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eric Ebron&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Olsen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jalen Richard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Javorius Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joe Mixon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordy Nelson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Justin Hunter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keon Hatcher&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leonte Carroo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marquez Valdes-Scantling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Burton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neal Sterling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pharoh Cooper&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rishard Matthews&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ryan Grant&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sony Michel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ted Ginn Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trent Sherfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virgil Green&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allen Hurns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Auden Tate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandon LaFell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Calvin Ridley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chris Carson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cordarrelle Patterson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danny Amendola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;De&apos;Anthony Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deshaun Watson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dwayne Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Geoff Swaim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;J&apos;Mon Moore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamize Olawale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Sprinkle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan Akins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Josh Rosen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Keke Coutee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lamar Miller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marcus Kemp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matt Lengel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Wallace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nyheim Hines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rex Burkhead&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ronald Jones II&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saquon Barkley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taquan Mizzell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tommy Bohanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tyler Lockett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zay Jones&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aaron Rodgers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alvin Kamara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austin Seferian-Jenkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brandon Wilds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameron Artis-Payne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chris Hogan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corey Grant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darrel Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeAndre Washington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Devin Funchess&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elijah McGuire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Geremy Davis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jacquizz Rodgers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jaron Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jesse James&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan Matthews&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Julian Edelman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenneth Dixon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latavius Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mark Ingram II&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maurice Harris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mohamed Sanu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patrick DiMarco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ricky Ortiz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russell Gage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seth DeValve&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taylor Gabriel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Travis Benjamin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tyrone Swoopes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Albert Wilson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andy Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blaine Gabbert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brock Osweiler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad Kelly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christine Michael&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Goedert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dave Williams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Derek Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dontrelle Inman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Evan Engram&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ian Thomas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamal Agnew&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jeff Driskel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John Kelly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Doctson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kamar Aiken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Khari Lee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Logan Thomas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marvin Hall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Roberts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nick Chubb&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pierre Garcon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Robert Foster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ryan Switzer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stefon Diggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tevin Coleman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trey Quinn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Will Dissly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AJ McCarron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andrew Luck&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bennie Fowler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Parker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Case Keenum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Thompson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D&apos;Onta Foreman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Darrius Heyward-Bey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Demetrius Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dion Sims&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eric Saubert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gus Edwards&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jalen Tolliver&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jawill Davis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joe Staley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Josh Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kerryon Johnson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LeSean McCoy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marquise Goodwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Crabtree&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nelson Agholor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philip Rivers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;River Cracraft&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Griffin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spencer Pulley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Teddy Bridgewater&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trent Taylor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vyncint Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Humphries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amari Cooper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baker Mayfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brandon Zylstra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameron Brate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chris Ivory&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Courtland Sutton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Darrell Daniels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dede Westbrook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Devonta Freeman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elijhaa Penny&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Geronimo Allison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jake Butt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jarvis Landry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jimmy Garoppolo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan Reed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julio Jones&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenny Golladay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lee Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mark Sanchez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maxx Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MyCole Pruitt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patrick Mahomes II&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ricky Seals-Jones&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russell Shepard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seth Roberts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taylor Heinicke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Travis Kelce&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vance McDonald&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alfred Blue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Antonio Gates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brandin Cooks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C.J. Prosise&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chase Edmonds&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colt McCoy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dan Arnold&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;David Njoku&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Derrick Willies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dwayne Allen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gehrig Dieter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J.J. Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James White&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jeremy Langford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jonathan Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Josh Perkins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Keith Kirkwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyle Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marcell Ateman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Matt Flanagan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mike Gillislee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niles Paul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rashard Higgins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roc Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sammie Coates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taiwan Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Todd Gurley II&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tyler Higbee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zach Pascal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A.J. Derby&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allen Lazard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin Carr&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon Marshall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cam Batson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Conley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corey Clement&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dante Pettis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;De&apos;Lance Turner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DeShone Kizer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ed Dickson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Fant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack Doyle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jared Cook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jermaine Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan Franks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joshua Dobbs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kelvin Benjamin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lance Kendricks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcus Mariota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Matt Ryan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;O.J. Howard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhett Ellison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roosevelt Nix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scott Simonson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tarik Cohen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tommylee Lewis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyreek Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alex Erickson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antonio Brown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bobo Wilson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C.J. Beathard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charone Peake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cole Beasley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damiere Byrd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;David Moore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Derrick Coleman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Duke Johnson Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garrett Celek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ito Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;James O&apos;Shaughnessy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeremy Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Johnny Mundt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Josh Malone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Keenan Allen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyle Lauletta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malik Turner&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Matt Breida&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mike Evans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nick Vannett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rashaad Penny&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Robert Turbin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sam Hubbard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T.J. Yeldon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tim White&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tyler Eifert&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zach Ertz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adam Shaheen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ameer Abdullah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ben Braunecker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Breshad Perriman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameron Meredith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Lacy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curtis Samuel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darren Fells&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delanie Walker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Devontae Booker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Emmanuel Sanders&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Giovani Bernard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jake Kumerow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jason Croom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmy Graham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan Thomas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Justin Davis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenny Stills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LeGarrette Blount&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mark Walton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melvin Gordon III&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nate Sudfeld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paul Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rico Gathers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russell Wilson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shaun Wilson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taysom Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tre Madden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vernon Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aldrick Robinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony Firkser&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blake Bell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bruce Ellington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad Williams&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cody Core&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dalton Schultz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;David Fluellen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Derek Carr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Doug Baldwin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ezekiel Elliott&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isaiah Crowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jameis Winston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jeff Heuerman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Phillips&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Gordon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kapri Bibbs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kirk Cousins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luke Stocker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marvin Jones Jr.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michael Thomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nick Foles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy Enunwa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Griffin III&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryan Tannehill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sterling Shepard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Theo Riddick&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ty Montgomery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Will Fuller V&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alex Armah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Miller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blake Bortles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Byron Marshall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charcandrick West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cody Kessler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dalvin Cook&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;David Grinnage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Derek Carrier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Doug Martin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Frank Gore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isaiah Ford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;James Conner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jeff Wilson Jr.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Ross&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Josh Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kareem Hunt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyle Allen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luke Willson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mason Crosby&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mike Boone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nick Mullens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raheem Mostert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Robert Kelley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sam Bradford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stevan Ridley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tim Boyle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyler Boyd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Willie Snead IV&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alex Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antonio Callaway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bradley Sowell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C.J. Ham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chase Daniel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cole Wick&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damion Ratley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David Morgan II&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Derrick Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Durham Smythe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garrett Gilbert&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J.D. McKissic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James Washington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeremy Kerley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jonathan Stewart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Josh McCown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keith Ford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyle Rudolph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcedes Lewis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matt Cassel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mike Gesicki&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nick Williams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rashad Greene&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robert Woods&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samaje Perine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T.Y. Hilton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TJ Jones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tyler Ervin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zach Line&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alfred Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Antony Auclair&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brandon Bolden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C.J. Uzomah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chester Rogers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cooper Kupp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dan Vitale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;De&apos;Angelo Henderson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeSean Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dwayne Harris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Geno Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J.J. Nelson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamison Crowder&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jeremy McNichols&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jonnu Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Josh Reynolds&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Keith Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lamar Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marcus Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matt LaCosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mike Glennon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noah Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ray-Ray McCloud&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rod Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sammy Watkins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tajae Sharpe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tom Brady&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tyler Kroft&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zach Zenner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Akiem Hicks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andy Dalton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Benny Cunningham Jr.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Quick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chad Beebe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christian Kirk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DaeSean Hamilton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Darvin Kidsy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deontay Burnett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Donte Moncrief&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eric Tomlinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hakeem Valles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaal Charles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jay Ajayi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Webb III&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Josh Allen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Watson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kevin White&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Levine Toilolo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshawn Lynch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Floyd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nick Bellore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phillip Dorsett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rob Gronkowski&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Hewitt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spencer Ware&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Terrance Williams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trenton Cannon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wayne Gallman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adam Thielen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andre Holmes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ben Roethlisberger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Hyde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris Manhertz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;D.J. Chark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darren Sproles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Demarcus Robinson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dion Dawkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Equanimeous St. Brown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Golden Tate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jakeem Grant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Javon Wims&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joe Flacco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan Wilkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Justin Hardy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenyan Drake&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leonard Fournette&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marlon Mack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melvin Ingram&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nathan Peterman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peyton Barber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riley McCarron&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ryan Fitzpatrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shelton Gibson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taywan Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tre&apos;Quan Smith&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Victor Bolden Jr.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A.J. Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen Robinson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austin Ekeler&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brandon Powell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cam Newton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Godwin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corey Coleman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darius Jackson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DeAndre Carter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Detrez Newsome&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eli Manning&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;George Kittle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jacob Hollister&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Goff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jermaine Kearse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan Howard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jourdan Lewis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kendrick Bourne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laquon Treadwell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcus Murphy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matt Schaub&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mitchell Trubisky&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Odell Beckham Jr.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richard Rodgers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ross Dwelley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sean Culkin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tavon Austin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Torrey Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tyrell Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alex Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Sherman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blake Jarwin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;C.J. Anderson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charles Clay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cody Latimer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damien Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;David Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Derek Watt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drew Brees&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Freddie Martino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isaiah McKenzie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;James Develin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jehu Chesson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Johnny Holton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Josh Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Keelan Cole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyle Juszczyk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malcolm Brown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matt Barkley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mike Davis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nick O&apos;Leary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Randall Cobb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robert Tonyan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sam Darnold&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T.J. Logan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tim Patrick&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tyler Conklin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xavier Grimble&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Cross&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andy Janovich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bilal Powell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brice Butler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad Henne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christian McCaffrey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dak Prescott&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Davante Adams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Deonte Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dontrell Hilliard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erik Swoope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hayden Hurst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaal Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaylen Samuels&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John Brown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Bellamy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalen Ballage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khadarel Hodge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Logan Paulsen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martavis Bryant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michael Gallup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nick Boyle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phillip Lindsay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robby Anderson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Kelly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stacy Coley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terrelle Pryor Sr.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trey Burton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wendell Smallwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aaron Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alshon Jeffery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austin Hooper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brandon Weeden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cam Phillips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Herndon IV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corey Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darius Jennings&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DeAndre Hopkins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DeVante Parker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eli Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gerald Everett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jacoby Brissett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jarius Wright&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerome Cunningham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan Leggett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JuJu Smith-Schuster&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenjon Barner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Larry Fitzgerald&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mark Andrews&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matthew Stafford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mo Alie-Cox&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orson Charles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richie James Jr.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Royce Freeman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sean Mannion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor Decker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Travaris Cadet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyrod Taylor&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[avg:flex_target:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915676925952:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_1195142765681205248:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_1195142765681205248:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915677716481:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997278126088:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[avg:QB_air_yards:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[avg:play_clock:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_firstdown:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:play_clock:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678015490:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[cnt:game_play_number:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='2019_projections' inline='true' name='federated.1skaesq15pftoe1elgwtm0ctjne1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2019_projections' name='textscan.0tc38wx09rkfwi1c5dwqv1tv5s2n'>
            <connection class='textscan' directory='C:/Users/habet/Desktop/Python_Practice/NFL' filename='2019_projections.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0tc38wx09rkfwi1c5dwqv1tv5s2n' name='2019_projections.csv' table='[2019_projections#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Player' ordinal='0' />
            <column datatype='string' name='Team' ordinal='1' />
            <column datatype='integer' name='ATT' ordinal='2' />
            <column datatype='integer' name='YDS' ordinal='3' />
            <column datatype='integer' name='TDS' ordinal='4' />
            <column datatype='integer' name='REC' ordinal='5' />
            <column datatype='integer' name='YDS 1' ordinal='6' />
            <column datatype='integer' name='TDS 1' ordinal='7' />
            <column datatype='string' name='POS' ordinal='8' />
            <column datatype='integer' name='Touches' ordinal='9' />
            <column datatype='integer' name='First Down Rate' ordinal='10' />
            <column datatype='integer' name='flex_firstdown' ordinal='11' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ATT]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>ATT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YDS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YDS]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>YDS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TDS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TDS]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>TDS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[REC]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>REC</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YDS 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YDS 1]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>YDS 1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TDS 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TDS 1]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>TDS 1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[POS]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>POS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Touches</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Touches]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>Touches</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Down Rate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[First Down Rate]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>First Down Rate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_firstdown</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flex_firstdown]</local-name>
            <parent-name>[2019_projections.csv]</parent-name>
            <remote-alias>flex_firstdown</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Tds 1' datatype='integer' name='[TDS 1]' role='measure' type='quantitative' />
      <column caption='Yds 1' datatype='integer' name='[YDS 1]' role='measure' type='quantitative' />
      <column caption='Flex Firstdown' datatype='integer' name='[flex_firstdown]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/habet/Documents/My Tableau Repository/Datasources/2019_projections.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2019 07:52:44 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='2019_projections' increment-value='%null%' refresh-type='create' rows-inserted='611' timestamp-start='2019-08-11 07:52:44.500' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Player</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Player]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Player</remote-alias>
              <ordinal>0</ordinal>
              <family>2019_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>605</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>1</ordinal>
              <family>2019_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ATT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ATT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ATT</remote-alias>
              <ordinal>2</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YDS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YDS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YDS</remote-alias>
              <ordinal>3</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TDS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TDS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TDS</remote-alias>
              <ordinal>4</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>REC</remote-name>
              <remote-type>20</remote-type>
              <local-name>[REC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>REC</remote-alias>
              <ordinal>5</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YDS 1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YDS 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YDS 1</remote-alias>
              <ordinal>6</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TDS 1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TDS 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TDS 1</remote-alias>
              <ordinal>7</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>POS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[POS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>POS</remote-alias>
              <ordinal>8</ordinal>
              <family>2019_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Touches</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Touches]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Touches</remote-alias>
              <ordinal>9</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>First Down Rate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[First Down Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>First Down Rate</remote-alias>
              <ordinal>10</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_firstdown</remote-name>
              <remote-type>20</remote-type>
              <local-name>[flex_firstdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_firstdown</remote-alias>
              <ordinal>11</ordinal>
              <family>2019_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='games_table' inline='true' name='federated.1yq3jw10tjf2qa1fuba1i0xnlff2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='games_table' name='textscan.096h7pg000h9tm1fb7kb40r5tixe'>
            <connection class='textscan' directory='C:/Users/habet/Desktop/nfl_data' filename='games_table.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.096h7pg000h9tm1fb7kb40r5tixe' name='games_table.csv' table='[games_table#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='week_number' ordinal='2' />
            <column datatype='string' name='weather' ordinal='3' />
            <column datatype='integer' name='time_zone' ordinal='4' />
            <column datatype='string' name='day_of_week' ordinal='5' />
            <column datatype='date' name='game_date' ordinal='6' />
            <column datatype='datetime' name='game_time' ordinal='7' />
            <column datatype='string' name='stadium' ordinal='8' />
            <column datatype='string' name='roof' ordinal='9' />
            <column datatype='string' name='home_team' ordinal='10' />
            <column datatype='integer' name='home_finalscore' ordinal='11' />
            <column datatype='string' name='away_team' ordinal='12' />
            <column datatype='integer' name='away_finalscore' ordinal='13' />
            <column datatype='integer' name='number_of_plays' ordinal='14' />
            <column datatype='integer' name='number_of_drives' ordinal='15' />
            <column datatype='integer' name='home_blitz' ordinal='16' />
            <column datatype='integer' name='away_blitz' ordinal='17' />
            <column datatype='real' name='home_playclock_avg' ordinal='18' />
            <column datatype='real' name='away_playclock_avg' ordinal='19' />
            <column datatype='real' name='home_qb_pocket_time_avg' ordinal='20' />
            <column datatype='real' name='away_qb_pocket_time_avg' ordinal='21' />
            <column datatype='integer' name='home_qb_attempt' ordinal='22' />
            <column datatype='integer' name='away_qb_attempt' ordinal='23' />
            <column datatype='integer' name='home_qb_complete' ordinal='24' />
            <column datatype='integer' name='away_qb_complete' ordinal='25' />
            <column datatype='integer' name='home_qb_air_yards' ordinal='26' />
            <column datatype='integer' name='away_qb_air_yards' ordinal='27' />
            <column datatype='integer' name='home_qb_yards' ordinal='28' />
            <column datatype='integer' name='away_qb_yards' ordinal='29' />
            <column datatype='integer' name='home_rushing_yards' ordinal='30' />
            <column datatype='integer' name='away_rushing_yards' ordinal='31' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[week_number]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>week_number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_zone]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>time_zone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_week</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day_of_week]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>day_of_week</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[game_date]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>game_date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[game_time]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>game_time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stadium</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stadium]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>stadium</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>roof</remote-name>
            <remote-type>129</remote-type>
            <local-name>[roof]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>roof</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_team]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_team</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_finalscore</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_finalscore]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_finalscore</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[away_team]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_team</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_finalscore</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_finalscore]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_finalscore</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_plays</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_plays]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>number_of_plays</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_drives</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_drives]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>number_of_drives</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_blitz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_blitz]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_blitz</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_blitz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_blitz]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_blitz</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_playclock_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[home_playclock_avg]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_playclock_avg</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_playclock_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[away_playclock_avg]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_playclock_avg</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_qb_pocket_time_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[home_qb_pocket_time_avg]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_qb_pocket_time_avg</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_qb_pocket_time_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[away_qb_pocket_time_avg]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_qb_pocket_time_avg</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_qb_attempt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_qb_attempt]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_qb_attempt</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_qb_attempt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_qb_attempt]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_qb_attempt</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_qb_complete</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_qb_complete]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_qb_complete</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_qb_complete</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_qb_complete]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_qb_complete</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_qb_air_yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_qb_air_yards]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_qb_air_yards</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_qb_air_yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_qb_air_yards]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_qb_air_yards</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_qb_yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_qb_yards]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_qb_yards</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_qb_yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_qb_yards]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_qb_yards</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_rushing_yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_rushing_yards]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>home_rushing_yards</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_rushing_yards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_rushing_yards]</local-name>
            <parent-name>[games_table.csv]</parent-name>
            <remote-alias>away_rushing_yards</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Games' datatype='integer' name='[Calculation_904097643511549956]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='countd([ID])' />
      </column>
      <column caption='Total Blitz' datatype='integer' name='[Calculation_904097643524747269]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[away_blitz] + [home_blitz]' />
      </column>
      <column caption='Total Pocket Time' datatype='real' name='[Calculation_904097643524857862]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([away_qb_pocket_time_avg] + [home_qb_pocket_time_avg])/2' />
      </column>
      <column caption='Total Score' datatype='integer' name='[Calculation_904097643526352903]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[away_finalscore] + [home_finalscore]' />
      </column>
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Away Blitz' datatype='integer' name='[away_blitz]' role='measure' type='quantitative' />
      <column caption='Away Finalscore' datatype='integer' name='[away_finalscore]' role='measure' type='quantitative' />
      <column caption='Away Playclock Avg' datatype='real' name='[away_playclock_avg]' role='measure' type='quantitative' />
      <column caption='Away Qb Air Yards' datatype='integer' name='[away_qb_air_yards]' role='measure' type='quantitative' />
      <column caption='Away Qb Attempt' datatype='integer' name='[away_qb_attempt]' role='measure' type='quantitative' />
      <column caption='Away Qb Complete' datatype='integer' name='[away_qb_complete]' role='measure' type='quantitative' />
      <column caption='Away Qb Pocket Time Avg' datatype='real' name='[away_qb_pocket_time_avg]' role='measure' type='quantitative' />
      <column caption='Away Qb Yards' datatype='integer' name='[away_qb_yards]' role='measure' type='quantitative' />
      <column caption='Away Rushing Yards' datatype='integer' name='[away_rushing_yards]' role='measure' type='quantitative' />
      <column caption='Away Team' datatype='string' name='[away_team]' role='dimension' type='nominal' />
      <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
      <column caption='Game Date' datatype='date' name='[game_date]' role='dimension' type='ordinal' />
      <column aggregation='Hour' caption='Game Time' datatype='datetime' name='[game_time]' role='dimension' type='ordinal' />
      <column caption='Home Blitz' datatype='integer' name='[home_blitz]' role='measure' type='quantitative' />
      <column caption='Home Finalscore' datatype='integer' name='[home_finalscore]' role='measure' type='quantitative' />
      <column caption='Home Playclock Avg' datatype='real' name='[home_playclock_avg]' role='measure' type='quantitative' />
      <column caption='Home Qb Air Yards' datatype='integer' name='[home_qb_air_yards]' role='measure' type='quantitative' />
      <column caption='Home Qb Attempt' datatype='integer' name='[home_qb_attempt]' role='measure' type='quantitative' />
      <column caption='Home Qb Complete' datatype='integer' name='[home_qb_complete]' role='measure' type='quantitative' />
      <column caption='Home Qb Pocket Time Avg' datatype='real' name='[home_qb_pocket_time_avg]' role='measure' type='quantitative' />
      <column caption='Home Qb Yards' datatype='integer' name='[home_qb_yards]' role='measure' type='quantitative' />
      <column caption='Home Rushing Yards' datatype='integer' name='[home_rushing_yards]' role='measure' type='quantitative' />
      <column caption='Home Team' datatype='string' name='[home_team]' role='dimension' type='nominal' />
      <column caption='Number Of Drives' datatype='integer' name='[number_of_drives]' role='measure' type='quantitative' />
      <column caption='Number Of Plays' datatype='integer' name='[number_of_plays]' role='measure' type='quantitative' />
      <column caption='Roof' datatype='string' name='[roof]' role='dimension' type='nominal' />
      <column caption='Stadium' datatype='string' name='[stadium]' role='dimension' type='nominal' />
      <column caption='Time Zone' datatype='integer' name='[time_zone]' role='measure' type='quantitative' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/habet/Documents/My Tableau Repository/Datasources/games_table.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2019 07:54:01 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='games_table' increment-value='%null%' refresh-type='create' rows-inserted='1024' timestamp-start='2019-08-11 07:54:01.976' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>0</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1024</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>week_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[week_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>week_number</remote-alias>
              <ordinal>2</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weather]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather</remote-alias>
              <ordinal>3</ordinal>
              <family>games_table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>924</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_zone</remote-name>
              <remote-type>20</remote-type>
              <local-name>[time_zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_zone</remote-alias>
              <ordinal>4</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day_of_week</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day_of_week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day_of_week</remote-alias>
              <ordinal>5</ordinal>
              <family>games_table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[game_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_date</remote-alias>
              <ordinal>6</ordinal>
              <family>games_table.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_time</remote-name>
              <remote-type>134</remote-type>
              <local-name>[game_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_time</remote-alias>
              <ordinal>7</ordinal>
              <family>games_table.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>223</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stadium</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stadium]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stadium</remote-alias>
              <ordinal>8</ordinal>
              <family>games_table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>roof</remote-name>
              <remote-type>129</remote-type>
              <local-name>[roof]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>roof</remote-alias>
              <ordinal>9</ordinal>
              <family>games_table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[home_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_team</remote-alias>
              <ordinal>10</ordinal>
              <family>games_table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_finalscore</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_finalscore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_finalscore</remote-alias>
              <ordinal>11</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[away_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_team</remote-alias>
              <ordinal>12</ordinal>
              <family>games_table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_finalscore</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_finalscore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_finalscore</remote-alias>
              <ordinal>13</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_plays</remote-name>
              <remote-type>20</remote-type>
              <local-name>[number_of_plays]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_plays</remote-alias>
              <ordinal>14</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_drives</remote-name>
              <remote-type>20</remote-type>
              <local-name>[number_of_drives]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_drives</remote-alias>
              <ordinal>15</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_blitz</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_blitz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_blitz</remote-alias>
              <ordinal>16</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_blitz</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_blitz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_blitz</remote-alias>
              <ordinal>17</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_playclock_avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[home_playclock_avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_playclock_avg</remote-alias>
              <ordinal>18</ordinal>
              <family>games_table.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>950</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_playclock_avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[away_playclock_avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_playclock_avg</remote-alias>
              <ordinal>19</ordinal>
              <family>games_table.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>957</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_qb_pocket_time_avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[home_qb_pocket_time_avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_qb_pocket_time_avg</remote-alias>
              <ordinal>20</ordinal>
              <family>games_table.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1017</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_qb_pocket_time_avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[away_qb_pocket_time_avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_qb_pocket_time_avg</remote-alias>
              <ordinal>21</ordinal>
              <family>games_table.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1018</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_qb_attempt</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_qb_attempt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_qb_attempt</remote-alias>
              <ordinal>22</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_qb_attempt</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_qb_attempt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_qb_attempt</remote-alias>
              <ordinal>23</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_qb_complete</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_qb_complete]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_qb_complete</remote-alias>
              <ordinal>24</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_qb_complete</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_qb_complete]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_qb_complete</remote-alias>
              <ordinal>25</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_qb_air_yards</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_qb_air_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_qb_air_yards</remote-alias>
              <ordinal>26</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>356</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_qb_air_yards</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_qb_air_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_qb_air_yards</remote-alias>
              <ordinal>27</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>374</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_qb_yards</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_qb_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_qb_yards</remote-alias>
              <ordinal>28</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>297</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_qb_yards</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_qb_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_qb_yards</remote-alias>
              <ordinal>29</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>303</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_rushing_yards</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_rushing_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_rushing_yards</remote-alias>
              <ordinal>30</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>223</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_rushing_yards</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_rushing_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_rushing_yards</remote-alias>
              <ordinal>31</ordinal>
              <family>games_table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.555556' measure-ordering='alphabetic' measure-percentage='0.444444' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='ALL_NFL_DATA' inline='true' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ALL_NFL_DATA' name='textscan.1csy1al1ddngn41g9spod1ru9pny'>
            <connection class='textscan' directory='C:/Users/habet/Desktop/Python_Practice/NFL' filename='ALL_NFL_DATA.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1csy1al1ddngn41g9spod1ru9pny' name='ALL_NFL_DATA.csv' table='[ALL_NFL_DATA#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='week_number' ordinal='2' />
            <column datatype='string' name='weather' ordinal='3' />
            <column datatype='integer' name='time_zone' ordinal='4' />
            <column datatype='string' name='game_time' ordinal='5' />
            <column datatype='string' name='stadium' ordinal='6' />
            <column datatype='string' name='roof' ordinal='7' />
            <column datatype='string' name='surface' ordinal='8' />
            <column datatype='string' name='home_team' ordinal='9' />
            <column datatype='string' name='away_team' ordinal='10' />
            <column datatype='string' name='wall_clock' ordinal='11' />
            <column datatype='string' name='offense' ordinal='12' />
            <column datatype='string' name='defense' ordinal='13' />
            <column datatype='integer' name='home_points' ordinal='14' />
            <column datatype='integer' name='away_points' ordinal='15' />
            <column datatype='integer' name='game_play_number' ordinal='16' />
            <column datatype='datetime' name='duration' ordinal='17' />
            <column datatype='integer' name='drive_number' ordinal='18' />
            <column datatype='string' name='start_reason' ordinal='19' />
            <column datatype='string' name='end_reason' ordinal='20' />
            <column datatype='integer' name='plays_in_drive' ordinal='21' />
            <column datatype='integer' name='drive_play_number' ordinal='22' />
            <column datatype='integer' name='quarter' ordinal='23' />
            <column datatype='datetime' name='game_clock' ordinal='24' />
            <column datatype='string' name='field_position' ordinal='25' />
            <column datatype='integer' name='line_of_scrimmage' ordinal='26' />
            <column datatype='integer' name='down' ordinal='27' />
            <column datatype='integer' name='distance' ordinal='28' />
            <column datatype='real' name='play_clock' ordinal='29' />
            <column datatype='string' name='huddle' ordinal='30' />
            <column datatype='string' name='play_type' ordinal='31' />
            <column datatype='real' name='men_in_box' ordinal='32' />
            <column datatype='real' name='players_rushed' ordinal='33' />
            <column datatype='real' name='blitz' ordinal='34' />
            <column datatype='string' name='qb_at_snap' ordinal='35' />
            <column datatype='string' name='play_direction' ordinal='36' />
            <column datatype='string' name='pocket_location' ordinal='37' />
            <column datatype='string' name='pass_route' ordinal='38' />
            <column datatype='integer' name='screen_pass' ordinal='39' />
            <column datatype='real' name='touchdown' ordinal='40' />
            <column datatype='string' name='QB_team' ordinal='41' />
            <column datatype='string' name='QB_name' ordinal='42' />
            <column datatype='real' name='QB_attempt' ordinal='43' />
            <column datatype='real' name='QB_complete' ordinal='44' />
            <column datatype='string' name='QB_incomplete_type' ordinal='45' />
            <column datatype='real' name='QB_air_yards' ordinal='46' />
            <column datatype='real' name='QB_yards' ordinal='47' />
            <column datatype='real' name='QB_firstdown' ordinal='48' />
            <column datatype='real' name='QB_blitz' ordinal='49' />
            <column datatype='real' name='QB_hurry' ordinal='50' />
            <column datatype='real' name='QB_knockdown' ordinal='51' />
            <column datatype='real' name='QB_pocket_time' ordinal='52' />
            <column datatype='real' name='QB_inside20' ordinal='53' />
            <column datatype='real' name='QB_goaltogo' ordinal='54' />
            <column datatype='string' name='flex_team' ordinal='55' />
            <column datatype='string' name='flex_position' ordinal='56' />
            <column datatype='string' name='flex_name' ordinal='57' />
            <column datatype='real' name='flex_yards' ordinal='58' />
            <column datatype='real' name='flex_attempt' ordinal='59' />
            <column datatype='real' name='flex_running_lane' ordinal='60' />
            <column datatype='real' name='flex_brokentackle' ordinal='61' />
            <column datatype='real' name='flex_yacontact' ordinal='62' />
            <column datatype='real' name='flex_target' ordinal='63' />
            <column datatype='real' name='flex_reception' ordinal='64' />
            <column datatype='real' name='flex_yacatch' ordinal='65' />
            <column datatype='real' name='flex_firstdown' ordinal='66' />
            <column datatype='real' name='flex_inside20' ordinal='67' />
            <column datatype='real' name='flex_goaltogo' ordinal='68' />
            <column datatype='real' name='flex_scramble' ordinal='69' />
            <column datatype='real' name='flex_kneel' ordinal='70' />
            <column datatype='real' name='flex_dropped' ordinal='71' />
            <column datatype='string' name='DB_name' ordinal='72' />
            <column datatype='string' name='DB_team' ordinal='73' />
            <column datatype='real' name='DB_target' ordinal='74' />
            <column datatype='real' name='DB_completion' ordinal='75' />
            <column datatype='real' name='DB_tackle' ordinal='76' />
            <column datatype='integer' name='10_zone' ordinal='77' />
            <column datatype='real' name='flex_opportunities' ordinal='78' />
            <column datatype='real' name='flex_touches' ordinal='79' />
            <column datatype='boolean' name='last_play_in_drive' ordinal='80' />
            <column datatype='real' name='Jake_Points' ordinal='81' />
            <column datatype='real' name='PPR_Points' ordinal='82' />
            <column datatype='real' name='Standard_Points' ordinal='83' />
            <column datatype='string' name='Temp_Game_id' ordinal='84' />
            <column datatype='string' name='Game_Offense' ordinal='85' />
            <column datatype='string' name='Game_Defense' ordinal='86' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[week_number]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>week_number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_zone]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>time_zone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_time]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>game_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stadium</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stadium]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>stadium</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>roof</remote-name>
            <remote-type>129</remote-type>
            <local-name>[roof]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>roof</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>surface</remote-name>
            <remote-type>129</remote-type>
            <local-name>[surface]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>surface</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_team]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>home_team</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[away_team]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>away_team</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wall_clock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wall_clock]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>wall_clock</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense</remote-name>
            <remote-type>129</remote-type>
            <local-name>[offense]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>offense</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defense</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defense]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>defense</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_points]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>home_points</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_points]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>away_points</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_play_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[game_play_number]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>game_play_number</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>134</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[drive_number]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>drive_number</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_reason]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>start_reason</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_reason]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>end_reason</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>plays_in_drive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[plays_in_drive]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>plays_in_drive</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_play_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[drive_play_number]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>drive_play_number</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_clock</remote-name>
            <remote-type>134</remote-type>
            <local-name>[game_clock]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>game_clock</remote-alias>
            <ordinal>24</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>field_position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[field_position]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>field_position</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_of_scrimmage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[line_of_scrimmage]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>line_of_scrimmage</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>down</remote-name>
            <remote-type>20</remote-type>
            <local-name>[down]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>down</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_clock</remote-name>
            <remote-type>5</remote-type>
            <local-name>[play_clock]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>play_clock</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>huddle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[huddle]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>huddle</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_type]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>play_type</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>men_in_box</remote-name>
            <remote-type>5</remote-type>
            <local-name>[men_in_box]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>men_in_box</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>players_rushed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[players_rushed]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>players_rushed</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blitz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[blitz]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>blitz</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qb_at_snap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[qb_at_snap]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>qb_at_snap</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_direction]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>play_direction</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pocket_location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pocket_location]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>pocket_location</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pass_route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pass_route]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>pass_route</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>screen_pass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[screen_pass]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>screen_pass</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>touchdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[touchdown]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>touchdown</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_team]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_team</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_name]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_name</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_attempt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_attempt]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_attempt</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_complete</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_complete]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_complete</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_incomplete_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_incomplete_type]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_incomplete_type</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_air_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_air_yards]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_air_yards</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_yards]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_yards</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_firstdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_firstdown]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_firstdown</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_blitz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_blitz]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_blitz</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_hurry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_hurry]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_hurry</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_knockdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_knockdown]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_knockdown</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_pocket_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_pocket_time]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_pocket_time</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_inside20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_inside20]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_inside20</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_goaltogo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_goaltogo]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>QB_goaltogo</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_team]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_team</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_position]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_position</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_name]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_name</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yards]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_yards</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_attempt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_attempt]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_attempt</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_running_lane</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_running_lane]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_running_lane</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_brokentackle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_brokentackle]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_brokentackle</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yacontact</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yacontact]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_yacontact</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_target]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_target</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_reception</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_reception]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_reception</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yacatch</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yacatch]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_yacatch</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_firstdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_firstdown]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_firstdown</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_inside20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_inside20]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_inside20</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_goaltogo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_goaltogo]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_goaltogo</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_scramble</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_scramble]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_scramble</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_kneel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_kneel]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_kneel</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_dropped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_dropped]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_dropped</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DB_name]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>DB_name</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DB_team]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>DB_team</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_target]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>DB_target</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_completion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_completion]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>DB_completion</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_tackle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_tackle]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>DB_tackle</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10_zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10_zone]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>10_zone</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_opportunities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_opportunities]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_opportunities</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_touches</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_touches]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>flex_touches</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_play_in_drive</remote-name>
            <remote-type>11</remote-type>
            <local-name>[last_play_in_drive]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>last_play_in_drive</remote-alias>
            <ordinal>80</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jake_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jake_Points]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>Jake_Points</remote-alias>
            <ordinal>81</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPR_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPR_Points]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>PPR_Points</remote-alias>
            <ordinal>82</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard_Points]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>Standard_Points</remote-alias>
            <ordinal>83</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temp_Game_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Temp_Game_id]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>Temp_Game_id</remote-alias>
            <ordinal>84</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Game_Offense</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Game_Offense]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>Game_Offense</remote-alias>
            <ordinal>85</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Game_Defense</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Game_Defense]</local-name>
            <parent-name>[ALL_NFL_DATA.csv]</parent-name>
            <remote-alias>Game_Defense</remote-alias>
            <ordinal>86</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='10 Zone' datatype='integer' name='[10_zone]' role='measure' type='quantitative' />
      <column caption='Jitter' datatype='integer' name='[Calculation_2499779289429909504]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='1st Down success rate' datatype='real' name='[Calculation_904097642928939008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([QB_firstdown])/sum([QB_attempt])' />
      </column>
      <column caption='airyards_from_chains' datatype='real' name='[Calculation_904097642929864705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[QB_air_yards] - [distance]' />
      </column>
      <column caption='Flex_FD_Rate' datatype='real' name='[Calculation_904097642935934979]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([flex_firstdown])/sum([flex_opportunities])' />
      </column>
      <column caption='Completion %' datatype='real' name='[Calculation_904097646053883913]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
      </column>
      <column caption='Total Target Volume' datatype='string' datatype-customized='true' name='[Calculation_904097646060212234]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF INT(sum([flex_target])) &gt;100 then &apos;Over 100&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 74 then &apos;75-99&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 49 then &apos;50 - 74&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 0 then &apos;&lt; 50&apos;&#13;&#10;END' />
      </column>
      <column caption='DB completion' datatype='real' name='[DB_completion]' role='measure' type='quantitative' />
      <column caption='DB name' datatype='string' name='[DB_name]' role='dimension' type='nominal' />
      <column caption='DB tackle' datatype='real' name='[DB_tackle]' role='measure' type='quantitative' />
      <column caption='DB target' datatype='real' name='[DB_target]' role='measure' type='quantitative' />
      <column caption='DB team' datatype='string' name='[DB_team]' role='dimension' type='nominal' />
      <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='PPR Points' datatype='real' name='[PPR_Points]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
      <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
      <column caption='QB blitz' datatype='real' name='[QB_blitz]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='QB complete' datatype='real' name='[QB_complete]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0.0' value='Incomplete' />
          <alias key='1.0' value='Complete' />
        </aliases>
      </column>
      <column caption='QB firstdown' datatype='real' name='[QB_firstdown]' role='measure' type='quantitative' />
      <column caption='QB goaltogo' datatype='real' name='[QB_goaltogo]' role='measure' type='quantitative' />
      <column caption='QB hurry' datatype='real' name='[QB_hurry]' role='measure' type='quantitative' />
      <column caption='QB incomplete type' datatype='string' name='[QB_incomplete_type]' role='dimension' type='nominal' />
      <column caption='QB inside20' datatype='real' name='[QB_inside20]' role='measure' type='quantitative' />
      <column caption='QB knockdown' datatype='real' name='[QB_knockdown]' role='measure' type='quantitative' />
      <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
      <column caption='QB pocket time' datatype='real' name='[QB_pocket_time]' role='measure' type='quantitative' />
      <column caption='QB team' datatype='string' name='[QB_team]' role='dimension' type='nominal' />
      <column caption='QB yards' datatype='real' name='[QB_yards]' role='measure' type='quantitative' />
      <column caption='Standard Points' datatype='real' name='[Standard_Points]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[airyards_from_chains (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[QB_air_yards] - [distance]' />
      </column>
      <column caption='Away Points' datatype='integer' name='[away_points]' role='measure' type='quantitative' />
      <column caption='Away Team' datatype='string' name='[away_team]' role='dimension' type='nominal' />
      <column caption='Blitz' datatype='real' name='[blitz]' role='measure' type='quantitative' />
      <column caption='Defense' datatype='string' name='[defense]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Distance' datatype='integer' name='[distance]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Down' datatype='integer' name='[down]' role='dimension' type='ordinal' />
      <column caption='Drive Number' datatype='integer' name='[drive_number]' role='dimension' type='ordinal' />
      <column caption='Drive Play Number' datatype='integer' name='[drive_play_number]' role='dimension' type='ordinal' />
      <column aggregation='Hour' caption='Duration' datatype='datetime' name='[duration]' role='dimension' type='ordinal' />
      <column caption='End Reason' datatype='string' name='[end_reason]' role='dimension' type='nominal' />
      <column caption='Field Position' datatype='string' name='[field_position]' role='dimension' type='nominal' />
      <column caption='Flex Attempt' datatype='real' name='[flex_attempt]' role='measure' type='quantitative' />
      <column caption='Flex Brokentackle' datatype='real' name='[flex_brokentackle]' role='measure' type='quantitative' />
      <column caption='Flex Dropped' datatype='real' name='[flex_dropped]' role='measure' type='quantitative' />
      <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
      <column caption='Flex Goaltogo' datatype='real' name='[flex_goaltogo]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Flex Inside20' datatype='real' name='[flex_inside20]' role='dimension' type='ordinal' />
      <column caption='Flex Kneel' datatype='real' name='[flex_kneel]' role='measure' type='quantitative' />
      <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
      <column caption='Flex Opportunities' datatype='real' name='[flex_opportunities]' role='measure' type='quantitative' />
      <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
      <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
      <column caption='Flex Running Lane' datatype='real' name='[flex_running_lane]' role='measure' type='quantitative' />
      <column caption='Flex Scramble' datatype='real' name='[flex_scramble]' role='measure' type='quantitative' />
      <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
      <column caption='Flex Team' datatype='string' name='[flex_team]' role='dimension' type='nominal' />
      <column caption='Flex Touches' datatype='real' name='[flex_touches]' role='measure' type='quantitative' />
      <column caption='Flex Yacatch' datatype='real' name='[flex_yacatch]' role='measure' type='quantitative' />
      <column caption='Flex Yacontact' datatype='real' name='[flex_yacontact]' role='measure' type='quantitative' />
      <column caption='Flex Yards' datatype='real' name='[flex_yards]' role='measure' type='quantitative' />
      <column aggregation='Hour' caption='Game Clock' datatype='datetime' name='[game_clock]' role='dimension' type='ordinal' />
      <column caption='Game Play Number' datatype='integer' name='[game_play_number]' role='dimension' type='ordinal' />
      <column caption='Game Time' datatype='string' name='[game_time]' role='dimension' type='nominal' />
      <column caption='Home Points' datatype='integer' name='[home_points]' role='measure' type='quantitative' />
      <column caption='Home Team' datatype='string' name='[home_team]' role='dimension' type='nominal' />
      <column caption='Huddle' datatype='string' name='[huddle]' role='dimension' type='nominal' />
      <column caption='Last Play In Drive' datatype='boolean' name='[last_play_in_drive]' role='dimension' type='nominal' />
      <column caption='Line Of Scrimmage' datatype='integer' name='[line_of_scrimmage]' role='measure' type='quantitative' />
      <column caption='Men In Box' datatype='real' name='[men_in_box]' role='measure' type='quantitative' />
      <column caption='Offense' datatype='string' name='[offense]' role='dimension' type='nominal' />
      <column caption='Pass Route' datatype='string' name='[pass_route]' role='dimension' type='nominal' />
      <column caption='Play Clock' datatype='real' name='[play_clock]' role='measure' type='quantitative' />
      <column caption='Play Direction' datatype='string' name='[play_direction]' role='dimension' type='nominal' />
      <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
      <column caption='Players Rushed' datatype='real' name='[players_rushed]' role='measure' type='quantitative' />
      <column caption='Plays In Drive' datatype='integer' name='[plays_in_drive]' role='measure' type='quantitative' />
      <column caption='Pocket Location' datatype='string' name='[pocket_location]' role='dimension' type='nominal' />
      <column caption='Qb At Snap' datatype='string' name='[qb_at_snap]' role='dimension' type='nominal' />
      <column caption='Quarter' datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column caption='Roof' datatype='string' name='[roof]' role='dimension' type='nominal' />
      <column caption='Screen Pass' datatype='integer' name='[screen_pass]' role='measure' type='quantitative' />
      <column caption='Stadium' datatype='string' name='[stadium]' role='dimension' type='nominal' />
      <column caption='Start Reason' datatype='string' name='[start_reason]' role='dimension' type='nominal' />
      <column caption='Surface' datatype='string' name='[surface]' role='dimension' type='nominal' />
      <column caption='Time Zone' datatype='integer' name='[time_zone]' role='measure' type='quantitative' />
      <column caption='Touchdown' datatype='real' name='[touchdown]' role='measure' type='quantitative' />
      <column caption='Wall Clock' datatype='string' name='[wall_clock]' role='dimension' type='nominal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[away_points]' derivation='Max' name='[max:away_points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[home_points]' derivation='Max' name='[max:home_points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[QB_complete]' derivation='None' name='[none:QB_complete:ok]' pivot='key' type='ordinal' />
      <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
      <column-instance column='[play_type]' derivation='None' name='[none:play_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PPR_Points]' derivation='Sum' name='[sum:PPR_Points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_904097646060212234]' derivation='User' name='[usr:Calculation_904097646060212234:nk]' pivot='key' type='nominal' />
      <group caption='Flex_Years' name='[Flex_Years]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='2009' function='range' level='[year]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Starters' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[QB_name]' member='&quot;Aaron Rodgers&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Alex Smith&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Andrew Luck&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Andy Dalton&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Baker Mayfield&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Ben Roethlisberger&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Blake Bortles&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Cam Newton&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Carson Wentz&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Case Keenum&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Dak Prescott&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Derek Carr&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Deshaun Watson&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Drew Brees&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Eli Manning&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Jameis Winston&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Jared Goff&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Joe Flacco&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Josh Allen&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Josh Rosen&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Kirk Cousins&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Marcus Mariota&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Matt Ryan&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Matthew Stafford&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Mitchell Trubisky&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Patrick Mahomes II&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Philip Rivers&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Russell Wilson&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Sam Darnold&quot;' />
          <groupfilter function='member' level='[QB_name]' member='&quot;Tom Brady&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/habet/Documents/My Tableau Repository/Datasources/ALL_NFL_DATA.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2019 07:52:06 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='ALL_NFL_DATA' increment-value='%null%' refresh-type='create' rows-inserted='401394' timestamp-start='2019-08-11 07:52:06.318' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>401394</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>week_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[week_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>week_number</remote-alias>
              <ordinal>2</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weather]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather</remote-alias>
              <ordinal>3</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6619</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_zone</remote-name>
              <remote-type>20</remote-type>
              <local-name>[time_zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_zone</remote-alias>
              <ordinal>4</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[game_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_time</remote-alias>
              <ordinal>5</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stadium</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stadium]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stadium</remote-alias>
              <ordinal>6</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>roof</remote-name>
              <remote-type>129</remote-type>
              <local-name>[roof]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>roof</remote-alias>
              <ordinal>7</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>surface</remote-name>
              <remote-type>129</remote-type>
              <local-name>[surface]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>surface</remote-alias>
              <ordinal>8</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[home_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_team</remote-alias>
              <ordinal>9</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[away_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_team</remote-alias>
              <ordinal>10</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wall_clock</remote-name>
              <remote-type>129</remote-type>
              <local-name>[wall_clock]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wall_clock</remote-alias>
              <ordinal>11</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>388031</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offense</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offense]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offense</remote-alias>
              <ordinal>12</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>defense</remote-name>
              <remote-type>129</remote-type>
              <local-name>[defense]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>defense</remote-alias>
              <ordinal>13</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_points</remote-name>
              <remote-type>20</remote-type>
              <local-name>[home_points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_points</remote-alias>
              <ordinal>14</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>away_points</remote-name>
              <remote-type>20</remote-type>
              <local-name>[away_points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>away_points</remote-alias>
              <ordinal>15</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_play_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[game_play_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_play_number</remote-alias>
              <ordinal>16</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>184</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration</remote-name>
              <remote-type>134</remote-type>
              <local-name>[duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration</remote-alias>
              <ordinal>17</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>1615</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>drive_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[drive_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>drive_number</remote-alias>
              <ordinal>18</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start_reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_reason</remote-alias>
              <ordinal>19</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end_reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_reason</remote-alias>
              <ordinal>20</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>plays_in_drive</remote-name>
              <remote-type>20</remote-type>
              <local-name>[plays_in_drive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>plays_in_drive</remote-alias>
              <ordinal>21</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>drive_play_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[drive_play_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>drive_play_number</remote-alias>
              <ordinal>22</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quarter</remote-name>
              <remote-type>20</remote-type>
              <local-name>[quarter]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quarter</remote-alias>
              <ordinal>23</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_clock</remote-name>
              <remote-type>134</remote-type>
              <local-name>[game_clock]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_clock</remote-alias>
              <ordinal>24</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>3439</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>field_position</remote-name>
              <remote-type>129</remote-type>
              <local-name>[field_position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>field_position</remote-alias>
              <ordinal>25</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line_of_scrimmage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[line_of_scrimmage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line_of_scrimmage</remote-alias>
              <ordinal>26</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>down</remote-name>
              <remote-type>20</remote-type>
              <local-name>[down]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>down</remote-alias>
              <ordinal>27</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance</remote-name>
              <remote-type>20</remote-type>
              <local-name>[distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance</remote-alias>
              <ordinal>28</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>play_clock</remote-name>
              <remote-type>5</remote-type>
              <local-name>[play_clock]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>play_clock</remote-alias>
              <ordinal>29</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>huddle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[huddle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>huddle</remote-alias>
              <ordinal>30</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>play_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[play_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>play_type</remote-alias>
              <ordinal>31</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>men_in_box</remote-name>
              <remote-type>5</remote-type>
              <local-name>[men_in_box]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>men_in_box</remote-alias>
              <ordinal>32</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>players_rushed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[players_rushed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>players_rushed</remote-alias>
              <ordinal>33</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>blitz</remote-name>
              <remote-type>5</remote-type>
              <local-name>[blitz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>blitz</remote-alias>
              <ordinal>34</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>qb_at_snap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[qb_at_snap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>qb_at_snap</remote-alias>
              <ordinal>35</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>play_direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[play_direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>play_direction</remote-alias>
              <ordinal>36</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pocket_location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pocket_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pocket_location</remote-alias>
              <ordinal>37</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pass_route</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pass_route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pass_route</remote-alias>
              <ordinal>38</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>screen_pass</remote-name>
              <remote-type>20</remote-type>
              <local-name>[screen_pass]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>screen_pass</remote-alias>
              <ordinal>39</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>touchdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[touchdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>touchdown</remote-alias>
              <ordinal>40</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[QB_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_team</remote-alias>
              <ordinal>41</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[QB_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_name</remote-alias>
              <ordinal>42</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>561</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_attempt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_attempt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_attempt</remote-alias>
              <ordinal>43</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_complete</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_complete]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_complete</remote-alias>
              <ordinal>44</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_incomplete_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[QB_incomplete_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_incomplete_type</remote-alias>
              <ordinal>45</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_air_yards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_air_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_air_yards</remote-alias>
              <ordinal>46</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_yards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_yards</remote-alias>
              <ordinal>47</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>202</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_firstdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_firstdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_firstdown</remote-alias>
              <ordinal>48</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_blitz</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_blitz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_blitz</remote-alias>
              <ordinal>49</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_hurry</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_hurry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_hurry</remote-alias>
              <ordinal>50</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_knockdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_knockdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_knockdown</remote-alias>
              <ordinal>51</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_pocket_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_pocket_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_pocket_time</remote-alias>
              <ordinal>52</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21048</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_inside20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_inside20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_inside20</remote-alias>
              <ordinal>53</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QB_goaltogo</remote-name>
              <remote-type>5</remote-type>
              <local-name>[QB_goaltogo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QB_goaltogo</remote-alias>
              <ordinal>54</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[flex_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_team</remote-alias>
              <ordinal>55</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_position</remote-name>
              <remote-type>129</remote-type>
              <local-name>[flex_position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_position</remote-alias>
              <ordinal>56</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[flex_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_name</remote-alias>
              <ordinal>57</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4830</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_yards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_yards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_yards</remote-alias>
              <ordinal>58</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>227</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_attempt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_attempt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_attempt</remote-alias>
              <ordinal>59</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_running_lane</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_running_lane]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_running_lane</remote-alias>
              <ordinal>60</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_brokentackle</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_brokentackle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_brokentackle</remote-alias>
              <ordinal>61</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_yacontact</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_yacontact]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_yacontact</remote-alias>
              <ordinal>62</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_target</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_target]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_target</remote-alias>
              <ordinal>63</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_reception</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_reception]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_reception</remote-alias>
              <ordinal>64</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_yacatch</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_yacatch]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_yacatch</remote-alias>
              <ordinal>65</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>124</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_firstdown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_firstdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_firstdown</remote-alias>
              <ordinal>66</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_inside20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_inside20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_inside20</remote-alias>
              <ordinal>67</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_goaltogo</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_goaltogo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_goaltogo</remote-alias>
              <ordinal>68</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_scramble</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_scramble]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_scramble</remote-alias>
              <ordinal>69</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_kneel</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_kneel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_kneel</remote-alias>
              <ordinal>70</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_dropped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_dropped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_dropped</remote-alias>
              <ordinal>71</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DB_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_name</remote-alias>
              <ordinal>72</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5584</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DB_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_team</remote-alias>
              <ordinal>73</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_target</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DB_target]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_target</remote-alias>
              <ordinal>74</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_completion</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DB_completion]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_completion</remote-alias>
              <ordinal>75</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DB_tackle</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DB_tackle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DB_tackle</remote-alias>
              <ordinal>76</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>10_zone</remote-name>
              <remote-type>20</remote-type>
              <local-name>[10_zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>10_zone</remote-alias>
              <ordinal>77</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_opportunities</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_opportunities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_opportunities</remote-alias>
              <ordinal>78</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_touches</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flex_touches]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_touches</remote-alias>
              <ordinal>79</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>last_play_in_drive</remote-name>
              <remote-type>11</remote-type>
              <local-name>[last_play_in_drive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>last_play_in_drive</remote-alias>
              <ordinal>80</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Jake_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Jake_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Jake_Points</remote-alias>
              <ordinal>81</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>431</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPR_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPR_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPR_Points</remote-alias>
              <ordinal>82</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>471</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Standard_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Standard_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Standard_Points</remote-alias>
              <ordinal>83</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>444</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temp_Game_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Temp_Game_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temp_Game_id</remote-alias>
              <ordinal>84</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17716</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Game_Offense</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Game_Offense]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Game_Offense</remote-alias>
              <ordinal>85</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35400</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Game_Defense</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Game_Defense]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Game_Defense</remote-alias>
              <ordinal>86</ordinal>
              <family>ALL_NFL_DATA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35400</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.509259' group-percentage='0.0518519' measure-ordering='alphabetic' measure-percentage='0.438889' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:Jake_Points:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[max:home_points:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[max:away_points:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:PPR_Points:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:flex_position:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;QB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;G/T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;P&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;G&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:play_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;pass&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rush&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:play_type:nk]' type='shape'>
            <map to=':filled/plus'>
              <bucket>&quot;pass&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;rush&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:QB_complete:ok]' type='palette'>
            <map to='#59a14f'>
              <bucket>1.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_904097646060212234:nk]' type='palette'>
            <map to='#33a65c'>
              <bucket>&quot;Over 100&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;&lt; 50&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;50 - 100&quot;</bucket>
            </map>
            <map to='#e03426'>
              <bucket>&quot;50 - 74&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;75-100&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;75-99&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Jake_projections' inline='true' name='federated.0qu3v6q1doqf2k14723b31e6ni5v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Jake_projections' name='textscan.0bnubfu18anmfu1fu0lri1kv4st3'>
            <connection class='textscan' directory='C:/Users/habet/Desktop/Python_Practice/NFL' filename='Jake_projections.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0bnubfu18anmfu1fu0lri1kv4st3' name='Jake_projections.csv' table='[Jake_projections#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='string' name='Team' ordinal='2' />
            <column datatype='integer' name='ATT' ordinal='3' />
            <column datatype='integer' name='YDS' ordinal='4' />
            <column datatype='integer' name='TDS' ordinal='5' />
            <column datatype='integer' name='REC' ordinal='6' />
            <column datatype='integer' name='YDS.1' ordinal='7' />
            <column datatype='integer' name='TDS.1' ordinal='8' />
            <column datatype='string' name='POS' ordinal='9' />
            <column datatype='integer' name='Touches' ordinal='10' />
            <column datatype='integer' name='First Down Rate' ordinal='11' />
            <column datatype='integer' name='flex_firstdown' ordinal='12' />
            <column datatype='real' name='Jake_Points' ordinal='13' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ATT]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>ATT</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YDS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YDS]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>YDS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TDS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TDS]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>TDS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[REC]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>REC</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YDS.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YDS.1]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>YDS.1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TDS.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TDS.1]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>TDS.1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[POS]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>POS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Touches</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Touches]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>Touches</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Down Rate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[First Down Rate]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>First Down Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_firstdown</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flex_firstdown]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>flex_firstdown</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jake_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jake_Points]</local-name>
            <parent-name>[Jake_projections.csv]</parent-name>
            <remote-alias>Jake_Points</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='PPG' datatype='real' name='[Calculation_225179997251190784]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Jake_Points])/16' />
      </column>
      <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Tds.1' datatype='integer' name='[TDS.1]' role='measure' type='quantitative' />
      <column caption='Yds.1' datatype='integer' name='[YDS.1]' role='measure' type='quantitative' />
      <column caption='Flex Firstdown' datatype='integer' name='[flex_firstdown]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/habet/Documents/My Tableau Repository/Datasources/Jake_projections.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2019 07:54:16 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Jake_projections' increment-value='%null%' refresh-type='create' rows-inserted='611' timestamp-start='2019-08-11 07:54:16.469' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>611</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Player</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Player]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Player</remote-alias>
              <ordinal>1</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>605</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>2</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ATT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ATT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ATT</remote-alias>
              <ordinal>3</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YDS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YDS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YDS</remote-alias>
              <ordinal>4</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TDS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TDS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TDS</remote-alias>
              <ordinal>5</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>REC</remote-name>
              <remote-type>20</remote-type>
              <local-name>[REC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>REC</remote-alias>
              <ordinal>6</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YDS.1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YDS.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YDS.1</remote-alias>
              <ordinal>7</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TDS.1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TDS.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TDS.1</remote-alias>
              <ordinal>8</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>POS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[POS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>POS</remote-alias>
              <ordinal>9</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Touches</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Touches]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Touches</remote-alias>
              <ordinal>10</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>First Down Rate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[First Down Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>First Down Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_firstdown</remote-name>
              <remote-type>20</remote-type>
              <local-name>[flex_firstdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_firstdown</remote-alias>
              <ordinal>12</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Jake_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Jake_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Jake_Points</remote-alias>
              <ordinal>13</ordinal>
              <family>Jake_projections.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>477</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.278912' measure-ordering='alphabetic' measure-percentage='0.721088' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='2019FP_projections' inline='true' name='federated.010e9iv0ybyi4613azm040lzf11t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2019FP_projections' name='textscan.0easvl80h16nik1d2d0il1qt71g4'>
            <connection class='textscan' directory='C:/Users/habet/Desktop/Python_Practice/NFL' filename='2019FP_projections.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0easvl80h16nik1d2d0il1qt71g4' name='2019FP_projections.csv' table='[2019FP_projections#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='string' name='Team' ordinal='2' />
            <column datatype='integer' name='ATT' ordinal='3' />
            <column datatype='integer' name='YDS' ordinal='4' />
            <column datatype='integer' name='TDS' ordinal='5' />
            <column datatype='integer' name='REC' ordinal='6' />
            <column datatype='integer' name='YDS.1' ordinal='7' />
            <column datatype='integer' name='TDS.1' ordinal='8' />
            <column datatype='string' name='POS' ordinal='9' />
            <column datatype='integer' name='Touches' ordinal='10' />
            <column datatype='integer' name='First Down Rate' ordinal='11' />
            <column datatype='integer' name='flex_firstdown' ordinal='12' />
            <column datatype='real' name='Jake_Points' ordinal='13' />
            <column datatype='real' name='PPR_Points' ordinal='14' />
            <column datatype='real' name='Standard_Points' ordinal='15' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ATT]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>ATT</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YDS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YDS]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>YDS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TDS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TDS]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>TDS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[REC]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>REC</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YDS.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YDS.1]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>YDS.1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TDS.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TDS.1]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>TDS.1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[POS]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>POS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Touches</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Touches]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>Touches</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Down Rate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[First Down Rate]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>First Down Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_firstdown</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flex_firstdown]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>flex_firstdown</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jake_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jake_Points]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>Jake_Points</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPR_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPR_Points]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>PPR_Points</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard_Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard_Points]</local-name>
            <parent-name>[2019FP_projections.csv]</parent-name>
            <remote-alias>Standard_Points</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='JP Rank' datatype='integer' name='[Calculation_310466915988496390]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Rank(sum([Jake_Points]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='PPR Rank' datatype='integer' name='[Calculation_310466915990994951]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(sum([PPR_Points]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='STD Rank' datatype='integer' name='[Calculation_310466915991158792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='rank(sum([Standard_Points]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[POS]' role='dimension' type='nominal' />
      <column caption='PPR Points' datatype='real' name='[PPR_Points]' role='measure' type='quantitative' />
      <column caption='Standard Points' datatype='real' name='[Standard_Points]' role='measure' type='quantitative' />
      <column caption='Tds.1' datatype='integer' name='[TDS.1]' role='measure' type='quantitative' />
      <column caption='Yds.1' datatype='integer' name='[YDS.1]' role='measure' type='quantitative' />
      <column caption='Flex Firstdown' datatype='integer' name='[flex_firstdown]' role='measure' type='quantitative' />
      <column-instance column='[POS]' derivation='None' name='[none:POS:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/habet/Documents/My Tableau Repository/Datasources/2019FP_projections.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2019 07:53:04 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='2019FP_projections' increment-value='%null%' refresh-type='create' rows-inserted='611' timestamp-start='2019-08-11 07:53:04.001' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>611</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Player</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Player]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Player</remote-alias>
              <ordinal>1</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>605</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>2</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ATT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ATT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ATT</remote-alias>
              <ordinal>3</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YDS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YDS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YDS</remote-alias>
              <ordinal>4</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TDS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TDS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TDS</remote-alias>
              <ordinal>5</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>REC</remote-name>
              <remote-type>20</remote-type>
              <local-name>[REC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>REC</remote-alias>
              <ordinal>6</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YDS.1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YDS.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YDS.1</remote-alias>
              <ordinal>7</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TDS.1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TDS.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TDS.1</remote-alias>
              <ordinal>8</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>POS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[POS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>POS</remote-alias>
              <ordinal>9</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Touches</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Touches]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Touches</remote-alias>
              <ordinal>10</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>First Down Rate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[First Down Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>First Down Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flex_firstdown</remote-name>
              <remote-type>20</remote-type>
              <local-name>[flex_firstdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flex_firstdown</remote-alias>
              <ordinal>12</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Jake_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Jake_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Jake_Points</remote-alias>
              <ordinal>13</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>477</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPR_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPR_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPR_Points</remote-alias>
              <ordinal>14</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>456</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Standard_Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Standard_Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Standard_Points</remote-alias>
              <ordinal>15</ordinal>
              <family>2019FP_projections.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>412</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.195652' measure-ordering='alphabetic' measure-percentage='0.804348' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:POS:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='10Zone Success'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column aggregation='Sum' caption='10 Zone' datatype='integer' name='[10_zone]' role='dimension' type='ordinal' />
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[10_zone]' derivation='None' name='[none:10_zone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:10_zone:ok]'>
            <groupfilter function='member' level='[none:10_zone:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:10_zone:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' value='183' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DB151577-6921-4617-A564-C844B9590BB1}' />
    </worksheet>
    <worksheet name='2019 Projections'>
      <table>
        <view>
          <datasources>
            <datasource caption='Jake_projections' name='federated.0qu3v6q1doqf2k14723b31e6ni5v' />
          </datasources>
          <datasource-dependencies datasource='federated.0qu3v6q1doqf2k14723b31e6ni5v'>
            <column caption='PPG' datatype='real' name='[Calculation_225179997251190784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Jake_Points])/16' />
            </column>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[POS]' role='dimension' type='nominal' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[POS]' derivation='None' name='[none:POS:nk]' pivot='key' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997251190784]' derivation='User' name='[usr:Calculation_225179997251190784:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qu3v6q1doqf2k14723b31e6ni5v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qu3v6q1doqf2k14723b31e6ni5v].[sum:Jake_Points:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qu3v6q1doqf2k14723b31e6ni5v].[usr:Calculation_225179997251190784:qk]&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qu3v6q1doqf2k14723b31e6ni5v].[none:Player:nk]' direction='DESC' measure-to-sort-by='[federated.0qu3v6q1doqf2k14723b31e6ni5v].[usr:Calculation_225179997251190784:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qu3v6q1doqf2k14723b31e6ni5v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qu3v6q1doqf2k14723b31e6ni5v].[:Measure Names]' value='162' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qu3v6q1doqf2k14723b31e6ni5v].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qu3v6q1doqf2k14723b31e6ni5v].[none:Player:nk] / [federated.0qu3v6q1doqf2k14723b31e6ni5v].[none:POS:nk])</rows>
        <cols>[federated.0qu3v6q1doqf2k14723b31e6ni5v].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2C2F71D7-A731-49C3-8288-470A5A85A9B8}' />
    </worksheet>
    <worksheet name='2019 Ranks'>
      <table>
        <view>
          <datasources>
            <datasource caption='2019FP_projections' name='federated.010e9iv0ybyi4613azm040lzf11t' />
          </datasources>
          <datasource-dependencies datasource='federated.010e9iv0ybyi4613azm040lzf11t'>
            <column caption='JP Rank' datatype='integer' name='[Calculation_310466915988496390]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Rank(sum([Jake_Points]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='PPR Rank' datatype='integer' name='[Calculation_310466915990994951]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(sum([PPR_Points]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='STD Rank' datatype='integer' name='[Calculation_310466915991158792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='rank(sum([Standard_Points]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column caption='PPR Points' datatype='real' name='[PPR_Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column caption='Standard Points' datatype='real' name='[Standard_Points]' role='measure' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPR_Points]' derivation='Sum' name='[sum:PPR_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Standard_Points]' derivation='Sum' name='[sum:Standard_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_310466915988496390]' derivation='User' name='[usr:Calculation_310466915988496390:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_310466915990994951]' derivation='User' name='[usr:Calculation_310466915990994951:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_310466915991158792]' derivation='User' name='[usr:Calculation_310466915991158792:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915988496390:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915990994951:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915991158792:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]&quot;</bucket>
              <bucket>&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[sum:PPR_Points:qk]&quot;</bucket>
              <bucket>&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Standard_Points:qk]&quot;</bucket>
              <bucket>&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915987607557:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.010e9iv0ybyi4613azm040lzf11t].[none:Player:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Saquon Barkley&quot;</bucket>
              <bucket>&quot;Ezekiel Elliott&quot;</bucket>
              <bucket>&quot;Christian McCaffrey&quot;</bucket>
              <bucket>&quot;Alvin Kamara&quot;</bucket>
              <bucket>&quot;Melvin Gordon III&quot;</bucket>
              <bucket>&quot;David Johnson&quot;</bucket>
              <bucket>&quot;Le&apos;Veon Bell&quot;</bucket>
              <bucket>&quot;James Conner&quot;</bucket>
              <bucket>&quot;Joe Mixon&quot;</bucket>
              <bucket>&quot;DeAndre Hopkins&quot;</bucket>
              <bucket>&quot;Julio Jones&quot;</bucket>
              <bucket>&quot;Davante Adams&quot;</bucket>
              <bucket>&quot;Dalvin Cook&quot;</bucket>
              <bucket>&quot;Todd Gurley II&quot;</bucket>
              <bucket>&quot;Damien Williams&quot;</bucket>
              <bucket>&quot;Tyreek Hill&quot;</bucket>
              <bucket>&quot;Derrick Henry&quot;</bucket>
              <bucket>&quot;Leonard Fournette&quot;</bucket>
              <bucket>&quot;JuJu Smith-Schuster&quot;</bucket>
              <bucket>&quot;Nick Chubb&quot;</bucket>
              <bucket>&quot;Mike Evans&quot;</bucket>
              <bucket>&quot;Antonio Brown&quot;</bucket>
              <bucket>&quot;Chris Carson&quot;</bucket>
              <bucket>&quot;Michael Thomas&quot;</bucket>
              <bucket>&quot;Odell Beckham Jr.&quot;</bucket>
              <bucket>&quot;Kerryon Johnson&quot;</bucket>
              <bucket>&quot;Marlon Mack&quot;</bucket>
              <bucket>&quot;Devonta Freeman&quot;</bucket>
              <bucket>&quot;Travis Kelce&quot;</bucket>
              <bucket>&quot;Aaron Jones&quot;</bucket>
              <bucket>&quot;Josh Jacobs&quot;</bucket>
              <bucket>&quot;Phillip Lindsay&quot;</bucket>
              <bucket>&quot;Keenan Allen&quot;</bucket>
              <bucket>&quot;Sony Michel&quot;</bucket>
              <bucket>&quot;T.Y. Hilton&quot;</bucket>
              <bucket>&quot;Kenyan Drake&quot;</bucket>
              <bucket>&quot;Julian Edelman&quot;</bucket>
              <bucket>&quot;Adam Thielen&quot;</bucket>
              <bucket>&quot;A.J. Green&quot;</bucket>
              <bucket>&quot;Amari Cooper&quot;</bucket>
              <bucket>&quot;Robert Woods&quot;</bucket>
              <bucket>&quot;Brandin Cooks&quot;</bucket>
              <bucket>&quot;Mark Ingram II&quot;</bucket>
              <bucket>&quot;Lamar Miller&quot;</bucket>
              <bucket>&quot;David Montgomery&quot;</bucket>
              <bucket>&quot;George Kittle&quot;</bucket>
              <bucket>&quot;Stefon Diggs&quot;</bucket>
              <bucket>&quot;Tyler Lockett&quot;</bucket>
              <bucket>&quot;Cooper Kupp&quot;</bucket>
              <bucket>&quot;Kenny Golladay&quot;</bucket>
              <bucket>&quot;Zach Ertz&quot;</bucket>
              <bucket>&quot;James White&quot;</bucket>
              <bucket>&quot;Tevin Coleman&quot;</bucket>
              <bucket>&quot;Chris Godwin&quot;</bucket>
              <bucket>&quot;Alshon Jeffery&quot;</bucket>
              <bucket>&quot;Derrius Guice&quot;</bucket>
              <bucket>&quot;Robby Anderson&quot;</bucket>
              <bucket>&quot;Tyler Boyd&quot;</bucket>
              <bucket>&quot;Sammy Watkins&quot;</bucket>
              <bucket>&quot;Mike Williams&quot;</bucket>
              <bucket>&quot;Allen Robinson&quot;</bucket>
              <bucket>&quot;Calvin Ridley&quot;</bucket>
              <bucket>&quot;Tarik Cohen&quot;</bucket>
              <bucket>&quot;Peyton Barber&quot;</bucket>
              <bucket>&quot;D.J. Moore&quot;</bucket>
              <bucket>&quot;LeSean McCoy&quot;</bucket>
              <bucket>&quot;Jarvis Landry&quot;</bucket>
              <bucket>&quot;Dante Pettis&quot;</bucket>
              <bucket>&quot;O.J. Howard&quot;</bucket>
              <bucket>&quot;Marvin Jones&quot;</bucket>
              <bucket>&quot;Will Fuller&quot;</bucket>
              <bucket>&quot;Sterling Shepard&quot;</bucket>
              <bucket>&quot;Jordan Howard&quot;</bucket>
              <bucket>&quot;Christian Kirk&quot;</bucket>
              <bucket>&quot;Evan Engram&quot;</bucket>
              <bucket>&quot;Rashaad Penny&quot;</bucket>
              <bucket>&quot;Austin Ekeler&quot;</bucket>
              <bucket>&quot;Jared Cook&quot;</bucket>
              <bucket>&quot;Dede Westbrook&quot;</bucket>
              <bucket>&quot;Miles Sanders&quot;</bucket>
              <bucket>&quot;Corey Davis&quot;</bucket>
              <bucket>&quot;Golden Tate&quot;</bucket>
              <bucket>&quot;Hunter Henry&quot;</bucket>
              <bucket>&quot;Darrell Henderson&quot;</bucket>
              <bucket>&quot;Courtland Sutton&quot;</bucket>
              <bucket>&quot;Larry Fitzgerald&quot;</bucket>
              <bucket>&quot;Latavius Murray&quot;</bucket>
              <bucket>&quot;Curtis Samuel&quot;</bucket>
              <bucket>&quot;Mohamed Sanu&quot;</bucket>
              <bucket>&quot;Kenny Stills&quot;</bucket>
              <bucket>&quot;DeSean Jackson&quot;</bucket>
              <bucket>&quot;Emmanuel Sanders&quot;</bucket>
              <bucket>&quot;Ito Smith&quot;</bucket>
              <bucket>&quot;Tyrell Williams&quot;</bucket>
              <bucket>&quot;Vance McDonald&quot;</bucket>
              <bucket>&quot;Marqise Lee&quot;</bucket>
              <bucket>&quot;Eric Ebron&quot;</bucket>
              <bucket>&quot;David Njoku&quot;</bucket>
              <bucket>&quot;Jerick McKinnon&quot;</bucket>
              <bucket>&quot;Michael Gallup&quot;</bucket>
              <bucket>&quot;Geronimo Allison&quot;</bucket>
              <bucket>&quot;Royce Freeman&quot;</bucket>
              <bucket>&quot;N&apos;Keal Harry&quot;</bucket>
              <bucket>&quot;Jamison Crowder&quot;</bucket>
              <bucket>&quot;Devin Funchess&quot;</bucket>
              <bucket>&quot;Donte Moncrief&quot;</bucket>
              <bucket>&quot;Matt Breida&quot;</bucket>
              <bucket>&quot;Ronald Jones II&quot;</bucket>
              <bucket>&quot;James Washington&quot;</bucket>
              <bucket>&quot;John Brown&quot;</bucket>
              <bucket>&quot;Marquez Valdes-Scantling&quot;</bucket>
              <bucket>&quot;D&apos;Onta Foreman&quot;</bucket>
              <bucket>&quot;Jordan Reed&quot;</bucket>
              <bucket>&quot;Nyheim Hines&quot;</bucket>
              <bucket>&quot;D.K. Metcalf&quot;</bucket>
              <bucket>&quot;Dion Lewis&quot;</bucket>
              <bucket>&quot;Delanie Walker&quot;</bucket>
              <bucket>&quot;Robert Foster&quot;</bucket>
              <bucket>&quot;DaeSean Hamilton&quot;</bucket>
              <bucket>&quot;Jamaal Williams&quot;</bucket>
              <bucket>&quot;Ted Ginn&quot;</bucket>
              <bucket>&quot;Anthony Miller&quot;</bucket>
              <bucket>&quot;Albert Wilson&quot;</bucket>
              <bucket>&quot;Marquise Goodwin&quot;</bucket>
              <bucket>&quot;Parris Campbell&quot;</bucket>
              <bucket>&quot;Austin Hooper&quot;</bucket>
              <bucket>&quot;Nelson Agholor&quot;</bucket>
              <bucket>&quot;Jaylen Samuels&quot;</bucket>
              <bucket>&quot;Jimmy Graham&quot;</bucket>
              <bucket>&quot;Devante Parker&quot;</bucket>
              <bucket>&quot;Keke Coutee&quot;</bucket>
              <bucket>&quot;Adrian Peterson&quot;</bucket>
              <bucket>&quot;Mark Andrews&quot;</bucket>
              <bucket>&quot;Chris Thompson&quot;</bucket>
              <bucket>&quot;Carlos Hyde&quot;</bucket>
              <bucket>&quot;Kalen Ballage&quot;</bucket>
              <bucket>&quot;Greg Olsen&quot;</bucket>
              <bucket>&quot;Taylor Gabriel&quot;</bucket>
              <bucket>&quot;Marquise Brown&quot;</bucket>
              <bucket>&quot;Josh Doctson&quot;</bucket>
              <bucket>&quot;Quincy Enunwa&quot;</bucket>
              <bucket>&quot;Trey Burton&quot;</bucket>
              <bucket>&quot;Jalen Richard&quot;</bucket>
              <bucket>&quot;Paul Richardson&quot;</bucket>
              <bucket>&quot;Adam Humphries&quot;</bucket>
              <bucket>&quot;Willie Snead&quot;</bucket>
              <bucket>&quot;Kyle Rudolph&quot;</bucket>
              <bucket>&quot;Jack Doyle&quot;</bucket>
              <bucket>&quot;Duke Johnson Jr.&quot;</bucket>
              <bucket>&quot;Zay Jones&quot;</bucket>
              <bucket>&quot;Kareem Hunt&quot;</bucket>
              <bucket>&quot;Frank Gore&quot;</bucket>
              <bucket>&quot;T.J. Hockenson&quot;</bucket>
              <bucket>&quot;Cole Beasley&quot;</bucket>
              <bucket>&quot;A.J. Brown&quot;</bucket>
              <bucket>&quot;David Moore&quot;</bucket>
              <bucket>&quot;Danny Amendola&quot;</bucket>
              <bucket>&quot;Giovani Bernard&quot;</bucket>
              <bucket>&quot;Damien Harris&quot;</bucket>
              <bucket>&quot;Tyler Eifert&quot;</bucket>
              <bucket>&quot;C.J. Anderson&quot;</bucket>
              <bucket>&quot;Deebo Samuel&quot;</bucket>
              <bucket>&quot;Noah Fant&quot;</bucket>
              <bucket>&quot;Chris Herndon IV&quot;</bucket>
              <bucket>&quot;Randall Cobb&quot;</bucket>
              <bucket>&quot;Breshad Perriman&quot;</bucket>
              <bucket>&quot;Gus Edwards&quot;</bucket>
              <bucket>&quot;Tre&apos;Quan Smith&quot;</bucket>
              <bucket>&quot;Andy Isabella&quot;</bucket>
              <bucket>&quot;Jason Witten&quot;</bucket>
              <bucket>&quot;Mecole Hardman&quot;</bucket>
              <bucket>&quot;Antonio Callaway&quot;</bucket>
              <bucket>&quot;Dallas Goedert&quot;</bucket>
              <bucket>&quot;Theo Riddick&quot;</bucket>
              <bucket>&quot;Bilal Powell&quot;</bucket>
              <bucket>&quot;Alexander Mattison&quot;</bucket>
              <bucket>&quot;T.J. Yeldon&quot;</bucket>
              <bucket>&quot;Darren Waller&quot;</bucket>
              <bucket>&quot;Alfred Blue&quot;</bucket>
              <bucket>&quot;Mike Davis&quot;</bucket>
              <bucket>&quot;Trey Quinn&quot;</bucket>
              <bucket>&quot;D.J. Chark&quot;</bucket>
              <bucket>&quot;Travis Benjamin&quot;</bucket>
              <bucket>&quot;Devontae Booker&quot;</bucket>
              <bucket>&quot;Rashard Higgins&quot;</bucket>
              <bucket>&quot;Demarcus Robinson&quot;</bucket>
              <bucket>&quot;Chris Conley&quot;</bucket>
              <bucket>&quot;Jakeem Grant&quot;</bucket>
              <bucket>&quot;John Ross&quot;</bucket>
              <bucket>&quot;Mike Gesicki&quot;</bucket>
              <bucket>&quot;Will Dissly&quot;</bucket>
              <bucket>&quot;Rex Burkhead&quot;</bucket>
              <bucket>&quot;Equanimeous St. Brown&quot;</bucket>
              <bucket>&quot;Gerald Everett&quot;</bucket>
              <bucket>&quot;Cameron Brate&quot;</bucket>
              <bucket>&quot;Benjamin Watson&quot;</bucket>
              <bucket>&quot;Vernon Davis&quot;</bucket>
              <bucket>&quot;Doug Martin&quot;</bucket>
              <bucket>&quot;Chris Hogan&quot;</bucket>
              <bucket>&quot;Chase Edmonds&quot;</bucket>
              <bucket>&quot;Kendrick Bourne&quot;</bucket>
              <bucket>&quot;Phillip Dorsett&quot;</bucket>
              <bucket>&quot;Corey Clement&quot;</bucket>
              <bucket>&quot;Darwin Thompson&quot;</bucket>
              <bucket>&quot;Justin Jackson&quot;</bucket>
              <bucket>&quot;Justice Hill&quot;</bucket>
              <bucket>&quot;Elijah McGuire&quot;</bucket>
              <bucket>&quot;Demaryius Thomas&quot;</bucket>
              <bucket>&quot;Jace Sternberger&quot;</bucket>
              <bucket>&quot;Ricky Seals-Jones&quot;</bucket>
              <bucket>&quot;Geoff Swaim&quot;</bucket>
              <bucket>&quot;Malcolm Brown&quot;</bucket>
              <bucket>&quot;Dontrelle Inman&quot;</bucket>
              <bucket>&quot;Matt LaCosse&quot;</bucket>
              <bucket>&quot;Terry McLaurin&quot;</bucket>
              <bucket>&quot;Hakeem Butler&quot;</bucket>
              <bucket>&quot;Josh Reynolds&quot;</bucket>
              <bucket>&quot;Josh Oliver&quot;</bucket>
              <bucket>&quot;Hayden Hurst&quot;</bucket>
              <bucket>&quot;Ian Thomas&quot;</bucket>
              <bucket>&quot;Tim Patrick&quot;</bucket>
              <bucket>&quot;Jordan Thomas&quot;</bucket>
              <bucket>&quot;Kahale Warring&quot;</bucket>
              <bucket>&quot;Chester Rogers&quot;</bucket>
              <bucket>&quot;Tyler Higbee&quot;</bucket>
              <bucket>&quot;Ty Montgomery&quot;</bucket>
              <bucket>&quot;J.J. Arcega-Whiteside&quot;</bucket>
              <bucket>&quot;Charles Clay&quot;</bucket>
              <bucket>&quot;Cameron Artis-Payne&quot;</bucket>
              <bucket>&quot;Irv Smith Jr.&quot;</bucket>
              <bucket>&quot;Devin Singletary&quot;</bucket>
              <bucket>&quot;Wayne Gallman&quot;</bucket>
              <bucket>&quot;Blake Jarwin&quot;</bucket>
              <bucket>&quot;Hunter Renfrow&quot;</bucket>
              <bucket>&quot;Andre Ellington&quot;</bucket>
              <bucket>&quot;Nick Vannett&quot;</bucket>
              <bucket>&quot;Jarius Wright&quot;</bucket>
              <bucket>&quot;Cordarrelle Patterson&quot;</bucket>
              <bucket>&quot;J.D. McKissic&quot;</bucket>
              <bucket>&quot;Jaron Brown&quot;</bucket>
              <bucket>&quot;Seth Roberts&quot;</bucket>
              <bucket>&quot;Chad Beebe&quot;</bucket>
              <bucket>&quot;Tony Pollard&quot;</bucket>
              <bucket>&quot;Miles Boykin&quot;</bucket>
              <bucket>&quot;Adam Shaheen&quot;</bucket>
              <bucket>&quot;Mo Alie-Cox&quot;</bucket>
              <bucket>&quot;Ed Dickson&quot;</bucket>
              <bucket>&quot;Rodney Anderson&quot;</bucket>
              <bucket>&quot;Bryce Love&quot;</bucket>
              <bucket>&quot;Chris Moore&quot;</bucket>
              <bucket>&quot;Ryan Switzer&quot;</bucket>
              <bucket>&quot;Kenneth Dixon&quot;</bucket>
              <bucket>&quot;Kyle Juszczyk&quot;</bucket>
              <bucket>&quot;Cody Latimer&quot;</bucket>
              <bucket>&quot;Ryquell Armstead&quot;</bucket>
              <bucket>&quot;Jermaine Kearse&quot;</bucket>
              <bucket>&quot;Ryan Grant&quot;</bucket>
              <bucket>&quot;C.J. Uzomah&quot;</bucket>
              <bucket>&quot;Laquon Treadwell&quot;</bucket>
              <bucket>&quot;Bennie Fowler&quot;</bucket>
              <bucket>&quot;Keelan Cole&quot;</bucket>
              <bucket>&quot;Benny Snell Jr.&quot;</bucket>
              <bucket>&quot;Jason Croom&quot;</bucket>
              <bucket>&quot;Jordan Akins&quot;</bucket>
              <bucket>&quot;Keith Kirkwood&quot;</bucket>
              <bucket>&quot;James O&apos;Shaughnessy&quot;</bucket>
              <bucket>&quot;Tavon Austin&quot;</bucket>
              <bucket>&quot;Spencer Ware&quot;</bucket>
              <bucket>&quot;Jesse James&quot;</bucket>
              <bucket>&quot;J.J. Nelson&quot;</bucket>
              <bucket>&quot;Dawson Knox&quot;</bucket>
              <bucket>&quot;Aldrick Robinson&quot;</bucket>
              <bucket>&quot;Marcell Ateman&quot;</bucket>
              <bucket>&quot;Rhett Ellison&quot;</bucket>
              <bucket>&quot;Demetrius Harris&quot;</bucket>
              <bucket>&quot;Eli Rogers&quot;</bucket>
              <bucket>&quot;Tyler Kroft&quot;</bucket>
              <bucket>&quot;Jordan Scarlett&quot;</bucket>
              <bucket>&quot;Taywan Taylor&quot;</bucket>
              <bucket>&quot;Darrel Williams&quot;</bucket>
              <bucket>&quot;Corey Coleman&quot;</bucket>
              <bucket>&quot;Myles Gaskin&quot;</bucket>
              <bucket>&quot;Justin Hardy&quot;</bucket>
              <bucket>&quot;Diontae Johnson&quot;</bucket>
              <bucket>&quot;Justin Watson&quot;</bucket>
              <bucket>&quot;Jeff Heuerman&quot;</bucket>
              <bucket>&quot;Jonnu Smith&quot;</bucket>
              <bucket>&quot;Gary Jennings&quot;</bucket>
              <bucket>&quot;Mark Walton&quot;</bucket>
              <bucket>&quot;Jordan Taylor&quot;</bucket>
              <bucket>&quot;Jalen Hurd&quot;</bucket>
              <bucket>&quot;Kelvin Harmon&quot;</bucket>
              <bucket>&quot;Jordan Matthews&quot;</bucket>
              <bucket>&quot;Dexter Williams&quot;</bucket>
              <bucket>&quot;Preston Williams&quot;</bucket>
              <bucket>&quot;Virgil Green&quot;</bucket>
              <bucket>&quot;Torrey Smith&quot;</bucket>
              <bucket>&quot;Brian Hill&quot;</bucket>
              <bucket>&quot;Dwayne Allen&quot;</bucket>
              <bucket>&quot;Wendell Smallwood&quot;</bucket>
              <bucket>&quot;Mike Boone&quot;</bucket>
              <bucket>&quot;Brandon Bolden&quot;</bucket>
              <bucket>&quot;C.J. Prosise&quot;</bucket>
              <bucket>&quot;Luke Willson&quot;</bucket>
              <bucket>&quot;Jordan Wilkins&quot;</bucket>
              <bucket>&quot;Tanner Hudson&quot;</bucket>
              <bucket>&quot;DeAndre Carter&quot;</bucket>
              <bucket>&quot;Nick Boyle&quot;</bucket>
              <bucket>&quot;Tajae Sharpe&quot;</bucket>
              <bucket>&quot;Maxx Williams&quot;</bucket>
              <bucket>&quot;Darius Slayton&quot;</bucket>
              <bucket>&quot;Josh Hill&quot;</bucket>
              <bucket>&quot;Jake Kumerow&quot;</bucket>
              <bucket>&quot;Drew Sample&quot;</bucket>
              <bucket>&quot;Paul Perkins&quot;</bucket>
              <bucket>&quot;Jake Butt&quot;</bucket>
              <bucket>&quot;Isaiah McKenzie&quot;</bucket>
              <bucket>&quot;Xavier Grimble&quot;</bucket>
              <bucket>&quot;Travis Homer&quot;</bucket>
              <bucket>&quot;Zach Zenner&quot;</bucket>
              <bucket>&quot;Riley Ridley&quot;</bucket>
              <bucket>&quot;Travis Fulgham&quot;</bucket>
              <bucket>&quot;Jakob Johnson&quot;</bucket>
              <bucket>&quot;Stephen Anderson&quot;</bucket>
              <bucket>&quot;Garrett Griffin&quot;</bucket>
              <bucket>&quot;Levine Toilolo&quot;</bucket>
              <bucket>&quot;Cody Core&quot;</bucket>
              <bucket>&quot;Allen Hurns&quot;</bucket>
              <bucket>&quot;Javorius Allen&quot;</bucket>
              <bucket>&quot;Qadree Ollison&quot;</bucket>
              <bucket>&quot;Darius Jackson&quot;</bucket>
              <bucket>&quot;Alex Erickson&quot;</bucket>
              <bucket>&quot;Anthony Firkser&quot;</bucket>
              <bucket>&quot;Daniel Brown&quot;</bucket>
              <bucket>&quot;Dylan Cantrell&quot;</bucket>
              <bucket>&quot;Eric Tomlinson&quot;</bucket>
              <bucket>&quot;Logan Paulsen&quot;</bucket>
              <bucket>&quot;Cameron Meredith&quot;</bucket>
              <bucket>&quot;Russell Gage&quot;</bucket>
              <bucket>&quot;Erik Swoope&quot;</bucket>
              <bucket>&quot;Foster Moreau&quot;</bucket>
              <bucket>&quot;Darren Fells&quot;</bucket>
              <bucket>&quot;Trent Taylor&quot;</bucket>
              <bucket>&quot;Zach Pascal&quot;</bucket>
              <bucket>&quot;Bobo Wilson&quot;</bucket>
              <bucket>&quot;Rishard Matthews&quot;</bucket>
              <bucket>&quot;Maurice Harris&quot;</bucket>
              <bucket>&quot;Zach Gentry&quot;</bucket>
              <bucket>&quot;Trevon Wesco&quot;</bucket>
              <bucket>&quot;Ameer Abdullah&quot;</bucket>
              <bucket>&quot;Luke Stocker&quot;</bucket>
              <bucket>&quot;Vyncint Smith&quot;</bucket>
              <bucket>&quot;Robert Tonyan&quot;</bucket>
              <bucket>&quot;Rod Smith&quot;</bucket>
              <bucket>&quot;Mack Hollins&quot;</bucket>
              <bucket>&quot;Anthony Sherman&quot;</bucket>
              <bucket>&quot;Deon Cain&quot;</bucket>
              <bucket>&quot;Russell Shepard&quot;</bucket>
              <bucket>&quot;MyCole Pruitt&quot;</bucket>
              <bucket>&quot;Dan Arnold&quot;</bucket>
              <bucket>&quot;Blake Bell&quot;</bucket>
              <bucket>&quot;Trevor Davis&quot;</bucket>
              <bucket>&quot;Josh Bellamy&quot;</bucket>
              <bucket>&quot;Kaden Smith&quot;</bucket>
              <bucket>&quot;Garrett Celek&quot;</bucket>
              <bucket>&quot;Tyler Conklin&quot;</bucket>
              <bucket>&quot;Deontay Burnett&quot;</bucket>
              <bucket>&quot;Geremy Davis&quot;</bucket>
              <bucket>&quot;Benny Cunningham&quot;</bucket>
              <bucket>&quot;Marcedes Lewis&quot;</bucket>
              <bucket>&quot;Chris Manhertz&quot;</bucket>
              <bucket>&quot;Isaac Nauta&quot;</bucket>
              <bucket>&quot;Nick O&apos;Leary&quot;</bucket>
              <bucket>&quot;Neal Sterling&quot;</bucket>
              <bucket>&quot;Antony Auclair&quot;</bucket>
              <bucket>&quot;Amara Darboh&quot;</bucket>
              <bucket>&quot;Austin Carr&quot;</bucket>
              <bucket>&quot;James Develin&quot;</bucket>
              <bucket>&quot;Derek Carrier&quot;</bucket>
              <bucket>&quot;Jeremy Sprinkle&quot;</bucket>
              <bucket>&quot;Richard Rodgers&quot;</bucket>
              <bucket>&quot;Trey Edmunds&quot;</bucket>
              <bucket>&quot;Alize Mack&quot;</bucket>
              <bucket>&quot;Trayveon Williams&quot;</bucket>
              <bucket>&quot;Jason Vander Laan&quot;</bucket>
              <bucket>&quot;Jaelen Strong&quot;</bucket>
              <bucket>&quot;Tyrone Swoopes&quot;</bucket>
              <bucket>&quot;Bruce Anderson&quot;</bucket>
              <bucket>&quot;Thomas Rawls&quot;</bucket>
              <bucket>&quot;KeeSean Johnson&quot;</bucket>
              <bucket>&quot;Trenton Cannon&quot;</bucket>
              <bucket>&quot;Cethan Carter&quot;</bucket>
              <bucket>&quot;Darvin Kidsy&quot;</bucket>
              <bucket>&quot;Vince Mayle&quot;</bucket>
              <bucket>&quot;Tommy Sweeney&quot;</bucket>
              <bucket>&quot;Brice Butler&quot;</bucket>
              <bucket>&quot;Darren Sproles&quot;</bucket>
              <bucket>&quot;Byron Marshall&quot;</bucket>
              <bucket>&quot;Dwayne Washington&quot;</bucket>
              <bucket>&quot;Jordan Leggett&quot;</bucket>
              <bucket>&quot;Raheem Mostert&quot;</bucket>
              <bucket>&quot;Brandon Powell&quot;</bucket>
              <bucket>&quot;Brian Quick&quot;</bucket>
              <bucket>&quot;Boston Scott&quot;</bucket>
              <bucket>&quot;Alex Armah&quot;</bucket>
              <bucket>&quot;Patrick Ricard&quot;</bucket>
              <bucket>&quot;Justin Davis&quot;</bucket>
              <bucket>&quot;Braxton Berrios&quot;</bucket>
              <bucket>&quot;Elijhaa Penny&quot;</bucket>
              <bucket>&quot;Seth DeValve&quot;</bucket>
              <bucket>&quot;Zach Line&quot;</bucket>
              <bucket>&quot;Andy Janovich&quot;</bucket>
              <bucket>&quot;K.J. Brent&quot;</bucket>
              <bucket>&quot;Artavis Scott&quot;</bucket>
              <bucket>&quot;Dalton Schultz&quot;</bucket>
              <bucket>&quot;Nick Bellore&quot;</bucket>
              <bucket>&quot;Andy Jones&quot;</bucket>
              <bucket>&quot;Josh Ferguson&quot;</bucket>
              <bucket>&quot;Durham Smythe&quot;</bucket>
              <bucket>&quot;Dontrell Hilliard&quot;</bucket>
              <bucket>&quot;Dare Ogunbowale&quot;</bucket>
              <bucket>&quot;Chad Williams&quot;</bucket>
              <bucket>&quot;Ryan Izzo&quot;</bucket>
              <bucket>&quot;Mike Weber&quot;</bucket>
              <bucket>&quot;CJ Ham&quot;</bucket>
              <bucket>&quot;De&apos;Angelo Henderson&quot;</bucket>
              <bucket>&quot;Marvin Hall&quot;</bucket>
              <bucket>&quot;D.J. Foster&quot;</bucket>
              <bucket>&quot;David Fluellen&quot;</bucket>
              <bucket>&quot;T.J. Logan&quot;</bucket>
              <bucket>&quot;Josh Adams&quot;</bucket>
              <bucket>&quot;Richie James&quot;</bucket>
              <bucket>&quot;Jordan Lasley&quot;</bucket>
              <bucket>&quot;Deonte Thompson&quot;</bucket>
              <bucket>&quot;John Kelly&quot;</bucket>
              <bucket>&quot;Derrick Willies&quot;</bucket>
              <bucket>&quot;Jeff Wilson&quot;</bucket>
              <bucket>&quot;Johnny Holton&quot;</bucket>
              <bucket>&quot;Roosevelt Nix&quot;</bucket>
              <bucket>&quot;Jehu Chesson&quot;</bucket>
              <bucket>&quot;Jordan Franks&quot;</bucket>
              <bucket>&quot;Darius Jennings&quot;</bucket>
              <bucket>&quot;Eric Saubert&quot;</bucket>
              <bucket>&quot;Detrez Newsome&quot;</bucket>
              <bucket>&quot;DeAndre Washington&quot;</bucket>
              <bucket>&quot;Dwayne Harris&quot;</bucket>
              <bucket>&quot;Patrick DiMarco&quot;</bucket>
              <bucket>&quot;Juwann Winfree&quot;</bucket>
              <bucket>&quot;David Morgan&quot;</bucket>
              <bucket>&quot;Byron Pringle&quot;</bucket>
              <bucket>&quot;Scott Simonson&quot;</bucket>
              <bucket>&quot;Lee Smith&quot;</bucket>
              <bucket>&quot;Jerell Adams&quot;</bucket>
              <bucket>&quot;Jamize Olawale&quot;</bucket>
              <bucket>&quot;Auden Tate&quot;</bucket>
              <bucket>&quot;Damion Ratley&quot;</bucket>
              <bucket>&quot;Sean Culkin&quot;</bucket>
              <bucket>&quot;Samaje Perine&quot;</bucket>
              <bucket>&quot;Brandon Zylstra&quot;</bucket>
              <bucket>&quot;Tanner Gentry&quot;</bucket>
              <bucket>&quot;Caleb Wilson&quot;</bucket>
              <bucket>&quot;J&apos;Mon Moore&quot;</bucket>
              <bucket>&quot;Marcus Kemp&quot;</bucket>
              <bucket>&quot;Chris Lacy&quot;</bucket>
              <bucket>&quot;Lance Lenoir&quot;</bucket>
              <bucket>&quot;Braxton Miller&quot;</bucket>
              <bucket>&quot;River Cracraft&quot;</bucket>
              <bucket>&quot;Gregory Howell&quot;</bucket>
              <bucket>&quot;Troymaine Pope&quot;</bucket>
              <bucket>&quot;Kenneth Farrow&quot;</bucket>
              <bucket>&quot;Kevin White&quot;</bucket>
              <bucket>&quot;Andre Roberts&quot;</bucket>
              <bucket>&quot;Keon Hatcher&quot;</bucket>
              <bucket>&quot;Tommylee Lewis&quot;</bucket>
              <bucket>&quot;Josh Malone&quot;</bucket>
              <bucket>&quot;Kalif Raymond&quot;</bucket>
              <bucket>&quot;JoJo Natson&quot;</bucket>
              <bucket>&quot;Damiere Byrd&quot;</bucket>
              <bucket>&quot;Cam Batson&quot;</bucket>
              <bucket>&quot;John Ursua&quot;</bucket>
              <bucket>&quot;Isaac Whitney&quot;</bucket>
              <bucket>&quot;Noah Brown&quot;</bucket>
              <bucket>&quot;Cole Wick&quot;</bucket>
              <bucket>&quot;Taiwan Jones&quot;</bucket>
              <bucket>&quot;Ty Johnson&quot;</bucket>
              <bucket>&quot;Tyler Ervin&quot;</bucket>
              <bucket>&quot;Derek Watt&quot;</bucket>
              <bucket>&quot;Chris Warren III&quot;</bucket>
              <bucket>&quot;Hunter Sharp&quot;</bucket>
              <bucket>&quot;Ray-Ray McCloud&quot;</bucket>
              <bucket>&quot;De&apos;Lance Turner&quot;</bucket>
              <bucket>&quot;Tra Carson&quot;</bucket>
              <bucket>&quot;Ricky Ortiz&quot;</bucket>
              <bucket>&quot;Isaiah Ford&quot;</bucket>
              <bucket>&quot;Jerome Cunningham&quot;</bucket>
              <bucket>&quot;Keith Smith&quot;</bucket>
              <bucket>&quot;Victor Bolden Jr.&quot;</bucket>
              <bucket>&quot;Cam Phillips&quot;</bucket>
              <bucket>&quot;Joshua Perkins&quot;</bucket>
              <bucket>&quot;Taquan Mizzell&quot;</bucket>
              <bucket>&quot;Kenjon Barner&quot;</bucket>
              <bucket>&quot;Gehrig Dieter&quot;</bucket>
              <bucket>&quot;Allen Lazard&quot;</bucket>
              <bucket>&quot;Clive Walford&quot;</bucket>
              <bucket>&quot;Michael Burton&quot;</bucket>
              <bucket>&quot;Ben Braunecker&quot;</bucket>
              <bucket>&quot;Gabe Holmes&quot;</bucket>
              <bucket>&quot;Jeremy McNichols&quot;</bucket>
              <bucket>&quot;Logan Thomas&quot;</bucket>
              <bucket>&quot;Ben Koyack&quot;</bucket>
              <bucket>&quot;Nick Bawden&quot;</bucket>
              <bucket>&quot;Matt Slater&quot;</bucket>
              <bucket>&quot;Jacob Hollister&quot;</bucket>
              <bucket>&quot;Trent Sherfield&quot;</bucket>
              <bucket>&quot;Rashad Ross&quot;</bucket>
              <bucket>&quot;Malik Turner&quot;</bucket>
              <bucket>&quot;Quadree Henderson&quot;</bucket>
              <bucket>&quot;Matt Flanagan&quot;</bucket>
              <bucket>&quot;Ross Travis&quot;</bucket>
              <bucket>&quot;Jonathan Williams&quot;</bucket>
              <bucket>&quot;Mike Thomas&quot;</bucket>
              <bucket>&quot;Daurice Fountain&quot;</bucket>
              <bucket>&quot;Shelton Gibson&quot;</bucket>
              <bucket>&quot;Devin Smith&quot;</bucket>
              <bucket>&quot;Charles Johnson&quot;</bucket>
              <bucket>&quot;Cedrick Wilson&quot;</bucket>
              <bucket>&quot;Charone Peake&quot;</bucket>
              <bucket>&quot;Brittan Golden&quot;</bucket>
              <bucket>&quot;Rico Gathers&quot;</bucket>
              <bucket>&quot;Tim White&quot;</bucket>
              <bucket>&quot;Pharoh Cooper&quot;</bucket>
              <bucket>&quot;Max McCaffrey&quot;</bucket>
              <bucket>&quot;J.J. Jones&quot;</bucket>
              <bucket>&quot;Senorise Perry&quot;</bucket>
              <bucket>&quot;Matthew Dayes&quot;</bucket>
              <bucket>&quot;DeAndrew White&quot;</bucket>
              <bucket>&quot;Dillon Mitchell&quot;</bucket>
              <bucket>&quot;Javon Wims&quot;</bucket>
              <bucket>&quot;Darrell Daniels&quot;</bucket>
              <bucket>&quot;Evan Baylis&quot;</bucket>
              <bucket>&quot;Orson Charles&quot;</bucket>
              <bucket>&quot;Michael Floyd&quot;</bucket>
              <bucket>&quot;Khadarel Hodge&quot;</bucket>
              <bucket>&quot;Will Tye&quot;</bucket>
              <bucket>&quot;Marcus Johnson&quot;</bucket>
              <bucket>&quot;Johnny Mundt&quot;</bucket>
              <bucket>&quot;Krishawn Hogan&quot;</bucket>
              <bucket>&quot;Dan Vitale&quot;</bucket>
              <bucket>&quot;Ross Dwelley&quot;</bucket>
              <bucket>&quot;Tyre Brady&quot;</bucket>
              <bucket>&quot;Tre McBride&quot;</bucket>
              <bucket>&quot;Terry Godwin&quot;</bucket>
              <bucket>&quot;Terrelle Pryor&quot;</bucket>
              <bucket>&quot;Simmie Cobbs Jr.&quot;</bucket>
              <bucket>&quot;Robert Davis&quot;</bucket>
              <bucket>&quot;Ricardo Louis&quot;</bucket>
              <bucket>&quot;Quincy Adeboyejo&quot;</bucket>
              <bucket>&quot;Penny Hart&quot;</bucket>
              <bucket>&quot;Olabisi Johnson&quot;</bucket>
              <bucket>&quot;Marken Michel&quot;</bucket>
              <bucket>&quot;Kelvin McKnight&quot;</bucket>
              <bucket>&quot;Keenan Reynolds&quot;</bucket>
              <bucket>&quot;Josh Gordon&quot;</bucket>
              <bucket>&quot;Joe Webb&quot;</bucket>
              <bucket>&quot;Jester Weah&quot;</bucket>
              <bucket>&quot;Jawill Davis&quot;</bucket>
              <bucket>&quot;Jalen Tolliver&quot;</bucket>
              <bucket>&quot;Jaleel Scott&quot;</bucket>
              <bucket>&quot;Greg Dortch&quot;</bucket>
              <bucket>&quot;Emanuel Hall&quot;</bucket>
              <bucket>&quot;Da&apos;Mari Scott&quot;</bucket>
              <bucket>&quot;Chad Hansen&quot;</bucket>
              <bucket>&quot;Carlton Agudosi&quot;</bucket>
              <bucket>&quot;Cam Sims&quot;</bucket>
              <bucket>&quot;Austin Proehl&quot;</bucket>
              <bucket>&quot;Ashton Dulin&quot;</bucket>
              <bucket>&quot;Antoine Wesley&quot;</bucket>
              <bucket>&quot;Alonzo Russell&quot;</bucket>
              <bucket>&quot;Troy Fumagalli&quot;</bucket>
              <bucket>&quot;Temarrick Hemingway&quot;</bucket>
              <bucket>&quot;Ryan Hewitt&quot;</bucket>
              <bucket>&quot;Moritz Bohringer&quot;</bucket>
              <bucket>&quot;Mason Schreck&quot;</bucket>
              <bucket>&quot;Garrett Dickerson&quot;</bucket>
              <bucket>&quot;Donnie Ernsberger&quot;</bucket>
              <bucket>&quot;Deon Yelder&quot;</bucket>
              <bucket>&quot;Cole Hikutini&quot;</bucket>
              <bucket>&quot;Austin Traylor&quot;</bucket>
              <bucket>&quot;Shaun Wilson&quot;</bucket>
              <bucket>&quot;Quinton Flowers&quot;</bucket>
              <bucket>&quot;Marcus Murphy&quot;</bucket>
              <bucket>&quot;Marcus Green&quot;</bucket>
              <bucket>&quot;Malcolm Johnson&quot;</bucket>
              <bucket>&quot;Khalfani Muhammad&quot;</bucket>
              <bucket>&quot;Karan Higdon&quot;</bucket>
              <bucket>&quot;Isaiah Crowell&quot;</bucket>
              <bucket>&quot;Elijah Hood&quot;</bucket>
              <bucket>&quot;Elijah Holyfield&quot;</bucket>
              <bucket>&quot;Donnel Pumphrey&quot;</bucket>
              <bucket>&quot;Devine Ozigbo&quot;</bucket>
              <bucket>&quot;David Williams&quot;</bucket>
              <bucket>&quot;Cullen Gillaspia&quot;</bucket>
              <bucket>&quot;Chandler Cox&quot;</bucket>
              <bucket>&quot;Bo Scarbrough&quot;</bucket>
              <bucket>&quot;Alex Barnes&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.010e9iv0ybyi4613azm040lzf11t].[none:Player:nk]' value='47' />
            <format attr='width' field='[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]' value='95' />
            <format attr='cell-w' value='120' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915988496390:qk:1]' value='N' />
            <format attr='text-format' field='[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915990994951:qk:1]' value='N' />
            <format attr='text-format' field='[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915991158792:qk:1]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.010e9iv0ybyi4613azm040lzf11t].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.010e9iv0ybyi4613azm040lzf11t].[none:Player:nk]</rows>
        <cols>[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{147E1641-F0FF-492F-B680-C9F04165DC95}' />
    </worksheet>
    <worksheet name='25+ Yd Rec'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[QB_air_yards]' member='25.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='26.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='27.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='28.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='29.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='30.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='31.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='32.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='33.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='34.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='35.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='36.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='37.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='38.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='39.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='40.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='41.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='42.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='43.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='44.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='45.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='46.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='47.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='48.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='49.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='50.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='51.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='52.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='53.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='54.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='55.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='56.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='57.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='58.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='59.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='60.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='61.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' included-values='in-range'>
            <min>4.7000000000000002</min>
            <max>71.5</max>
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Flex Name:&#9;</run>
                <run bold='true'>&lt;[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Receptions:&#9;</run>
                <run bold='true'>&lt;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Targets:&#9;</run>
                <run bold='true'>&lt;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Catch Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</cols>
      </table>
      <simple-id uuid='{562A4F46-6BCA-4105-8FDB-FD79DF95A672}' />
    </worksheet>
    <worksheet name='3d pass conv'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1st down success rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column caption='1st Down success rate' datatype='real' name='[Calculation_904097642928939008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([QB_firstdown])/sum([QB_attempt])' />
            </column>
            <column caption='airyards_from_chains' datatype='real' name='[Calculation_904097642929864705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[QB_air_yards] - [distance]' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB firstdown' datatype='real' name='[QB_firstdown]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[airyards_from_chains (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[QB_air_yards] - [distance]' />
            </column>
            <column aggregation='Sum' caption='Distance' datatype='integer' name='[distance]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Down' datatype='integer' name='[down]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_904097642929864705]' derivation='None' name='[none:Calculation_904097642929864705:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airyards_from_chains (copy)]' derivation='None' name='[none:airyards_from_chains (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[down]' derivation='None' name='[none:down:ok]' pivot='key' type='ordinal' />
            <column-instance column='[play_type]' derivation='None' name='[none:play_type:nk]' pivot='key' type='nominal' />
            <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904097642928939008]' derivation='User' name='[usr:Calculation_904097642928939008:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:airyards_from_chains (copy):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-11.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-10.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-9.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-8.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-7.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-6.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-5.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-4.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-3.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-2.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='-1.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='0.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='1.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='2.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='3.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='4.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='5.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='6.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='7.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='8.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='9.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='10.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='11.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='12.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='13.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='14.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='15.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='16.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='17.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='18.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='19.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='20.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='21.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='22.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='23.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='24.0' />
              <groupfilter function='member' level='[none:airyards_from_chains (copy):ok]' member='25.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:down:ok]'>
            <groupfilter function='member' level='[none:down:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]'>
            <groupfilter function='member' level='[none:play_type:nk]' member='&quot;pass&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:down:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:airyards_from_chains (copy):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642928939008:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642928939008:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642928939008:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline1' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642928939008:qk]' z-order='1' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642928939008:qk]' enable-instant-analytics='true' formula='median' id='refline2' label-type='automatic' paired-distribution-id='refline1' probability='95' scope='per-pane' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642928939008:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='jump' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642928939008:qk]</rows>
        <cols>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:Calculation_904097642929864705:qk]</cols>
      </table>
      <simple-id uuid='{17525E1C-8107-4494-B474-7F0B16F75DBC}' />
    </worksheet>
    <worksheet name='Air Yards Completion Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Completion Percentage' datatype='real' name='[Calculation_225179997274169348]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([QB_complete])/sum([QB_attempt])' />
            </column>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='None' caption='QB air yards (bin)' datatype='integer' name='[QB air yards (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[QB_air_yards]' peg='0' size='5' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB complete' datatype='real' name='[QB_complete]' role='measure' type='quantitative' />
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column-instance column='[QB_air_yards]' derivation='Avg' name='[avg:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[QB air yards (bin)]' derivation='None' name='[none:QB air yards (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997274169348]' derivation='User' name='[usr:Calculation_225179997274169348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[avg:QB_air_yards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]' />
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='0' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]'>
            <groupfilter function='level-members' level='[none:QB_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.25' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]' value='144' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
            <format attr='cell-w' value='44' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' value='N' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' />
              <size column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.58171272277832031' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk] * [federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk])</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[QB air yards (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5A38A8C8-FC14-48FB-92F9-CF3A10FBCF94}' />
    </worksheet>
    <worksheet name='Air Yards Completion Rate (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Drew Brees</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Completion Percentage' datatype='real' name='[Calculation_225179997274169348]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([QB_complete])/sum([QB_attempt])' />
            </column>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='None' caption='QB air yards (bin)' datatype='integer' name='[QB air yards (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[QB_air_yards]' peg='0' size='5' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB complete' datatype='real' name='[QB_complete]' role='measure' type='quantitative' />
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column-instance column='[QB_air_yards]' derivation='Avg' name='[avg:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[QB air yards (bin)]' derivation='None' name='[none:QB air yards (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997274169348]' derivation='User' name='[usr:Calculation_225179997274169348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[avg:QB_air_yards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]' />
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='0' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:QB air yards (bin):ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]'>
            <groupfilter function='member' level='[none:QB_name:nk]' member='&quot;Drew Brees&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]' value='144' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
            <format attr='cell-w' value='44' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' value='N' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.58171272277832031' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[QB air yards (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{D35BECAF-490E-4025-818B-6E902FD1806A}' />
    </worksheet>
    <worksheet name='Defense 25+'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column datatype='string' name='[defense]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[defense]' derivation='None' name='[none:defense:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[QB_air_yards]' member='25.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='26.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='27.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='28.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='29.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='30.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='31.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='32.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='33.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='34.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='35.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='36.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='37.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='38.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='39.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='40.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='41.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='42.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='43.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='44.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='45.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='46.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='47.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='48.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='49.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='50.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='51.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='52.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='53.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='54.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='55.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='56.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='57.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='58.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='59.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='60.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='61.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' included-values='in-range'>
            <min>17.0</min>
            <max>167.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' value='161' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7EBF9174-0BF5-4ABA-B8C7-43AAE4FE945F}' />
    </worksheet>
    <worksheet name='FD Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Flex Opportunity' datatype='real' name='[Calculation_1195142765681205248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_attempt]) + sum([flex_target])' />
            </column>
            <column caption='Touches' datatype='real' name='[Calculation_929711862986338306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_attempt]) + sum([flex_reception])' />
            </column>
            <column caption='First Down Rate' datatype='real' name='[Calculation_929711862993539075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_firstdown])/[Calculation_929711862986338306]' />
            </column>
            <column caption='Flex Attempt' datatype='real' name='[flex_attempt]' role='measure' type='quantitative' />
            <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_attempt]' derivation='Sum' name='[sum:flex_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_firstdown]' derivation='Sum' name='[sum:flex_firstdown:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1195142765681205248]' derivation='User' name='[usr:Calculation_1195142765681205248:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_929711862986338306]' derivation='User' name='[usr:Calculation_929711862986338306:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_929711862993539075]' derivation='User' name='[usr:Calculation_929711862993539075:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_1195142765681205248:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862986338306:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_firstdown:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862993539075:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_attempt:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_1195142765681205248:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862986338306:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_firstdown:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]'>
            <groupfilter from='&quot;A.J. Derby&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Zay Jones&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]'>
            <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;RB&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862986338306:qk]' included-values='in-range'>
            <min>200.0</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862993539075:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862986338306:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862993539075:qk]' value='p0.0%' />
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' value='169' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E76859A1-FF10-4796-9BE4-CA5CBCA87B4A}' />
    </worksheet>
    <worksheet name='FP - Defenses'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Fantasy Points per Game' datatype='real' name='[Calculation_310466915678724099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Jake_Points])/COUNTD([week_number])' />
            </column>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[defense]' role='dimension' type='nominal' />
            <column-instance column='[defense]' derivation='None' name='[none:defense:nk]' pivot='key' type='nominal' />
            <column-instance column='[offense]' derivation='None' name='[none:offense:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Offense' datatype='string' name='[offense]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_310466915678724099]' derivation='User' name='[usr:Calculation_310466915678724099:qk]' pivot='key' type='quantitative' />
            <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' value='-90' />
            <format attr='vertical-align' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' z-order='1' />
            <reference-line axis-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</cols>
      </table>
      <simple-id uuid='{B23BE4EC-888D-4D3B-9313-AD2123E71D0F}' />
    </worksheet>
    <worksheet name='FP - Offenses'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Fantasy Points per Game' datatype='real' name='[Calculation_310466915678724099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Jake_Points])/COUNTD([week_number])' />
            </column>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[defense]' role='dimension' type='nominal' />
            <column-instance column='[defense]' derivation='None' name='[none:defense:nk]' pivot='key' type='nominal' />
            <column-instance column='[offense]' derivation='None' name='[none:offense:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Offense' datatype='string' name='[offense]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_310466915678724099]' derivation='User' name='[usr:Calculation_310466915678724099:qk]' pivot='key' type='quantitative' />
            <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' value='-90' />
            <format attr='vertical-align' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' z-order='1' />
            <reference-line axis-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915678724099:qk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</cols>
      </table>
      <simple-id uuid='{7C966F52-0BBF-46DB-8387-1CBCC661BC86}' />
    </worksheet>
    <worksheet name='Fantasy PPG'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Games Played' datatype='integer' name='[Calculation_929711862915489792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd([week_number])' />
            </column>
            <column caption='Points Per Game' datatype='real' name='[Calculation_929711862915624961]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Jake_Points])/[Calculation_929711862915489792]' />
            </column>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_929711862915624961]' derivation='User' name='[usr:Calculation_929711862915624961:qk]' pivot='key' type='quantitative' />
            <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;RB&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;TE&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862915624961:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' member-value='2018' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='250.0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' max='500.0' min='-0.40000000000000002' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0000ff</color>
                <color>#1616fb</color>
                <color>#2d2df8</color>
                <color>#4242f4</color>
                <color>#5757f1</color>
                <color>#6c6ced</color>
                <color>#7f7fea</color>
                <color>#9292e6</color>
                <color>#a5a5e3</color>
                <color>#b7b7df</color>
                <color>#c8c8dc</color>
                <color>#d9d9d9</color>
                <color>#dcc8c8</color>
                <color>#dfb7b7</color>
                <color>#e3a5a5</color>
                <color>#e69292</color>
                <color>#ea7f7f</color>
                <color>#ed6c6c</color>
                <color>#f15757</color>
                <color>#f44242</color>
                <color>#f82d2d</color>
                <color>#fb1616</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' />
              <shape column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862915624961:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</rows>
        <cols>([federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok] * [federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862915624961:qk])</cols>
      </table>
      <simple-id uuid='{E5B4DA2A-F816-4419-A754-D7A66FD9965A}' />
    </worksheet>
    <worksheet name='Fantasy Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;RB&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;TE&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' member-value='2018' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='250.0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' max='500.0' min='-0.40000000000000002' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0000ff</color>
                <color>#1616fb</color>
                <color>#2d2df8</color>
                <color>#4242f4</color>
                <color>#5757f1</color>
                <color>#6c6ced</color>
                <color>#7f7fea</color>
                <color>#9292e6</color>
                <color>#a5a5e3</color>
                <color>#b7b7df</color>
                <color>#c8c8dc</color>
                <color>#d9d9d9</color>
                <color>#dcc8c8</color>
                <color>#dfb7b7</color>
                <color>#e3a5a5</color>
                <color>#e69292</color>
                <color>#ea7f7f</color>
                <color>#ed6c6c</color>
                <color>#f15757</color>
                <color>#f44242</color>
                <color>#f82d2d</color>
                <color>#fb1616</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' />
              <shape column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</rows>
        <cols>([federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok] * [federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk])</cols>
      </table>
      <simple-id uuid='{A7482CC9-789B-4F4E-BE92-F7331379EC8A}' />
    </worksheet>
    <worksheet name='Historic P/Format'>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column caption='PPR Points' datatype='real' name='[PPR_Points]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPR_Points]' derivation='Sum' name='[sum:PPR_Points:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:Jake_Points:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:PPR_Points:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:Jake_Points:qk]&quot;</bucket>
              <bucket>&quot;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:PPR_Points:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;RB&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;TE&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' direction='DESC' measure-to-sort-by='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:Jake_Points:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[:Measure Names]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]' />
              <text column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk] / [federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk])</rows>
        <cols>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4711A259-DD7C-486D-AA6A-68B4A57CC8BA}' />
    </worksheet>
    <worksheet name='Offense 25+'>
      <layout-options>
        <title>
          <formatted-text>
            <run>25+ Yard Targets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[offense]' derivation='None' name='[none:offense:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Offense' datatype='string' name='[offense]' role='dimension' type='nominal' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[QB_air_yards]' member='25.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='26.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='27.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='28.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='29.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='30.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='31.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='32.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='33.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='34.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='35.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='36.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='37.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='38.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='39.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='40.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='41.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='42.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='43.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='44.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='45.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='46.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='47.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='48.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='49.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='50.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='51.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='52.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='53.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='54.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='55.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='56.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='57.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='58.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='59.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='60.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='61.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' field-type='quantitative' max='0.54440286000000004' min='0.10000000000000001' range-type='fixed' reverse='true' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' scope='rows' value='Targets' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Seahawks&quot;</value>
                <value>147.0</value>
                <value>0.43537414965986393</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Panthers&quot;</value>
                <value>113.0</value>
                <value>0.22123893805309736</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ravens&quot;</value>
                <value>108.0</value>
                <value>0.22222222222222221</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Buccaneers&quot;</value>
                <value>49.0</value>
                <value>0.36734693877551022</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Colts&quot;</value>
                <value>37.0</value>
                <value>0.43243243243243246</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Lions&quot;</value>
                <value>31.0</value>
                <value>0.29032258064516131</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Redskins&quot;</value>
                <value>35.0</value>
                <value>0.20000000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Eagles&quot;</value>
                <value>39.0</value>
                <value>0.38461538461538464</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Steelers&quot;</value>
                <value>54.0</value>
                <value>0.33333333333333331</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{8E7B1712-EAB2-4703-ADD2-3C938FD13F3D}' />
    </worksheet>
    <worksheet name='Offense 25+ (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Defensive Deep Targets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column datatype='string' name='[defense]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[defense]' derivation='None' name='[none:defense:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[QB_air_yards]' member='25.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='26.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='27.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='28.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='29.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='30.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='31.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='32.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='33.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='34.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='35.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='36.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='37.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='38.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='39.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='40.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='41.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='42.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='43.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='44.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='45.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='46.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='47.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='48.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='49.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='50.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='51.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='52.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='53.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='54.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='55.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='56.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='57.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='58.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='59.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='60.0' />
              <groupfilter function='member' level='[QB_air_yards]' member='61.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' field-type='quantitative' max='0.54440286000000004' min='0.10000000000000001' range-type='fixed' reverse='true' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' scope='rows' value='Targets' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chargers&quot;</value>
                <value>33.0</value>
                <value>0.30303030303030304</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Packers&quot;</value>
                <value>40.0</value>
                <value>0.375</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]</field>
                  <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ravens&quot;</value>
                <value>44.0</value>
                <value>0.27272727272727271</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{832AA181-81E6-4E4C-87EB-4833D439C5E3}' />
    </worksheet>
    <worksheet name='Offense v Blitz'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='Sum' caption='Blitz' datatype='real' name='[blitz]' role='dimension' type='ordinal' />
            <column caption='Flex Attempt' datatype='real' name='[flex_attempt]' role='measure' type='quantitative' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[blitz]' derivation='None' name='[none:blitz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense]' derivation='None' name='[none:offense:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Offense' datatype='string' name='[offense]' role='dimension' type='nominal' />
            <column-instance column='[blitz]' derivation='Sum' name='[sum:blitz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_attempt]' derivation='Sum' name='[sum:flex_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:blitz:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:blitz:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_attempt:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:blitz:ok]'>
            <groupfilter function='member' level='[none:blitz:ok]' member='1.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:blitz:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' value='155' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0ED085AF-D0DF-4C0E-89B0-B5A8796C85BC}' />
    </worksheet>
    <worksheet name='Opportunity'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Flex Opportunity' datatype='real' name='[Calculation_1195142765681205248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_attempt]) + sum([flex_target])' />
            </column>
            <column caption='Flex Attempt' datatype='real' name='[flex_attempt]' role='measure' type='quantitative' />
            <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_firstdown]' derivation='Sum' name='[sum:flex_firstdown:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1195142765681205248]' derivation='User' name='[usr:Calculation_1195142765681205248:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_firstdown:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_1195142765681205248:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_firstdown:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Julio Jones&quot;</bucket>
              <bucket>&quot;Davante Adams&quot;</bucket>
              <bucket>&quot;DeAndre Hopkins&quot;</bucket>
              <bucket>&quot;JuJu Smith-Schuster&quot;</bucket>
              <bucket>&quot;Adam Thielen&quot;</bucket>
              <bucket>&quot;Michael Thomas&quot;</bucket>
              <bucket>&quot;Zach Ertz&quot;</bucket>
              <bucket>&quot;Christian McCaffrey&quot;</bucket>
              <bucket>&quot;Antonio Brown&quot;</bucket>
              <bucket>&quot;Travis Kelce&quot;</bucket>
              <bucket>&quot;Keenan Allen&quot;</bucket>
              <bucket>&quot;Stefon Diggs&quot;</bucket>
              <bucket>&quot;Robert Woods&quot;</bucket>
              <bucket>&quot;Saquon Barkley&quot;</bucket>
              <bucket>&quot;Mike Evans&quot;</bucket>
              <bucket>&quot;George Kittle&quot;</bucket>
              <bucket>&quot;Tyreek Hill&quot;</bucket>
              <bucket>&quot;James White&quot;</bucket>
              <bucket>&quot;Jarvis Landry&quot;</bucket>
              <bucket>&quot;Ezekiel Elliott&quot;</bucket>
              <bucket>&quot;Alvin Kamara&quot;</bucket>
              <bucket>&quot;Brandin Cooks&quot;</bucket>
              <bucket>&quot;Odell Beckham Jr.&quot;</bucket>
              <bucket>&quot;T.Y. Hilton&quot;</bucket>
              <bucket>&quot;Kenny Golladay&quot;</bucket>
              <bucket>&quot;Tyler Boyd&quot;</bucket>
              <bucket>&quot;Todd Gurley II&quot;</bucket>
              <bucket>&quot;Julian Edelman&quot;</bucket>
              <bucket>&quot;Adam Humphries&quot;</bucket>
              <bucket>&quot;Amari Cooper&quot;</bucket>
              <bucket>&quot;Larry Fitzgerald&quot;</bucket>
              <bucket>&quot;Golden Tate&quot;</bucket>
              <bucket>&quot;Sterling Shepard&quot;</bucket>
              <bucket>&quot;Corey Davis&quot;</bucket>
              <bucket>&quot;Eric Ebron&quot;</bucket>
              <bucket>&quot;Dede Westbrook&quot;</bucket>
              <bucket>&quot;Jared Cook&quot;</bucket>
              <bucket>&quot;Emmanuel Sanders&quot;</bucket>
              <bucket>&quot;Tarik Cohen&quot;</bucket>
              <bucket>&quot;Mohamed Sanu&quot;</bucket>
              <bucket>&quot;Alshon Jeffery&quot;</bucket>
              <bucket>&quot;David Johnson&quot;</bucket>
              <bucket>&quot;Chris Godwin&quot;</bucket>
              <bucket>&quot;James Conner&quot;</bucket>
              <bucket>&quot;Calvin Ridley&quot;</bucket>
              <bucket>&quot;Taylor Gabriel&quot;</bucket>
              <bucket>&quot;Zay Jones&quot;</bucket>
              <bucket>&quot;Willie Snead IV&quot;</bucket>
              <bucket>&quot;Nelson Agholor&quot;</bucket>
              <bucket>&quot;Cole Beasley&quot;</bucket>
              <bucket>&quot;Austin Hooper&quot;</bucket>
              <bucket>&quot;Jordy Nelson&quot;</bucket>
              <bucket>&quot;Nyheim Hines&quot;</bucket>
              <bucket>&quot;Demaryius Thomas&quot;</bucket>
              <bucket>&quot;Jalen Richard&quot;</bucket>
              <bucket>&quot;Melvin Gordon III&quot;</bucket>
              <bucket>&quot;Michael Crabtree&quot;</bucket>
              <bucket>&quot;Allen Robinson&quot;</bucket>
              <bucket>&quot;Jimmy Graham&quot;</bucket>
              <bucket>&quot;D.J. Moore&quot;</bucket>
              <bucket>&quot;Robby Anderson&quot;</bucket>
              <bucket>&quot;Joe Mixon&quot;</bucket>
              <bucket>&quot;Kyle Rudolph&quot;</bucket>
              <bucket>&quot;Kenyan Drake&quot;</bucket>
              <bucket>&quot;T.J. Yeldon&quot;</bucket>
              <bucket>&quot;Tyler Lockett&quot;</bucket>
              <bucket>&quot;David Njoku&quot;</bucket>
              <bucket>&quot;John Brown&quot;</bucket>
              <bucket>&quot;Donte Moncrief&quot;</bucket>
              <bucket>&quot;Danny Amendola&quot;</bucket>
              <bucket>&quot;Jordan Reed&quot;</bucket>
              <bucket>&quot;A.J. Green&quot;</bucket>
              <bucket>&quot;Theo Riddick&quot;</bucket>
              <bucket>&quot;Devin Funchess&quot;</bucket>
              <bucket>&quot;Trey Burton&quot;</bucket>
              <bucket>&quot;Dion Lewis&quot;</bucket>
              <bucket>&quot;Vance McDonald&quot;</bucket>
              <bucket>&quot;Doug Baldwin&quot;</bucket>
              <bucket>&quot;Josh Doctson&quot;</bucket>
              <bucket>&quot;Courtland Sutton&quot;</bucket>
              <bucket>&quot;Rob Gronkowski&quot;</bucket>
              <bucket>&quot;Chester Rogers&quot;</bucket>
              <bucket>&quot;Antonio Callaway&quot;</bucket>
              <bucket>&quot;Mike Williams&quot;</bucket>
              <bucket>&quot;Josh Gordon&quot;</bucket>
              <bucket>&quot;Phillip Lindsay&quot;</bucket>
              <bucket>&quot;DeSean Jackson&quot;</bucket>
              <bucket>&quot;Kendrick Bourne&quot;</bucket>
              <bucket>&quot;Duke Johnson Jr.&quot;</bucket>
              <bucket>&quot;Tyrell Williams&quot;</bucket>
              <bucket>&quot;Evan Engram&quot;</bucket>
              <bucket>&quot;Christian Kirk&quot;</bucket>
              <bucket>&quot;Keelan Cole&quot;</bucket>
              <bucket>&quot;Jermaine Kearse&quot;</bucket>
              <bucket>&quot;Marquez Valdes-Scantling&quot;</bucket>
              <bucket>&quot;Austin Ekeler&quot;</bucket>
              <bucket>&quot;Curtis Samuel&quot;</bucket>
              <bucket>&quot;Seth Roberts&quot;</bucket>
              <bucket>&quot;C.J. Uzomah&quot;</bucket>
              <bucket>&quot;Jarius Wright&quot;</bucket>
              <bucket>&quot;Tevin Coleman&quot;</bucket>
              <bucket>&quot;Kenny Stills&quot;</bucket>
              <bucket>&quot;Quincy Enunwa&quot;</bucket>
              <bucket>&quot;Marvin Jones Jr.&quot;</bucket>
              <bucket>&quot;Cooper Kupp&quot;</bucket>
              <bucket>&quot;Kareem Hunt&quot;</bucket>
              <bucket>&quot;Michael Gallup&quot;</bucket>
              <bucket>&quot;Sammy Watkins&quot;</bucket>
              <bucket>&quot;Chris Herndon IV&quot;</bucket>
              <bucket>&quot;Rashard Higgins&quot;</bucket>
              <bucket>&quot;Dalvin Cook&quot;</bucket>
              <bucket>&quot;Ricky Seals-Jones&quot;</bucket>
              <bucket>&quot;Randall Cobb&quot;</bucket>
              <bucket>&quot;Chris Thompson&quot;</bucket>
              <bucket>&quot;Kerryon Johnson&quot;</bucket>
              <bucket>&quot;Aaron Jones&quot;</bucket>
              <bucket>&quot;Mark Andrews&quot;</bucket>
              <bucket>&quot;Chris Hogan&quot;</bucket>
              <bucket>&quot;LeSean McCoy&quot;</bucket>
              <bucket>&quot;Chris Carson&quot;</bucket>
              <bucket>&quot;O.J. Howard&quot;</bucket>
              <bucket>&quot;Mike Davis&quot;</bucket>
              <bucket>&quot;Kelvin Benjamin&quot;</bucket>
              <bucket>&quot;Devontae Booker&quot;</bucket>
              <bucket>&quot;Taywan Taylor&quot;</bucket>
              <bucket>&quot;Anthony Miller&quot;</bucket>
              <bucket>&quot;Josh Reynolds&quot;</bucket>
              <bucket>&quot;Giovani Bernard&quot;</bucket>
              <bucket>&quot;Ian Thomas&quot;</bucket>
              <bucket>&quot;Matt Breida&quot;</bucket>
              <bucket>&quot;Lamar Miller&quot;</bucket>
              <bucket>&quot;Jordan Howard&quot;</bucket>
              <bucket>&quot;Jacquizz Rodgers&quot;</bucket>
              <bucket>&quot;Laquon Treadwell&quot;</bucket>
              <bucket>&quot;Chris Conley&quot;</bucket>
              <bucket>&quot;Ryan Grant&quot;</bucket>
              <bucket>&quot;Jamaal Williams&quot;</bucket>
              <bucket>&quot;Nick Chubb&quot;</bucket>
              <bucket>&quot;Adrian Peterson&quot;</bucket>
              <bucket>&quot;Benjamin Watson&quot;</bucket>
              <bucket>&quot;David Moore&quot;</bucket>
              <bucket>&quot;Gerald Everett&quot;</bucket>
              <bucket>&quot;Javorius Allen&quot;</bucket>
              <bucket>&quot;Will Fuller V&quot;</bucket>
              <bucket>&quot;Marlon Mack&quot;</bucket>
              <bucket>&quot;Tre&apos;Quan Smith&quot;</bucket>
              <bucket>&quot;Cameron Brate&quot;</bucket>
              <bucket>&quot;Tajae Sharpe&quot;</bucket>
              <bucket>&quot;Jamison Crowder&quot;</bucket>
              <bucket>&quot;Peyton Barber&quot;</bucket>
              <bucket>&quot;Jeff Heuerman&quot;</bucket>
              <bucket>&quot;Ryan Switzer&quot;</bucket>
              <bucket>&quot;DaeSean Hamilton&quot;</bucket>
              <bucket>&quot;Dallas Goedert&quot;</bucket>
              <bucket>&quot;Antonio Gates&quot;</bucket>
              <bucket>&quot;John Ross&quot;</bucket>
              <bucket>&quot;Wendell Smallwood&quot;</bucket>
              <bucket>&quot;Phillip Dorsett&quot;</bucket>
              <bucket>&quot;Nick Vannett&quot;</bucket>
              <bucket>&quot;Dante Pettis&quot;</bucket>
              <bucket>&quot;Maurice Harris&quot;</bucket>
              <bucket>&quot;Bruce Ellington&quot;</bucket>
              <bucket>&quot;Kyle Juszczyk&quot;</bucket>
              <bucket>&quot;Mark Ingram II&quot;</bucket>
              <bucket>&quot;Derrick Henry&quot;</bucket>
              <bucket>&quot;Ito Smith&quot;</bucket>
              <bucket>&quot;Robert Foster&quot;</bucket>
              <bucket>&quot;DeVante Parker&quot;</bucket>
              <bucket>&quot;Doug Martin&quot;</bucket>
              <bucket>&quot;Pierre Garcon&quot;</bucket>
              <bucket>&quot;Marquise Goodwin&quot;</bucket>
              <bucket>&quot;Jesse James&quot;</bucket>
              <bucket>&quot;Dontrelle Inman&quot;</bucket>
              <bucket>&quot;Greg Olsen&quot;</bucket>
              <bucket>&quot;Zach Pascal&quot;</bucket>
              <bucket>&quot;Ty Montgomery&quot;</bucket>
              <bucket>&quot;Isaiah Crowell&quot;</bucket>
              <bucket>&quot;Leonard Fournette&quot;</bucket>
              <bucket>&quot;Ryan Griffin&quot;</bucket>
              <bucket>&quot;Tim Patrick&quot;</bucket>
              <bucket>&quot;Jaylen Samuels&quot;</bucket>
              <bucket>&quot;Blake Jarwin&quot;</bucket>
              <bucket>&quot;Trent Taylor&quot;</bucket>
              <bucket>&quot;Vernon Davis&quot;</bucket>
              <bucket>&quot;Latavius Murray&quot;</bucket>
              <bucket>&quot;Cordarrelle Patterson&quot;</bucket>
              <bucket>&quot;Elijah McGuire&quot;</bucket>
              <bucket>&quot;Sony Michel&quot;</bucket>
              <bucket>&quot;Tyler Higbee&quot;</bucket>
              <bucket>&quot;Jack Doyle&quot;</bucket>
              <bucket>&quot;Albert Wilson&quot;</bucket>
              <bucket>&quot;Matt LaCosse&quot;</bucket>
              <bucket>&quot;Rhett Ellison&quot;</bucket>
              <bucket>&quot;Keke Coutee&quot;</bucket>
              <bucket>&quot;Chad Williams&quot;</bucket>
              <bucket>&quot;Corey Clement&quot;</bucket>
              <bucket>&quot;Alfred Blue&quot;</bucket>
              <bucket>&quot;Nick Boyle&quot;</bucket>
              <bucket>&quot;Equanimeous St. Brown&quot;</bucket>
              <bucket>&quot;Geoff Swaim&quot;</bucket>
              <bucket>&quot;James O&apos;Shaughnessy&quot;</bucket>
              <bucket>&quot;Damien Williams&quot;</bucket>
              <bucket>&quot;Charles Clay&quot;</bucket>
              <bucket>&quot;Jason Croom&quot;</bucket>
              <bucket>&quot;Demarcus Robinson&quot;</bucket>
              <bucket>&quot;Paul Richardson&quot;</bucket>
              <bucket>&quot;Jakeem Grant&quot;</bucket>
              <bucket>&quot;Spencer Ware&quot;</bucket>
              <bucket>&quot;Chris Ivory&quot;</bucket>
              <bucket>&quot;Royce Freeman&quot;</bucket>
              <bucket>&quot;James Washington&quot;</bucket>
              <bucket>&quot;Aldrick Robinson&quot;</bucket>
              <bucket>&quot;Allen Hurns&quot;</bucket>
              <bucket>&quot;Mike Gesicki&quot;</bucket>
              <bucket>&quot;Jordan Matthews&quot;</bucket>
              <bucket>&quot;Isaiah McKenzie&quot;</bucket>
              <bucket>&quot;Alex Collins&quot;</bucket>
              <bucket>&quot;Chase Edmonds&quot;</bucket>
              <bucket>&quot;Torrey Smith&quot;</bucket>
              <bucket>&quot;Frank Gore&quot;</bucket>
              <bucket>&quot;Jordan Thomas&quot;</bucket>
              <bucket>&quot;Jonnu Smith&quot;</bucket>
              <bucket>&quot;Geronimo Allison&quot;</bucket>
              <bucket>&quot;Trent Sherfield&quot;</bucket>
              <bucket>&quot;Ted Ginn Jr.&quot;</bucket>
              <bucket>&quot;Levine Toilolo&quot;</bucket>
              <bucket>&quot;Deonte Thompson&quot;</bucket>
              <bucket>&quot;DeAndre Carter&quot;</bucket>
              <bucket>&quot;Martavis Bryant&quot;</bucket>
              <bucket>&quot;Terrelle Pryor Sr.&quot;</bucket>
              <bucket>&quot;TJ Jones&quot;</bucket>
              <bucket>&quot;Marshawn Lynch&quot;</bucket>
              <bucket>&quot;Bennie Fowler&quot;</bucket>
              <bucket>&quot;Breshad Perriman&quot;</bucket>
              <bucket>&quot;Alex Erickson&quot;</bucket>
              <bucket>&quot;LeGarrette Blount&quot;</bucket>
              <bucket>&quot;Jordan Akins&quot;</bucket>
              <bucket>&quot;Virgil Green&quot;</bucket>
              <bucket>&quot;Lance Kendricks&quot;</bucket>
              <bucket>&quot;Trenton Cannon&quot;</bucket>
              <bucket>&quot;D.J. Chark&quot;</bucket>
              <bucket>&quot;Marcell Ateman&quot;</bucket>
              <bucket>&quot;Justin Jackson&quot;</bucket>
              <bucket>&quot;Carlos Hyde&quot;</bucket>
              <bucket>&quot;Josh Hill&quot;</bucket>
              <bucket>&quot;Kapri Bibbs&quot;</bucket>
              <bucket>&quot;Anthony Firkser&quot;</bucket>
              <bucket>&quot;Darren Sproles&quot;</bucket>
              <bucket>&quot;Alfred Morris&quot;</bucket>
              <bucket>&quot;Rex Burkhead&quot;</bucket>
              <bucket>&quot;Jordan Wilkins&quot;</bucket>
              <bucket>&quot;Cody Core&quot;</bucket>
              <bucket>&quot;Wayne Gallman&quot;</bucket>
              <bucket>&quot;Bilal Powell&quot;</bucket>
              <bucket>&quot;Josh Bellamy&quot;</bucket>
              <bucket>&quot;Luke Stocker&quot;</bucket>
              <bucket>&quot;Chris Moore&quot;</bucket>
              <bucket>&quot;Travis Benjamin&quot;</bucket>
              <bucket>&quot;Josh Adams&quot;</bucket>
              <bucket>&quot;Andre Holmes&quot;</bucket>
              <bucket>&quot;Jordan Leggett&quot;</bucket>
              <bucket>&quot;Keith Kirkwood&quot;</bucket>
              <bucket>&quot;Tyler Eifert&quot;</bucket>
              <bucket>&quot;Justin Hardy&quot;</bucket>
              <bucket>&quot;Jeff Wilson Jr.&quot;</bucket>
              <bucket>&quot;Demetrius Harris&quot;</bucket>
              <bucket>&quot;Hayden Hurst&quot;</bucket>
              <bucket>&quot;Jaron Brown&quot;</bucket>
              <bucket>&quot;Rashaad Penny&quot;</bucket>
              <bucket>&quot;Gus Edwards&quot;</bucket>
              <bucket>&quot;Andy Jones&quot;</bucket>
              <bucket>&quot;Brandon Marshall&quot;</bucket>
              <bucket>&quot;Maxx Williams&quot;</bucket>
              <bucket>&quot;Michael Floyd&quot;</bucket>
              <bucket>&quot;Marcus Murphy&quot;</bucket>
              <bucket>&quot;Dan Arnold&quot;</bucket>
              <bucket>&quot;Luke Willson&quot;</bucket>
              <bucket>&quot;Brandon LaFell&quot;</bucket>
              <bucket>&quot;James Develin&quot;</bucket>
              <bucket>&quot;C.J. Anderson&quot;</bucket>
              <bucket>&quot;Damion Ratley&quot;</bucket>
              <bucket>&quot;Russell Shepard&quot;</bucket>
              <bucket>&quot;Austin Seferian-Jenkins&quot;</bucket>
              <bucket>&quot;Michael Roberts&quot;</bucket>
              <bucket>&quot;Brandon Powell&quot;</bucket>
              <bucket>&quot;Marvin Hall&quot;</bucket>
              <bucket>&quot;Kenneth Dixon&quot;</bucket>
              <bucket>&quot;Zach Zenner&quot;</bucket>
              <bucket>&quot;Cody Latimer&quot;</bucket>
              <bucket>&quot;Andre Roberts&quot;</bucket>
              <bucket>&quot;Deontay Burnett&quot;</bucket>
              <bucket>&quot;Logan Thomas&quot;</bucket>
              <bucket>&quot;Ed Dickson&quot;</bucket>
              <bucket>&quot;Kalen Ballage&quot;</bucket>
              <bucket>&quot;Rod Smith&quot;</bucket>
              <bucket>&quot;Eli Rogers&quot;</bucket>
              <bucket>&quot;C.J. Ham&quot;</bucket>
              <bucket>&quot;Dalton Schultz&quot;</bucket>
              <bucket>&quot;J.J. Nelson&quot;</bucket>
              <bucket>&quot;Scott Simonson&quot;</bucket>
              <bucket>&quot;Darren Fells&quot;</bucket>
              <bucket>&quot;Austin Carr&quot;</bucket>
              <bucket>&quot;Niles Paul&quot;</bucket>
              <bucket>&quot;Richie James Jr.&quot;</bucket>
              <bucket>&quot;Will Dissly&quot;</bucket>
              <bucket>&quot;Jermaine Gresham&quot;</bucket>
              <bucket>&quot;Darius Jennings&quot;</bucket>
              <bucket>&quot;Tavon Austin&quot;</bucket>
              <bucket>&quot;Corey Grant&quot;</bucket>
              <bucket>&quot;Raheem Mostert&quot;</bucket>
              <bucket>&quot;MyCole Pruitt&quot;</bucket>
              <bucket>&quot;Lee Smith&quot;</bucket>
              <bucket>&quot;Jake Butt&quot;</bucket>
              <bucket>&quot;Eric Tomlinson&quot;</bucket>
              <bucket>&quot;Mo Alie-Cox&quot;</bucket>
              <bucket>&quot;Logan Paulsen&quot;</bucket>
              <bucket>&quot;Nick O&apos;Leary&quot;</bucket>
              <bucket>&quot;Cam Batson&quot;</bucket>
              <bucket>&quot;Trey Quinn&quot;</bucket>
              <bucket>&quot;Malcolm Brown&quot;</bucket>
              <bucket>&quot;Dontrell Hilliard&quot;</bucket>
              <bucket>&quot;Jake Kumerow&quot;</bucket>
              <bucket>&quot;Erik Swoope&quot;</bucket>
              <bucket>&quot;Cameron Meredith&quot;</bucket>
              <bucket>&quot;Anthony Sherman&quot;</bucket>
              <bucket>&quot;Blake Bell&quot;</bucket>
              <bucket>&quot;Derek Carrier&quot;</bucket>
              <bucket>&quot;Andy Janovich&quot;</bucket>
              <bucket>&quot;Taquan Mizzell&quot;</bucket>
              <bucket>&quot;Zach Line&quot;</bucket>
              <bucket>&quot;Jay Ajayi&quot;</bucket>
              <bucket>&quot;Josh Perkins&quot;</bucket>
              <bucket>&quot;Brice Butler&quot;</bucket>
              <bucket>&quot;Elijhaa Penny&quot;</bucket>
              <bucket>&quot;Ronald Jones II&quot;</bucket>
              <bucket>&quot;Durham Smythe&quot;</bucket>
              <bucket>&quot;Mark Walton&quot;</bucket>
              <bucket>&quot;Auden Tate&quot;</bucket>
              <bucket>&quot;Russell Gage&quot;</bucket>
              <bucket>&quot;Vyncint Smith&quot;</bucket>
              <bucket>&quot;Xavier Grimble&quot;</bucket>
              <bucket>&quot;Garrett Celek&quot;</bucket>
              <bucket>&quot;Corey Coleman&quot;</bucket>
              <bucket>&quot;Brian Parker&quot;</bucket>
              <bucket>&quot;Jeremy Sprinkle&quot;</bucket>
              <bucket>&quot;Rashad Greene&quot;</bucket>
              <bucket>&quot;Justin Hunter&quot;</bucket>
              <bucket>&quot;Darren Waller&quot;</bucket>
              <bucket>&quot;David Grinnage&quot;</bucket>
              <bucket>&quot;Eric Saubert&quot;</bucket>
              <bucket>&quot;Antony Auclair&quot;</bucket>
              <bucket>&quot;Neal Sterling&quot;</bucket>
              <bucket>&quot;Marcus Johnson&quot;</bucket>
              <bucket>&quot;Tommy Bohanon&quot;</bucket>
              <bucket>&quot;Cameron Artis-Payne&quot;</bucket>
              <bucket>&quot;Jawill Davis&quot;</bucket>
              <bucket>&quot;Tyler Conklin&quot;</bucket>
              <bucket>&quot;Noah Brown&quot;</bucket>
              <bucket>&quot;Kevin White&quot;</bucket>
              <bucket>&quot;Seth DeValve&quot;</bucket>
              <bucket>&quot;Kamar Aiken&quot;</bucket>
              <bucket>&quot;Rishard Matthews&quot;</bucket>
              <bucket>&quot;Keith Smith&quot;</bucket>
              <bucket>&quot;T.J. Logan&quot;</bucket>
              <bucket>&quot;Tyler Kroft&quot;</bucket>
              <bucket>&quot;Delanie Walker&quot;</bucket>
              <bucket>&quot;Dwayne Harris&quot;</bucket>
              <bucket>&quot;Devonta Freeman&quot;</bucket>
              <bucket>&quot;Robert Tonyan&quot;</bucket>
              <bucket>&quot;Matt Lengel&quot;</bucket>
              <bucket>&quot;David Morgan II&quot;</bucket>
              <bucket>&quot;Ray-Ray McCloud&quot;</bucket>
              <bucket>&quot;Keith Ford&quot;</bucket>
              <bucket>&quot;Jalen Tolliver&quot;</bucket>
              <bucket>&quot;Rico Gathers&quot;</bucket>
              <bucket>&quot;Roosevelt Nix&quot;</bucket>
              <bucket>&quot;Adam Shaheen&quot;</bucket>
              <bucket>&quot;John Kelly&quot;</bucket>
              <bucket>&quot;Chad Beebe&quot;</bucket>
              <bucket>&quot;Javon Wims&quot;</bucket>
              <bucket>&quot;Bobo Wilson&quot;</bucket>
              <bucket>&quot;Jacob Hollister&quot;</bucket>
              <bucket>&quot;A.J. Derby&quot;</bucket>
              <bucket>&quot;De&apos;Anthony Thomas&quot;</bucket>
              <bucket>&quot;Byron Marshall&quot;</bucket>
              <bucket>&quot;Brandon Bolden&quot;</bucket>
              <bucket>&quot;Stevan Ridley&quot;</bucket>
              <bucket>&quot;Ben Braunecker&quot;</bucket>
              <bucket>&quot;Nick Bellore&quot;</bucket>
              <bucket>&quot;Patrick DiMarco&quot;</bucket>
              <bucket>&quot;DeAndre Washington&quot;</bucket>
              <bucket>&quot;Dwayne Allen&quot;</bucket>
              <bucket>&quot;Tommylee Lewis&quot;</bucket>
              <bucket>&quot;Samaje Perine&quot;</bucket>
              <bucket>&quot;Detrez Newsome&quot;</bucket>
              <bucket>&quot;Orson Charles&quot;</bucket>
              <bucket>&quot;Chris Manhertz&quot;</bucket>
              <bucket>&quot;Leonte Carroo&quot;</bucket>
              <bucket>&quot;Marcedes Lewis&quot;</bucket>
              <bucket>&quot;Brian Quick&quot;</bucket>
              <bucket>&quot;Ameer Abdullah&quot;</bucket>
              <bucket>&quot;Charcandrick West&quot;</bucket>
              <bucket>&quot;Shaun Wilson&quot;</bucket>
              <bucket>&quot;Roc Thomas&quot;</bucket>
              <bucket>&quot;Darrel Williams&quot;</bucket>
              <bucket>&quot;Brian Hill&quot;</bucket>
              <bucket>&quot;Ricky Ortiz&quot;</bucket>
              <bucket>&quot;Josh Malone&quot;</bucket>
              <bucket>&quot;Tyler Ervin&quot;</bucket>
              <bucket>&quot;Nick Williams&quot;</bucket>
              <bucket>&quot;John Phillips&quot;</bucket>
              <bucket>&quot;Alan Cross&quot;</bucket>
              <bucket>&quot;Dwayne Washington&quot;</bucket>
              <bucket>&quot;Jamize Olawale&quot;</bucket>
              <bucket>&quot;Charone Peake&quot;</bucket>
              <bucket>&quot;Tre Madden&quot;</bucket>
              <bucket>&quot;Mike Boone&quot;</bucket>
              <bucket>&quot;J&apos;Mon Moore&quot;</bucket>
              <bucket>&quot;Jordan Franks&quot;</bucket>
              <bucket>&quot;Malik Turner&quot;</bucket>
              <bucket>&quot;Victor Bolden Jr.&quot;</bucket>
              <bucket>&quot;Dion Sims&quot;</bucket>
              <bucket>&quot;Jeremy Kerley&quot;</bucket>
              <bucket>&quot;Terrance Williams&quot;</bucket>
              <bucket>&quot;C.J. Prosise&quot;</bucket>
              <bucket>&quot;Derrick Coleman&quot;</bucket>
              <bucket>&quot;Gehrig Dieter&quot;</bucket>
              <bucket>&quot;Khadarel Hodge&quot;</bucket>
              <bucket>&quot;Hakeem Valles&quot;</bucket>
              <bucket>&quot;Shelton Gibson&quot;</bucket>
              <bucket>&quot;D&apos;Onta Foreman&quot;</bucket>
              <bucket>&quot;Jamaal Charles&quot;</bucket>
              <bucket>&quot;Alex Armah&quot;</bucket>
              <bucket>&quot;Kenjon Barner&quot;</bucket>
              <bucket>&quot;Brandon Zylstra&quot;</bucket>
              <bucket>&quot;Darvin Kidsy&quot;</bucket>
              <bucket>&quot;Derrick Willies&quot;</bucket>
              <bucket>&quot;Justin Watson&quot;</bucket>
              <bucket>&quot;River Cracraft&quot;</bucket>
              <bucket>&quot;Ross Dwelley&quot;</bucket>
              <bucket>&quot;Ryan Hewitt&quot;</bucket>
              <bucket>&quot;Dan Vitale&quot;</bucket>
              <bucket>&quot;Damiere Byrd&quot;</bucket>
              <bucket>&quot;De&apos;Lance Turner&quot;</bucket>
              <bucket>&quot;Benny Cunningham Jr.&quot;</bucket>
              <bucket>&quot;Mike Gillislee&quot;</bucket>
              <bucket>&quot;Dave Williams&quot;</bucket>
              <bucket>&quot;Keon Hatcher&quot;</bucket>
              <bucket>&quot;Marcus Kemp&quot;</bucket>
              <bucket>&quot;Matt Flanagan&quot;</bucket>
              <bucket>&quot;Sean Culkin&quot;</bucket>
              <bucket>&quot;Tim White&quot;</bucket>
              <bucket>&quot;Tyrone Swoopes&quot;</bucket>
              <bucket>&quot;Michael Burton&quot;</bucket>
              <bucket>&quot;Richard Rodgers&quot;</bucket>
              <bucket>&quot;Mike Wallace&quot;</bucket>
              <bucket>&quot;Darrius Heyward-Bey&quot;</bucket>
              <bucket>&quot;Jeremy Hill&quot;</bucket>
              <bucket>&quot;Derek Watt&quot;</bucket>
              <bucket>&quot;Robert Turbin&quot;</bucket>
              <bucket>&quot;Allen Lazard&quot;</bucket>
              <bucket>&quot;Cam Phillips&quot;</bucket>
              <bucket>&quot;Johnny Mundt&quot;</bucket>
              <bucket>&quot;Khari Lee&quot;</bucket>
              <bucket>&quot;Taiwan Jones&quot;</bucket>
              <bucket>&quot;Darrell Daniels&quot;</bucket>
              <bucket>&quot;J.J. Jones&quot;</bucket>
              <bucket>&quot;Jonathan Williams&quot;</bucket>
              <bucket>&quot;Travaris Cadet&quot;</bucket>
              <bucket>&quot;Chris Lacy&quot;</bucket>
              <bucket>&quot;Isaiah Ford&quot;</bucket>
              <bucket>&quot;Jeremy McNichols&quot;</bucket>
              <bucket>&quot;Jerome Cunningham&quot;</bucket>
              <bucket>&quot;Justin Davis&quot;</bucket>
              <bucket>&quot;Riley McCarron&quot;</bucket>
              <bucket>&quot;Stacy Coley&quot;</bucket>
              <bucket>&quot;David Fluellen&quot;</bucket>
              <bucket>&quot;Geremy Davis&quot;</bucket>
              <bucket>&quot;Cole Wick&quot;</bucket>
              <bucket>&quot;Freddie Martino&quot;</bucket>
              <bucket>&quot;Johnny Holton&quot;</bucket>
              <bucket>&quot;Jeremy Langford&quot;</bucket>
              <bucket>&quot;Pharoh Cooper&quot;</bucket>
              <bucket>&quot;Robert Kelley&quot;</bucket>
              <bucket>&quot;J.D. McKissic&quot;</bucket>
              <bucket>&quot;Sammie Coates&quot;</bucket>
              <bucket>&quot;Jehu Chesson&quot;</bucket>
              <bucket>&quot;Darius Jackson&quot;</bucket>
              <bucket>&quot;Brandon Wilds&quot;</bucket>
              <bucket>&quot;De&apos;Angelo Henderson&quot;</bucket>
              <bucket>&quot;Christine Michael&quot;</bucket>
              <bucket>&quot;Jonathan Stewart&quot;</bucket>
              <bucket>&quot;Le&apos;Veon Bell&quot;</bucket>
              <bucket>&quot;Dez Bryant&quot;</bucket>
              <bucket>&quot;Marqise Lee&quot;</bucket>
              <bucket>&quot;Jason Witten&quot;</bucket>
              <bucket>&quot;DeMarco Murray&quot;</bucket>
              <bucket>&quot;Kenny Britt&quot;</bucket>
              <bucket>&quot;Jerick McKinnon&quot;</bucket>
              <bucket>&quot;Jeremy Maclin&quot;</bucket>
              <bucket>&quot;Kendall Wright&quot;</bucket>
              <bucket>&quot;Hunter Henry&quot;</bucket>
              <bucket>&quot;Martellus Bennett&quot;</bucket>
              <bucket>&quot;Dennis Pitta&quot;</bucket>
              <bucket>&quot;Matt Forte&quot;</bucket>
              <bucket>&quot;Coby Fleener&quot;</bucket>
              <bucket>&quot;Julius Thomas&quot;</bucket>
              <bucket>&quot;C.J. Fiedorowicz&quot;</bucket>
              <bucket>&quot;Steve Smith&quot;</bucket>
              <bucket>&quot;Eric Decker&quot;</bucket>
              <bucket>&quot;Anquan Boldin&quot;</bucket>
              <bucket>&quot;Zach Miller&quot;</bucket>
              <bucket>&quot;Gary Barnidge&quot;</bucket>
              <bucket>&quot;Charles Sims&quot;</bucket>
              <bucket>&quot;Ricardo Louis&quot;</bucket>
              <bucket>&quot;Brandon Coleman&quot;</bucket>
              <bucket>&quot;Roger Lewis&quot;</bucket>
              <bucket>&quot;Shane Vereen&quot;</bucket>
              <bucket>&quot;Will Tye&quot;</bucket>
              <bucket>&quot;Terrance West&quot;</bucket>
              <bucket>&quot;Andre Ellington&quot;</bucket>
              <bucket>&quot;Victor Cruz&quot;</bucket>
              <bucket>&quot;Dorial Green-Beckham&quot;</bucket>
              <bucket>&quot;Stephen Anderson&quot;</bucket>
              <bucket>&quot;Clive Walford&quot;</bucket>
              <bucket>&quot;Quinton Patton&quot;</bucket>
              <bucket>&quot;Rashad Jennings&quot;</bucket>
              <bucket>&quot;Matt Asiata&quot;</bucket>
              <bucket>&quot;Danny Woodhead&quot;</bucket>
              <bucket>&quot;Braxton Miller&quot;</bucket>
              <bucket>&quot;Malcolm Mitchell&quot;</bucket>
              <bucket>&quot;Andrew Hawkins&quot;</bucket>
              <bucket>&quot;Orleans Darkwa&quot;</bucket>
              <bucket>&quot;Corey Brown&quot;</bucket>
              <bucket>&quot;Shaun Draughn&quot;</bucket>
              <bucket>&quot;Tim Hightower&quot;</bucket>
              <bucket>&quot;Eddie Royal&quot;</bucket>
              <bucket>&quot;Fozzy Whittaker&quot;</bucket>
              <bucket>&quot;Paul Perkins&quot;</bucket>
              <bucket>&quot;Jordan Taylor&quot;</bucket>
              <bucket>&quot;Thomas Rawls&quot;</bucket>
              <bucket>&quot;Daniel Brown&quot;</bucket>
              <bucket>&quot;Brent Celek&quot;</bucket>
              <bucket>&quot;Mike Tolbert&quot;</bucket>
              <bucket>&quot;Bryan Walters&quot;</bucket>
              <bucket>&quot;Ryan Mathews&quot;</bucket>
              <bucket>&quot;Tavarres King&quot;</bucket>
              <bucket>&quot;DeAngelo Williams&quot;</bucket>
              <bucket>&quot;Jerell Adams&quot;</bucket>
              <bucket>&quot;Charles Johnson&quot;</bucket>
              <bucket>&quot;Bobby Rainey&quot;</bucket>
              <bucket>&quot;Jacob Tamme&quot;</bucket>
              <bucket>&quot;Jordan Norwood&quot;</bucket>
              <bucket>&quot;Ben Koyack&quot;</bucket>
              <bucket>&quot;Ladarius Green&quot;</bucket>
              <bucket>&quot;Michael Campanaro&quot;</bucket>
              <bucket>&quot;Kerwynn Williams&quot;</bucket>
              <bucket>&quot;Justin Forsett&quot;</bucket>
              <bucket>&quot;Anthony Fasano&quot;</bucket>
              <bucket>&quot;Cobi Hamilton&quot;</bucket>
              <bucket>&quot;Rod Streater&quot;</bucket>
              <bucket>&quot;Josh Ferguson&quot;</bucket>
              <bucket>&quot;James Starks&quot;</bucket>
              <bucket>&quot;Lance Dunbar&quot;</bucket>
              <bucket>&quot;D.J. Foster&quot;</bucket>
              <bucket>&quot;Vincent Jackson&quot;</bucket>
              <bucket>&quot;Mychal Rivera&quot;</bucket>
              <bucket>&quot;John Kuhn&quot;</bucket>
              <bucket>&quot;Brandon Tate&quot;</bucket>
              <bucket>&quot;Harry Douglas&quot;</bucket>
              <bucket>&quot;Matt Jones&quot;</bucket>
              <bucket>&quot;Jaelen Strong&quot;</bucket>
              <bucket>&quot;Aaron Ripkowski&quot;</bucket>
              <bucket>&quot;Eddie Lacy&quot;</bucket>
              <bucket>&quot;MarQueis Gray&quot;</bucket>
              <bucket>&quot;Mack Hollins&quot;</bucket>
              <bucket>&quot;Josh Huff&quot;</bucket>
              <bucket>&quot;Jalin Marshall&quot;</bucket>
              <bucket>&quot;Cecil Shorts&quot;</bucket>
              <bucket>&quot;Bryce Treggs&quot;</bucket>
              <bucket>&quot;Tanner McEvoy&quot;</bucket>
              <bucket>&quot;Walter Powell&quot;</bucket>
              <bucket>&quot;Jeff Janis&quot;</bucket>
              <bucket>&quot;Troy Niklas&quot;</bucket>
              <bucket>&quot;Brittan Golden&quot;</bucket>
              <bucket>&quot;Kenneth Farrow&quot;</bucket>
              <bucket>&quot;Larry Donnell&quot;</bucket>
              <bucket>&quot;Jonathan Grimes&quot;</bucket>
              <bucket>&quot;James Wright&quot;</bucket>
              <bucket>&quot;Brandon Williams&quot;</bucket>
              <bucket>&quot;Chris Harper&quot;</bucket>
              <bucket>&quot;Brenton Bersin&quot;</bucket>
              <bucket>&quot;Ross Travis&quot;</bucket>
              <bucket>&quot;Andre Johnson&quot;</bucket>
              <bucket>&quot;Markus Wheaton&quot;</bucket>
              <bucket>&quot;Travis Rudolph&quot;</bucket>
              <bucket>&quot;Marquess Wilson&quot;</bucket>
              <bucket>&quot;Ronnie Hillman&quot;</bucket>
              <bucket>&quot;Kaelin Clay&quot;</bucket>
              <bucket>&quot;Chad Hansen&quot;</bucket>
              <bucket>&quot;Louis Murphy&quot;</bucket>
              <bucket>&quot;Tre McBride III&quot;</bucket>
              <bucket>&quot;Paul Turner&quot;</bucket>
              <bucket>&quot;Kasen Williams&quot;</bucket>
              <bucket>&quot;Mike Thomas&quot;</bucket>
              <bucket>&quot;Aaron Burbridge&quot;</bucket>
              <bucket>&quot;DuJuan Harris&quot;</bucket>
              <bucket>&quot;Austin Traylor&quot;</bucket>
              <bucket>&quot;Trevor Davis&quot;</bucket>
              <bucket>&quot;Crockett Gillmore&quot;</bucket>
              <bucket>&quot;Reggie Bush&quot;</bucket>
              <bucket>&quot;C.J. Spiller&quot;</bucket>
              <bucket>&quot;Brandon Myers&quot;</bucket>
              <bucket>&quot;Branden Oliver&quot;</bucket>
              <bucket>&quot;Akeem Hunt&quot;</bucket>
              <bucket>&quot;Terron Ward&quot;</bucket>
              <bucket>&quot;Phillip Supernaw&quot;</bucket>
              <bucket>&quot;Keith Mumphery&quot;</bucket>
              <bucket>&quot;Jerome Felton&quot;</bucket>
              <bucket>&quot;ArDarius Stewart&quot;</bucket>
              <bucket>&quot;Amara Darboh&quot;</bucket>
              <bucket>&quot;Jordan Cameron&quot;</bucket>
              <bucket>&quot;Chris Johnson&quot;</bucket>
              <bucket>&quot;Arrelious Benn&quot;</bucket>
              <bucket>&quot;Brandon Bostick&quot;</bucket>
              <bucket>&quot;Michael Clark&quot;</bucket>
              <bucket>&quot;Ka&apos;Deem Carey&quot;</bucket>
              <bucket>&quot;Jaydon Mickens&quot;</bucket>
              <bucket>&quot;Dominique Jones&quot;</bucket>
              <bucket>&quot;Dexter McCluster&quot;</bucket>
              <bucket>&quot;Arian Foster&quot;</bucket>
              <bucket>&quot;Michael Hoomanawanui&quot;</bucket>
              <bucket>&quot;Demarcus Ayers&quot;</bucket>
              <bucket>&quot;Sean McGrath&quot;</bucket>
              <bucket>&quot;Randall Telfer&quot;</bucket>
              <bucket>&quot;Quan Bray&quot;</bucket>
              <bucket>&quot;James Hanna&quot;</bucket>
              <bucket>&quot;Griff Whalen&quot;</bucket>
              <bucket>&quot;Fitzgerald Toussaint&quot;</bucket>
              <bucket>&quot;Antone Smith&quot;</bucket>
              <bucket>&quot;Hunter Sharp&quot;</bucket>
              <bucket>&quot;Jay Prosch&quot;</bucket>
              <bucket>&quot;Jared Abbrederis&quot;</bucket>
              <bucket>&quot;Wendall Williams&quot;</bucket>
              <bucket>&quot;Malcolm Johnson&quot;</bucket>
              <bucket>&quot;Knile Davis&quot;</bucket>
              <bucket>&quot;Darren McFadden&quot;</bucket>
              <bucket>&quot;Tion Green&quot;</bucket>
              <bucket>&quot;Greg Salas&quot;</bucket>
              <bucket>&quot;Gavin Escobar&quot;</bucket>
              <bucket>&quot;Denard Robinson&quot;</bucket>
              <bucket>&quot;Bradley Marquez&quot;</bucket>
              <bucket>&quot;Marcel Reece&quot;</bucket>
              <bucket>&quot;Jeremy Ross&quot;</bucket>
              <bucket>&quot;Tanner Gentry&quot;</bucket>
              <bucket>&quot;Matthew Dayes&quot;</bucket>
              <bucket>&quot;Lucky Whitehead&quot;</bucket>
              <bucket>&quot;Lawrence Thomas&quot;</bucket>
              <bucket>&quot;Chris Matthews&quot;</bucket>
              <bucket>&quot;Justin Perillo&quot;</bucket>
              <bucket>&quot;Mike James&quot;</bucket>
              <bucket>&quot;JoJo Natson&quot;</bucket>
              <bucket>&quot;Jace Amaro&quot;</bucket>
              <bucket>&quot;Ifeanyi Momah&quot;</bucket>
              <bucket>&quot;DeAndrew White&quot;</bucket>
              <bucket>&quot;Patrick Ricard&quot;</bucket>
              <bucket>&quot;Devin Street&quot;</bucket>
              <bucket>&quot;Andre Williams&quot;</bucket>
              <bucket>&quot;Terrell Watson&quot;</bucket>
              <bucket>&quot;Percy Harvin&quot;</bucket>
              <bucket>&quot;Mack Brown&quot;</bucket>
              <bucket>&quot;Je&apos;Ron Hamm&quot;</bucket>
              <bucket>&quot;De&apos;Veon Smith&quot;</bucket>
              <bucket>&quot;Daniel Lasco&quot;</bucket>
              <bucket>&quot;Cole Hikutini&quot;</bucket>
              <bucket>&quot;Clay Harbor&quot;</bucket>
              <bucket>&quot;Alex Ellis&quot;</bucket>
              <bucket>&quot;Troymaine Pope&quot;</bucket>
              <bucket>&quot;Lorenzo Taliaferro&quot;</bucket>
              <bucket>&quot;Jalston Fowler&quot;</bucket>
              <bucket>&quot;Devante Mays&quot;</bucket>
              <bucket>&quot;Darius Powe&quot;</bucket>
              <bucket>&quot;Bernard Reedy&quot;</bucket>
              <bucket>&quot;Shane Wynn&quot;</bucket>
              <bucket>&quot;Paul Lasike&quot;</bucket>
              <bucket>&quot;Kalif Raymond&quot;</bucket>
              <bucket>&quot;Jordan Payton&quot;</bucket>
              <bucket>&quot;Jeff Cumberland&quot;</bucket>
              <bucket>&quot;Emanuel Byrd&quot;</bucket>
              <bucket>&quot;Devin Smith&quot;</bucket>
              <bucket>&quot;Senorise Perry&quot;</bucket>
              <bucket>&quot;Jordan Todman&quot;</bucket>
              <bucket>&quot;Jeremy Butler&quot;</bucket>
              <bucket>&quot;Isaiah Burse&quot;</bucket>
              <bucket>&quot;Gerald Christian&quot;</bucket>
              <bucket>&quot;George Farmer&quot;</bucket>
              <bucket>&quot;Marquis Bundy&quot;</bucket>
              <bucket>&quot;Juwan Thompson&quot;</bucket>
              <bucket>&quot;Jordan Leslie&quot;</bucket>
              <bucket>&quot;Henry Krieger-Coble&quot;</bucket>
              <bucket>&quot;Eric Weems&quot;</bucket>
              <bucket>&quot;DeAndre Smelter&quot;</bucket>
              <bucket>&quot;D.J. Tialavea&quot;</bucket>
              <bucket>&quot;Connor Hamlett&quot;</bucket>
              <bucket>&quot;Bralon Addison&quot;</bucket>
              <bucket>&quot;Vince Mayle&quot;</bucket>
              <bucket>&quot;Tony Washington&quot;</bucket>
              <bucket>&quot;Ryan Malleck&quot;</bucket>
              <bucket>&quot;Rashad Ross&quot;</bucket>
              <bucket>&quot;Paul McRoberts&quot;</bucket>
              <bucket>&quot;Max McCaffrey&quot;</bucket>
              <bucket>&quot;Matthew Slater&quot;</bucket>
              <bucket>&quot;Matthew Mulligan&quot;</bucket>
              <bucket>&quot;Matt Hazel&quot;</bucket>
              <bucket>&quot;Larry Pinkard&quot;</bucket>
              <bucket>&quot;Joique Bell&quot;</bucket>
              <bucket>&quot;Joe Kerridge&quot;</bucket>
              <bucket>&quot;Isaiah Pead&quot;</bucket>
              <bucket>&quot;George Atkinson III&quot;</bucket>
              <bucket>&quot;Garrett Griffin&quot;</bucket>
              <bucket>&quot;Don Jackson&quot;</bucket>
              <bucket>&quot;Daniel Braverman&quot;</bucket>
              <bucket>&quot;Trey Edmunds&quot;</bucket>
              <bucket>&quot;Stepfan Taylor&quot;</bucket>
              <bucket>&quot;Marquez Williams&quot;</bucket>
              <bucket>&quot;Marc Mariani&quot;</bucket>
              <bucket>&quot;Khiry Robinson&quot;</bucket>
              <bucket>&quot;Kellen Davis&quot;</bucket>
              <bucket>&quot;K.J. Brent&quot;</bucket>
              <bucket>&quot;Isaac Whitney&quot;</bucket>
              <bucket>&quot;Isaac Fruechte&quot;</bucket>
              <bucket>&quot;Gabe Holmes&quot;</bucket>
              <bucket>&quot;Ed Eagan&quot;</bucket>
              <bucket>&quot;Dezmin Lewis&quot;</bucket>
              <bucket>&quot;Cethan Carter&quot;</bucket>
              <bucket>&quot;Cedric Peerman&quot;</bucket>
              <bucket>&quot;Bronson Hill&quot;</bucket>
              <bucket>&quot;Braedon Bowman&quot;</bucket>
              <bucket>&quot;Will Tukuafu&quot;</bucket>
              <bucket>&quot;Terrence Magee&quot;</bucket>
              <bucket>&quot;LeShun Daniels&quot;</bucket>
              <bucket>&quot;Joe Banyard&quot;</bucket>
              <bucket>&quot;Daryl Richardson&quot;</bucket>
              <bucket>&quot;Brandon Burks&quot;</bucket>
              <bucket>&quot;Antonio Andrews&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;RB&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;TE&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-spacing='25.0' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' />
              <shape column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</rows>
        <cols>([federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok] * [federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{43760A33-0EB7-465D-A2D8-94D6C1173863}' />
    </worksheet>
    <worksheet name='Points Per Target'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Targets per Game' datatype='real' name='[Calculation_310466915677716481]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_target])/COUNTD([week_number])' />
            </column>
            <column caption='Fantasy Points per Game' datatype='real' name='[Calculation_310466915678724099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Jake_Points])/COUNTD([week_number])' />
            </column>
            <column caption='Points Per Target' datatype='real' name='[Calculation_310466915679125508]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_310466915678724099]/[Calculation_310466915677716481]' />
            </column>
            <column caption='Total Target Volume' datatype='string' name='[Calculation_904097646302031883]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF INT(sum([flex_target])) &gt;100 then &apos;Over 100&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 74 then &apos;75-99&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 49 then &apos;50 - 74&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 0 then &apos;&lt; 50&apos;&#13;&#10;END' />
            </column>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[play_type]' derivation='None' name='[none:play_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_310466915679125508]' derivation='User' name='[usr:Calculation_310466915679125508:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904097646302031883]' derivation='User' name='[usr:Calculation_904097646302031883:nk]' pivot='key' type='nominal' />
            <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;RB&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:play_type:nk]'>
            <groupfilter function='member' level='[none:play_type:nk]' member='&quot;pass&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_904097646302031883:nk]'>
            <groupfilter function='level-members' level='[usr:Calculation_904097646302031883:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:play_type:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_904097646302031883:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_904097646302031883:nk]' />
              <lod column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]' z-order='1' />
            <reference-line axis-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_310466915679125508:qk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</cols>
      </table>
      <simple-id uuid='{87094372-2A61-4D8E-9B5D-4E4A63E050B1}' />
    </worksheet>
    <worksheet name='Positional Scarcity'>
      <table>
        <view>
          <datasources>
            <datasource caption='2019FP_projections' name='federated.010e9iv0ybyi4613azm040lzf11t' />
          </datasources>
          <datasource-dependencies datasource='federated.010e9iv0ybyi4613azm040lzf11t'>
            <column caption='JP Rank' datatype='integer' name='[Calculation_310466915988496390]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Rank(sum([Jake_Points]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Jake Points' datatype='real' name='[Jake_Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[POS]' role='dimension' type='nominal' />
            <column caption='PPR Points' datatype='real' name='[PPR_Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column caption='Standard Points' datatype='real' name='[Standard_Points]' role='measure' type='quantitative' />
            <column-instance column='[POS]' derivation='None' name='[none:POS:nk]' pivot='key' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Jake_Points]' derivation='Sum' name='[sum:Jake_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPR_Points]' derivation='Sum' name='[sum:PPR_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Standard_Points]' derivation='Sum' name='[sum:Standard_Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_310466915988496390]' derivation='User' name='[usr:Calculation_310466915988496390:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[sum:PPR_Points:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Standard_Points:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]' included-values='in-range'>
            <min>175.0</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.010e9iv0ybyi4613azm040lzf11t].[none:Player:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.010e9iv0ybyi4613azm040lzf11t].[:Measure Names]</column>
            <column>[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915988496390:qk]' field-type='quantitative' max='30' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.010e9iv0ybyi4613azm040lzf11t].[none:POS:nk]' />
            </encodings>
            <reference-line axis-column='[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]' z-order='1' />
            <reference-line axis-column='[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915988496390:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.010e9iv0ybyi4613azm040lzf11t].[none:POS:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.010e9iv0ybyi4613azm040lzf11t].[none:POS:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.010e9iv0ybyi4613azm040lzf11t].[usr:Calculation_310466915988496390:qk] + [federated.010e9iv0ybyi4613azm040lzf11t].[sum:Jake_Points:qk])</rows>
        <cols>[federated.010e9iv0ybyi4613azm040lzf11t].[none:Player:nk]</cols>
      </table>
      <simple-id uuid='{0092EE06-076C-4664-8BCD-01E87311FBD3}' />
    </worksheet>
    <worksheet name='QB Adot'>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column caption='Jitter' datatype='integer' name='[Calculation_2499779289429909504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='QB complete' datatype='real' name='[QB_complete]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Incomplete' />
                <alias key='1.0' value='Complete' />
              </aliases>
            </column>
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column-instance column='[QB_air_yards]' derivation='Avg' name='[avg:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column-instance column='[QB_air_yards]' derivation='None' name='[none:QB_air_yards:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_complete]' derivation='None' name='[none:QB_complete:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_air_yards]' derivation='Sum' name='[sum:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2499779289429909504]' derivation='User' name='[usr:Calculation_2499779289429909504:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Set 1]' />
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='-15.0' />
              <groupfilter from='1.0' function='range' level='[none:QB_air_yards:ok]' to='57.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='59.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='60.0' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]' direction='DESC' using='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' />
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;A.J. Green&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Aaron Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Aaron Rodgers&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adam Humphries&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adam Shaheen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adam Thielen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adrian Peterson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alan Cross&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Aldrick Robinson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alex Collins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alex Erickson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alex Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alfred Blue&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Allen Hurns&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Allen Robinson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alshon Jeffery&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alvin Kamara&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Amari Cooper&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ameer Abdullah&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Andre Holmes&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Andre Roberts&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Andrew Luck&quot;' />
              <groupfilter from='&quot;Andy Dalton&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Andy Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Anthony Firkser&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Anthony Miller&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Anthony Sherman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Antonio Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Antonio Callaway&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Antonio Gates&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Antony Auclair&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Auden Tate&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Carr&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Ekeler&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Hooper&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Seferian-Jenkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Baker Mayfield&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ben Braunecker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ben Roethlisberger&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Benjamin Watson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bennie Fowler&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bilal Powell&quot;' />
              <groupfilter from='&quot;Blake Bell&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Blake Jarwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bobo Wilson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bradley Sowell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandin Cooks&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon LaFell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon Marshall&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon Powell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon Zylstra&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Breshad Perriman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brian Hill&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brian Parker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brian Quick&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brice Butler&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bruce Ellington&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Byron Marshall&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Anderson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Ham&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Prosise&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Uzomah&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Calvin Ridley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cam Batson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cam Newton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cameron Brate&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cameron Meredith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Carlos Hyde&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Carson Wentz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Case Keenum&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chad Beebe&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chad Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Charcandrick West&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Charles Clay&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Charone Peake&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chase Edmonds&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chester Rogers&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Carson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Conley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Godwin&quot;' />
              <groupfilter from='&quot;Chris Herndon IV&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Chris Ivory&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Lacy&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Manhertz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Thompson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Christian Kirk&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Christian McCaffrey&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cody Core&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cody Latimer&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cole Beasley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cooper Kupp&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cordarrelle Patterson&quot;' />
              <groupfilter from='&quot;Corey Clement&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Corey Davis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Corey Grant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Courtland Sutton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Curtis Samuel&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;D.J. Chark&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;D.J. Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;D&apos;Onta Foreman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DaeSean Hamilton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dak Prescott&quot;' />
              <groupfilter from='&quot;Dallas Goedert&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Dalvin Cook&quot;' />
              <groupfilter from='&quot;Damien Williams&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Damion Ratley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dan Arnold&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dan Vitale&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Darius Jennings&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Darrel Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Darrell Daniels&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Darren Fells&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Darren Sproles&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Darren Waller&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Darrius Heyward-Bey&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Davante Adams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Grinnage&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Johnson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Morgan II&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Njoku&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;De&apos;Anthony Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;De&apos;Lance Turner&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeAndre Carter&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeAndre Hopkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeAndre Washington&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dede Westbrook&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Delanie Walker&quot;' />
              <groupfilter from='&quot;Demarcus Robinson&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Demetrius Harris&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Deontay Burnett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Deonte Thompson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Derek Carr&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Derek Carrier&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Derrick Coleman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Derrick Henry&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Derrick Willies&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeSean Jackson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Deshaun Watson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Devin Funchess&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Devonta Freeman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Devontae Booker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dion Lewis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dion Sims&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Donte Moncrief&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dontrell Hilliard&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dontrelle Inman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Doug Baldwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Doug Martin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Drew Brees&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Duke Johnson Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dwayne Allen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dwayne Harris&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ed Dickson&quot;' />
              <groupfilter from='&quot;Eli Manning&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Elijhaa Penny&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Emmanuel Sanders&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Equanimeous St. Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eric Ebron&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eric Saubert&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eric Tomlinson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Erik Swoope&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Evan Engram&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ezekiel Elliott&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Gehrig Dieter&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Geoff Swaim&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Gerald Everett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Geronimo Allison&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Giovani Bernard&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Golden Tate&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Greg Olsen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Hakeem Valles&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Hayden Hurst&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ian Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Isaiah Crowell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Isaiah McKenzie&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ito Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;J.D. McKissic&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;J.J. Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;J.J. Nelson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;J&apos;Mon Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jack Doyle&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jacob Hollister&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jacquizz Rodgers&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jake Butt&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jake Kumerow&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jalen Richard&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jalen Tolliver&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jamaal Charles&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jamaal Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jameis Winston&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;James Conner&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;James Develin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;James O&apos;Shaughnessy&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;James Washington&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;James White&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jamison Crowder&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jamize Olawale&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jared Cook&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jared Goff&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jarius Wright&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jaron Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jarvis Landry&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jason Croom&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Javon Wims&quot;' />
              <groupfilter from='&quot;Javorius Allen&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Jay Ajayi&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jaylen Samuels&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeff Heuerman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jehu Chesson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeremy Hill&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeremy Kerley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeremy Sprinkle&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jermaine Gresham&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jermaine Kearse&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jesse James&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jimmy Graham&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Joe Flacco&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Joe Mixon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Joe Webb III&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Kelly&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Phillips&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Ross&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Johnny Holton&quot;' />
              <groupfilter from='&quot;Jonathan Williams&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Jordan Akins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Franks&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Howard&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Leggett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Matthews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Reed&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Wilkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordy Nelson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Adams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Allen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Bellamy&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Doctson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Gordon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Hill&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Malone&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Perkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Reynolds&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Rosen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;JuJu Smith-Schuster&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Julian Edelman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Julio Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Justin Hardy&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Justin Hunter&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Justin Jackson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Justin Watson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kamar Aiken&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kapri Bibbs&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kareem Hunt&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keelan Cole&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keenan Allen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keith Ford&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keith Kirkwood&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keith Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keke Coutee&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kelvin Benjamin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kenny Golladay&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keon Hatcher&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kerryon Johnson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kevin White&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Khadarel Hodge&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kirk Cousins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kyle Rudolph&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Lamar Miller&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Lance Kendricks&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Laquon Treadwell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Larry Fitzgerald&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Latavius Murray&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Lee Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;LeGarrette Blount&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Leonard Fournette&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;LeSean McCoy&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Levine Toilolo&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Logan Paulsen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Logan Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Luke Stocker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Luke Willson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Malcolm Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Malik Turner&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marcedes Lewis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marcell Ateman&quot;' />
              <groupfilter from='&quot;Marcus Johnson&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Marcus Mariota&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marcus Murphy&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mark Andrews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mark Ingram II&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mark Walton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marlon Mack&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marquez Valdes-Scantling&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marshawn Lynch&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Martavis Bryant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marvin Hall&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marvin Jones Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Matt LaCosse&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Matt Lengel&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Matt Ryan&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Matthew Stafford&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Maurice Harris&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Maxx Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Melvin Gordon III&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Michael Crabtree&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Michael Floyd&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Michael Gallup&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Michael Roberts&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Michael Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Boone&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Davis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Evans&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mitchell Trubisky&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mo Alie-Cox&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mohamed Sanu&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;MyCole Pruitt&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Neal Sterling&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Nelson Agholor&quot;' />
              <groupfilter from='&quot;Nick Bellore&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Nick Chubb&quot;' />
              <groupfilter from='&quot;Nick Vannett&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Odell Beckham Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Orson Charles&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Patrick DiMarco&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Patrick Mahomes II&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Paul Richardson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Peyton Barber&quot;' />
              <groupfilter from='&quot;Pharoh Cooper&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Phillip Lindsay&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Quincy Enunwa&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Randall Cobb&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rashaad Penny&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rashad Greene&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rashard Higgins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ray-Ray McCloud&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rex Burkhead&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rhett Ellison&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ricky Ortiz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ricky Seals-Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rico Gathers&quot;' />
              <groupfilter from='&quot;Riley McCarron&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Rob Gronkowski&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robby Anderson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robert Foster&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robert Tonyan&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robert Woods&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Roc Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rod Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ronald Jones II&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Roosevelt Nix&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Royce Freeman&quot;' />
              <groupfilter from='&quot;Russell Gage&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Russell Wilson&quot;' />
              <groupfilter from='&quot;Ryan Grant&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Ryan Hewitt&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ryan Switzer&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sam Darnold&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Samaje Perine&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sammie Coates&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sammy Watkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Saquon Barkley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Scott Simonson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sean Culkin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Seth DeValve&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Seth Roberts&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Shelton Gibson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sony Michel&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Spencer Ware&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Stacy Coley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Stefon Diggs&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sterling Shepard&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Stevan Ridley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;T.J. Logan&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;T.J. Yeldon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;T.Y. Hilton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Taiwan Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tajae Sharpe&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Taquan Mizzell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tarik Cohen&quot;' />
              <groupfilter from='&quot;Tavon Austin&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Taylor Gabriel&quot;' />
              <groupfilter from='&quot;Taysom Hill&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Ted Ginn Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Terrance Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Terrelle Pryor Sr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tevin Coleman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Theo Riddick&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tim Patrick&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tim White&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;TJ Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Todd Gurley II&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tom Brady&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tommy Bohanon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tommylee Lewis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Torrey Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Travis Benjamin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Travis Kelce&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tre Madden&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tre&apos;Quan Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trent Sherfield&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trenton Cannon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trey Burton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trey Quinn&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ty Montgomery&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tyler Boyd&quot;' />
              <groupfilter from='&quot;Tyler Conklin&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Tyler Ervin&quot;' />
              <groupfilter from='&quot;Tyler Higbee&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Tyler Lockett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tyreek Hill&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tyrell Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tyrone Swoopes&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Vance McDonald&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Vernon Davis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Virgil Green&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Vyncint Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Wayne Gallman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Wendell Smallwood&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Will Dissly&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Will Fuller V&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Willie Snead IV&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Xavier Grimble&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Ertz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Line&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Pascal&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Zenner&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zay Jones&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Set 1]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_2499779289429909504:qk:4]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='660' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f2f9f9' />
            <format attr='fill-below' id='refline0' value='#faf5f0' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='text-format' id='refline0' value='N' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='stroke-color' id='refline6' value='#e15759' />
            <format attr='stroke-size' id='refline6' value='4' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='stroke-size' id='refline4' value='4' />
            <format attr='stroke-color' id='refline4' value='#4e79a7' />
            <format attr='vertical-align' id='refline4' value='top' />
            <format attr='text-align' id='refline4' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_complete:ok]' />
              <lod column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]' />
              <tooltip column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' probability='95' scope='per-cell' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' z-order='1' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' enable-instant-analytics='false' formula='average' id='refline4' label='NFL AVG: &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' z-order='3' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' enable-instant-analytics='false' formula='average' id='refline6' label='&lt;Computation&gt;: &lt;Value&gt;' label-type='custom' probability='95' scope='per-cell' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>QB air yards:&#9;</run>
                <run bold='true'>&lt;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='shape' value=':filled/times' />
                <format attr='mark-color' value='#f1ce63' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1090' />
                <format attr='maxwidth' value='1090' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk] * [federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_2499779289429909504:qk:4])</rows>
        <cols>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]</cols>
      </table>
      <simple-id uuid='{5D0B1826-04A3-4E0A-980C-DCA683280610}' />
    </worksheet>
    <worksheet name='QB Adot SB'>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column-instance column='[QB_air_yards]' derivation='Avg' name='[avg:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QB_air_yards]' derivation='None' name='[none:QB_air_yards:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='1.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='2.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='3.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='4.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='5.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='6.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='7.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='8.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='9.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='10.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='11.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='12.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='13.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='14.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='15.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='16.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='17.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='18.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='19.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='20.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='21.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='22.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='23.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='24.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='25.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='26.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='27.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='28.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='29.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='30.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='31.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='32.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='33.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='34.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='35.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='36.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='37.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='38.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='39.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='40.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='41.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='42.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='43.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='44.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='45.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='46.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='47.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='48.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='49.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='50.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='51.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='52.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='53.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='54.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='55.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='56.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='57.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='59.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='60.0' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]' direction='DESC' using='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' />
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]' included-values='in-range'>
            <min>250.0</min>
          </filter>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' field-type='quantitative' max='15.0' min='7.5' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f2f9f9' />
            <format attr='fill-below' id='refline0' value='#faf5f0' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='text-format' id='refline0' value='N' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt;: &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' z-order='1' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' enable-instant-analytics='true' formula='max' id='refline1' label='&lt;Computation&gt;:&lt;Value&gt;' label-type='custom' scope='per-table' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' z-order='2' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' enable-instant-analytics='true' formula='min' id='refline2' label='&lt;Computation&gt;: &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]</rows>
        <cols>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</cols>
      </table>
      <simple-id uuid='{128E6354-BB71-41B9-B36C-F4F449739BB5}' />
    </worksheet>
    <worksheet name='QB Pocket Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='None' caption='QB pocket time (bin)' datatype='integer' name='[QB pocket time (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[QB_pocket_time]' peg='0' size='1' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='QB pocket time' datatype='real' name='[QB_pocket_time]' role='dimension' type='ordinal' />
            <column-instance column='[QB_air_yards]' derivation='Avg' name='[avg:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[QB pocket time (bin)]' derivation='None' name='[none:QB pocket time (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[avg:QB_air_yards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]' />
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' />
              <size column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names] * [federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values])</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB pocket time (bin):ok]</cols>
      </table>
      <simple-id uuid='{4BD1D70A-3398-415F-906C-E2F31513BB1D}' />
    </worksheet>
    <worksheet name='QB v Blitz'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Completion Percentage' datatype='real' name='[Calculation_225179997274169348]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([QB_complete])/sum([QB_attempt])' />
            </column>
            <column caption='Blitz Attempts' datatype='real' name='[Calculation_225179997274464261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([blitz] = 1, [QB_attempt], 0)' />
            </column>
            <column caption='Blitz Completion' datatype='real' name='[Calculation_225179997274611718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([blitz] = 1, [QB_complete],0)' />
            </column>
            <column caption='Blitz Completion Percentage' datatype='real' name='[Calculation_225179997274689543]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_225179997274611718])/sum([Calculation_225179997274464261])' />
            </column>
            <column caption='QB Blitz Improvement' datatype='real' name='[Calculation_225179997278126088]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_225179997274689543] - [Calculation_225179997274169348]' />
            </column>
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB complete' datatype='real' name='[QB_complete]' role='measure' type='quantitative' />
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Blitz' datatype='real' name='[blitz]' role='dimension' type='ordinal' />
            <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_225179997274464261]' derivation='Sum' name='[sum:Calculation_225179997274464261:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997274611718]' derivation='Sum' name='[sum:Calculation_225179997274611718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QB_complete]' derivation='Sum' name='[sum:QB_complete:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997274169348]' derivation='User' name='[usr:Calculation_225179997274169348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997274689543]' derivation='User' name='[usr:Calculation_225179997274689543:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997278126088]' derivation='User' name='[usr:Calculation_225179997278126088:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_complete:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274464261:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274611718:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997278126088:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_complete:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274464261:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274611718:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]' />
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]'>
            <groupfilter function='level-members' level='[none:QB_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' value='155' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274169348:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997278126088:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B389F803-E813-4B7E-A989-22444846DEB9}' />
    </worksheet>
    <worksheet name='QB v Blitz (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Completion Percentage' datatype='real' name='[Calculation_225179997274169348]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([QB_complete])/sum([QB_attempt])' />
            </column>
            <column caption='Blitz Attempts' datatype='real' name='[Calculation_225179997274464261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([blitz] = 1, [QB_attempt], 0)' />
            </column>
            <column caption='Blitz Completion' datatype='real' name='[Calculation_225179997274611718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([blitz] = 1, [QB_complete],0)' />
            </column>
            <column caption='Blitz Completion Percentage' datatype='real' name='[Calculation_225179997274689543]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_225179997274611718])/sum([Calculation_225179997274464261])' />
            </column>
            <column caption='QB Blitz Improvement' datatype='real' name='[Calculation_225179997278126088]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_225179997274689543] - [Calculation_225179997274169348]' />
            </column>
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB complete' datatype='real' name='[QB_complete]' role='measure' type='quantitative' />
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Blitz' datatype='real' name='[blitz]' role='dimension' type='ordinal' />
            <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_225179997274464261]' derivation='Sum' name='[sum:Calculation_225179997274464261:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997274611718]' derivation='Sum' name='[sum:Calculation_225179997274611718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997274689543]' derivation='User' name='[usr:Calculation_225179997274689543:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997278126088]' derivation='User' name='[usr:Calculation_225179997278126088:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997278126088:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997278126088:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]' />
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]'>
            <groupfilter function='level-members' level='[none:QB_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997274689543:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274464261:qk]' value='N' />
            <format attr='text-align' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274464261:qk]' value='auto' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997278126088:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274611718:qk]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274464261:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</rows>
        <cols>([federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names] * [federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{0C8F70C5-1E2D-4970-8E29-AC81C5F62ED0}' />
    </worksheet>
    <worksheet name='Sheet 30'>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[play_type]' derivation='None' name='[none:play_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[touchdown]' derivation='None' name='[none:touchdown:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
            <column-instance column='[touchdown]' derivation='Sum' name='[sum:touchdown:qk]' pivot='key' type='quantitative' />
            <column caption='Touchdown' datatype='real' name='[touchdown]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]'>
            <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;QB&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]'>
            <groupfilter function='member' level='[none:play_type:nk]' member='&quot;rush&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:touchdown:ok]'>
            <groupfilter function='member' level='[none:touchdown:ok]' member='1.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:touchdown:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:touchdown:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:touchdown:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{EEAE92B9-4301-4CBB-B6D0-B7B3F9D55C5E}' />
    </worksheet>
    <worksheet name='Target Share'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[play_type]' derivation='None' name='[none:play_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_target]' derivation='Sum' name='[pcto:sum:flex_target:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;D.J. Moore&quot;</bucket>
              <bucket>&quot;Russell Shepard&quot;</bucket>
              <bucket>&quot;Zay Jones&quot;</bucket>
              <bucket>&quot;Nelson Agholor&quot;</bucket>
              <bucket>&quot;Julio Jones&quot;</bucket>
              <bucket>&quot;Michael Thomas&quot;</bucket>
              <bucket>&quot;Josh Doctson&quot;</bucket>
              <bucket>&quot;George Kittle&quot;</bucket>
              <bucket>&quot;James White&quot;</bucket>
              <bucket>&quot;Saquon Barkley&quot;</bucket>
              <bucket>&quot;Ian Thomas&quot;</bucket>
              <bucket>&quot;Julian Edelman&quot;</bucket>
              <bucket>&quot;John Brown&quot;</bucket>
              <bucket>&quot;Gehrig Dieter&quot;</bucket>
              <bucket>&quot;John Kelly&quot;</bucket>
              <bucket>&quot;Kelvin Benjamin&quot;</bucket>
              <bucket>&quot;Larry Fitzgerald&quot;</bucket>
              <bucket>&quot;Taywan Taylor&quot;</bucket>
              <bucket>&quot;Jamison Crowder&quot;</bucket>
              <bucket>&quot;Jordan Reed&quot;</bucket>
              <bucket>&quot;Jarvis Landry&quot;</bucket>
              <bucket>&quot;Phillip Dorsett&quot;</bucket>
              <bucket>&quot;Jordan Matthews&quot;</bucket>
              <bucket>&quot;Nick Chubb&quot;</bucket>
              <bucket>&quot;Breshad Perriman&quot;</bucket>
              <bucket>&quot;JuJu Smith-Schuster&quot;</bucket>
              <bucket>&quot;Antonio Brown&quot;</bucket>
              <bucket>&quot;Tajae Sharpe&quot;</bucket>
              <bucket>&quot;Christian McCaffrey&quot;</bucket>
              <bucket>&quot;Zach Ertz&quot;</bucket>
              <bucket>&quot;Ty Montgomery&quot;</bucket>
              <bucket>&quot;Ricky Seals-Jones&quot;</bucket>
              <bucket>&quot;Corey Davis&quot;</bucket>
              <bucket>&quot;Curtis Samuel&quot;</bucket>
              <bucket>&quot;Matt Ryan&quot;</bucket>
              <bucket>&quot;Tom Brady&quot;</bucket>
              <bucket>&quot;Chris Thompson&quot;</bucket>
              <bucket>&quot;Nick Boyle&quot;</bucket>
              <bucket>&quot;Kenny Golladay&quot;</bucket>
              <bucket>&quot;Mike Evans&quot;</bucket>
              <bucket>&quot;Tarik Cohen&quot;</bucket>
              <bucket>&quot;Luke Stocker&quot;</bucket>
              <bucket>&quot;Tre&apos;Quan Smith&quot;</bucket>
              <bucket>&quot;Dede Westbrook&quot;</bucket>
              <bucket>&quot;David Johnson&quot;</bucket>
              <bucket>&quot;Jarius Wright&quot;</bucket>
              <bucket>&quot;Danny Amendola&quot;</bucket>
              <bucket>&quot;Benjamin Watson&quot;</bucket>
              <bucket>&quot;Virgil Green&quot;</bucket>
              <bucket>&quot;Taylor Gabriel&quot;</bucket>
              <bucket>&quot;Alvin Kamara&quot;</bucket>
              <bucket>&quot;Tyler Boyd&quot;</bucket>
              <bucket>&quot;LeSean McCoy&quot;</bucket>
              <bucket>&quot;Justin Jackson&quot;</bucket>
              <bucket>&quot;Donte Moncrief&quot;</bucket>
              <bucket>&quot;Chester Rogers&quot;</bucket>
              <bucket>&quot;Allen Robinson&quot;</bucket>
              <bucket>&quot;Michael Crabtree&quot;</bucket>
              <bucket>&quot;Willie Snead IV&quot;</bucket>
              <bucket>&quot;Anthony Sherman&quot;</bucket>
              <bucket>&quot;Trent Sherfield&quot;</bucket>
              <bucket>&quot;Pierre Garcon&quot;</bucket>
              <bucket>&quot;Kendrick Bourne&quot;</bucket>
              <bucket>&quot;David Njoku&quot;</bucket>
              <bucket>&quot;Golden Tate&quot;</bucket>
              <bucket>&quot;Geremy Davis&quot;</bucket>
              <bucket>&quot;Johnny Mundt&quot;</bucket>
              <bucket>&quot;Ryan Grant&quot;</bucket>
              <bucket>&quot;Robby Anderson&quot;</bucket>
              <bucket>&quot;DeAndre Hopkins&quot;</bucket>
              <bucket>&quot;Kenyan Drake&quot;</bucket>
              <bucket>&quot;Davante Adams&quot;</bucket>
              <bucket>&quot;Adam Humphries&quot;</bucket>
              <bucket>&quot;Marquez Valdes-Scantling&quot;</bucket>
              <bucket>&quot;Marvin Hall&quot;</bucket>
              <bucket>&quot;Evan Engram&quot;</bucket>
              <bucket>&quot;Dontrelle Inman&quot;</bucket>
              <bucket>&quot;Jermaine Kearse&quot;</bucket>
              <bucket>&quot;Vernon Davis&quot;</bucket>
              <bucket>&quot;Dion Lewis&quot;</bucket>
              <bucket>&quot;Chris Godwin&quot;</bucket>
              <bucket>&quot;Christian Kirk&quot;</bucket>
              <bucket>&quot;Eric Saubert&quot;</bucket>
              <bucket>&quot;Quincy Enunwa&quot;</bucket>
              <bucket>&quot;Antonio Callaway&quot;</bucket>
              <bucket>&quot;Austin Hooper&quot;</bucket>
              <bucket>&quot;T.J. Yeldon&quot;</bucket>
              <bucket>&quot;Maurice Harris&quot;</bucket>
              <bucket>&quot;Alshon Jeffery&quot;</bucket>
              <bucket>&quot;Trent Taylor&quot;</bucket>
              <bucket>&quot;Keenan Allen&quot;</bucket>
              <bucket>&quot;Trey Burton&quot;</bucket>
              <bucket>&quot;Kyle Juszczyk&quot;</bucket>
              <bucket>&quot;Chris Herndon IV&quot;</bucket>
              <bucket>&quot;Travis Kelce&quot;</bucket>
              <bucket>&quot;C.J. Uzomah&quot;</bucket>
              <bucket>&quot;Kenny Stills&quot;</bucket>
              <bucket>&quot;Adam Thielen&quot;</bucket>
              <bucket>&quot;Josh Hill&quot;</bucket>
              <bucket>&quot;Michael Floyd&quot;</bucket>
              <bucket>&quot;Devin Funchess&quot;</bucket>
              <bucket>&quot;Keelan Cole&quot;</bucket>
              <bucket>&quot;Jimmy Graham&quot;</bucket>
              <bucket>&quot;Charles Clay&quot;</bucket>
              <bucket>&quot;Stefon Diggs&quot;</bucket>
              <bucket>&quot;Andrew Luck&quot;</bucket>
              <bucket>&quot;Robert Foster&quot;</bucket>
              <bucket>&quot;DeSean Jackson&quot;</bucket>
              <bucket>&quot;John Ross&quot;</bucket>
              <bucket>&quot;Marquise Goodwin&quot;</bucket>
              <bucket>&quot;Tyreek Hill&quot;</bucket>
              <bucket>&quot;Robert Woods&quot;</bucket>
              <bucket>&quot;Jaylen Samuels&quot;</bucket>
              <bucket>&quot;Terrelle Pryor Sr.&quot;</bucket>
              <bucket>&quot;Wayne Gallman&quot;</bucket>
              <bucket>&quot;Jason Croom&quot;</bucket>
              <bucket>&quot;Kapri Bibbs&quot;</bucket>
              <bucket>&quot;DeVante Parker&quot;</bucket>
              <bucket>&quot;Ted Ginn Jr.&quot;</bucket>
              <bucket>&quot;Randall Cobb&quot;</bucket>
              <bucket>&quot;Dante Pettis&quot;</bucket>
              <bucket>&quot;Rashard Higgins&quot;</bucket>
              <bucket>&quot;A.J. Green&quot;</bucket>
              <bucket>&quot;Brandin Cooks&quot;</bucket>
              <bucket>&quot;Odell Beckham Jr.&quot;</bucket>
              <bucket>&quot;Joe Mixon&quot;</bucket>
              <bucket>&quot;Vance McDonald&quot;</bucket>
              <bucket>&quot;Mark Andrews&quot;</bucket>
              <bucket>&quot;Chris Ivory&quot;</bucket>
              <bucket>&quot;Chad Williams&quot;</bucket>
              <bucket>&quot;Amari Cooper&quot;</bucket>
              <bucket>&quot;Zach Zenner&quot;</bucket>
              <bucket>&quot;Andre Holmes&quot;</bucket>
              <bucket>&quot;Giovani Bernard&quot;</bucket>
              <bucket>&quot;Ito Smith&quot;</bucket>
              <bucket>&quot;Chase Edmonds&quot;</bucket>
              <bucket>&quot;T.Y. Hilton&quot;</bucket>
              <bucket>&quot;Matt Breida&quot;</bucket>
              <bucket>&quot;Duke Johnson Jr.&quot;</bucket>
              <bucket>&quot;Jared Cook&quot;</bucket>
              <bucket>&quot;Sterling Shepard&quot;</bucket>
              <bucket>&quot;Ezekiel Elliott&quot;</bucket>
              <bucket>&quot;Anthony Miller&quot;</bucket>
              <bucket>&quot;Doug Baldwin&quot;</bucket>
              <bucket>&quot;Adrian Peterson&quot;</bucket>
              <bucket>&quot;Marcus Murphy&quot;</bucket>
              <bucket>&quot;Emmanuel Sanders&quot;</bucket>
              <bucket>&quot;Eric Ebron&quot;</bucket>
              <bucket>&quot;Tyler Lockett&quot;</bucket>
              <bucket>&quot;O.J. Howard&quot;</bucket>
              <bucket>&quot;TJ Jones&quot;</bucket>
              <bucket>&quot;Cole Beasley&quot;</bucket>
              <bucket>&quot;Demaryius Thomas&quot;</bucket>
              <bucket>&quot;Jordy Nelson&quot;</bucket>
              <bucket>&quot;Logan Thomas&quot;</bucket>
              <bucket>&quot;Jakeem Grant&quot;</bucket>
              <bucket>&quot;Josh Gordon&quot;</bucket>
              <bucket>&quot;Torrey Smith&quot;</bucket>
              <bucket>&quot;Mohamed Sanu&quot;</bucket>
              <bucket>&quot;James Washington&quot;</bucket>
              <bucket>&quot;Jacquizz Rodgers&quot;</bucket>
              <bucket>&quot;Jalen Richard&quot;</bucket>
              <bucket>&quot;Elijah McGuire&quot;</bucket>
              <bucket>&quot;Calvin Ridley&quot;</bucket>
              <bucket>&quot;Albert Wilson&quot;</bucket>
              <bucket>&quot;T.J. Logan&quot;</bucket>
              <bucket>&quot;Brandon Powell&quot;</bucket>
              <bucket>&quot;Todd Gurley II&quot;</bucket>
              <bucket>&quot;Mike Gesicki&quot;</bucket>
              <bucket>&quot;Cameron Brate&quot;</bucket>
              <bucket>&quot;Isaiah Crowell&quot;</bucket>
              <bucket>&quot;Courtland Sutton&quot;</bucket>
              <bucket>&quot;Mark Ingram II&quot;</bucket>
              <bucket>&quot;Trey Quinn&quot;</bucket>
              <bucket>&quot;Matt Schaub&quot;</bucket>
              <bucket>&quot;Jonnu Smith&quot;</bucket>
              <bucket>&quot;Dallas Goedert&quot;</bucket>
              <bucket>&quot;Cody Core&quot;</bucket>
              <bucket>&quot;Kyle Rudolph&quot;</bucket>
              <bucket>&quot;Theo Riddick&quot;</bucket>
              <bucket>&quot;Isaiah McKenzie&quot;</bucket>
              <bucket>&quot;Michael Gallup&quot;</bucket>
              <bucket>&quot;Leonard Fournette&quot;</bucket>
              <bucket>&quot;David Moore&quot;</bucket>
              <bucket>&quot;James O&apos;Shaughnessy&quot;</bucket>
              <bucket>&quot;Melvin Gordon III&quot;</bucket>
              <bucket>&quot;Mike Williams&quot;</bucket>
              <bucket>&quot;Nyheim Hines&quot;</bucket>
              <bucket>&quot;Tyrell Williams&quot;</bucket>
              <bucket>&quot;Rob Gronkowski&quot;</bucket>
              <bucket>&quot;Hakeem Valles&quot;</bucket>
              <bucket>&quot;Geronimo Allison&quot;</bucket>
              <bucket>&quot;Seth Roberts&quot;</bucket>
              <bucket>&quot;Alex Erickson&quot;</bucket>
              <bucket>&quot;Jamaal Williams&quot;</bucket>
              <bucket>&quot;Wendell Smallwood&quot;</bucket>
              <bucket>&quot;Javorius Allen&quot;</bucket>
              <bucket>&quot;Marvin Jones Jr.&quot;</bucket>
              <bucket>&quot;Darren Sproles&quot;</bucket>
              <bucket>&quot;Paul Richardson&quot;</bucket>
              <bucket>&quot;Hayden Hurst&quot;</bucket>
              <bucket>&quot;D.J. Chark&quot;</bucket>
              <bucket>&quot;Nick Vannett&quot;</bucket>
              <bucket>&quot;James Conner&quot;</bucket>
              <bucket>&quot;Jalen Tolliver&quot;</bucket>
              <bucket>&quot;Trenton Cannon&quot;</bucket>
              <bucket>&quot;Andy Jones&quot;</bucket>
              <bucket>&quot;Austin Ekeler&quot;</bucket>
              <bucket>&quot;Jordan Leggett&quot;</bucket>
              <bucket>&quot;Mike Davis&quot;</bucket>
              <bucket>&quot;Cooper Kupp&quot;</bucket>
              <bucket>&quot;Carlos Hyde&quot;</bucket>
              <bucket>&quot;Cameron Artis-Payne&quot;</bucket>
              <bucket>&quot;Greg Olsen&quot;</bucket>
              <bucket>&quot;Chris Hogan&quot;</bucket>
              <bucket>&quot;Sammy Watkins&quot;</bucket>
              <bucket>&quot;Anthony Firkser&quot;</bucket>
              <bucket>&quot;Josh Reynolds&quot;</bucket>
              <bucket>&quot;Jordan Howard&quot;</bucket>
              <bucket>&quot;Peyton Barber&quot;</bucket>
              <bucket>&quot;Will Fuller V&quot;</bucket>
              <bucket>&quot;Chris Conley&quot;</bucket>
              <bucket>&quot;Chris Moore&quot;</bucket>
              <bucket>&quot;Gerald Everett&quot;</bucket>
              <bucket>&quot;Jake Kumerow&quot;</bucket>
              <bucket>&quot;Antonio Gates&quot;</bucket>
              <bucket>&quot;Devontae Booker&quot;</bucket>
              <bucket>&quot;Laquon Treadwell&quot;</bucket>
              <bucket>&quot;Ryan Griffin&quot;</bucket>
              <bucket>&quot;Darius Jennings&quot;</bucket>
              <bucket>&quot;Jeff Heuerman&quot;</bucket>
              <bucket>&quot;Frank Gore&quot;</bucket>
              <bucket>&quot;Alfred Morris&quot;</bucket>
              <bucket>&quot;DaeSean Hamilton&quot;</bucket>
              <bucket>&quot;Phillip Lindsay&quot;</bucket>
              <bucket>&quot;Josh Bellamy&quot;</bucket>
              <bucket>&quot;Dan Arnold&quot;</bucket>
              <bucket>&quot;Taquan Mizzell&quot;</bucket>
              <bucket>&quot;Bruce Ellington&quot;</bucket>
              <bucket>&quot;Corey Clement&quot;</bucket>
              <bucket>&quot;Dalvin Cook&quot;</bucket>
              <bucket>&quot;Jeremy Sprinkle&quot;</bucket>
              <bucket>&quot;Keke Coutee&quot;</bucket>
              <bucket>&quot;MyCole Pruitt&quot;</bucket>
              <bucket>&quot;Tevin Coleman&quot;</bucket>
              <bucket>&quot;Austin Carr&quot;</bucket>
              <bucket>&quot;Deonte Thompson&quot;</bucket>
              <bucket>&quot;Kerryon Johnson&quot;</bucket>
              <bucket>&quot;Tim Patrick&quot;</bucket>
              <bucket>&quot;Zach Pascal&quot;</bucket>
              <bucket>&quot;Lamar Miller&quot;</bucket>
              <bucket>&quot;J.J. Nelson&quot;</bucket>
              <bucket>&quot;Blake Jarwin&quot;</bucket>
              <bucket>&quot;Lance Kendricks&quot;</bucket>
              <bucket>&quot;Allen Hurns&quot;</bucket>
              <bucket>&quot;Matt LaCosse&quot;</bucket>
              <bucket>&quot;Ryan Switzer&quot;</bucket>
              <bucket>&quot;Derrick Henry&quot;</bucket>
              <bucket>&quot;Auden Tate&quot;</bucket>
              <bucket>&quot;Kareem Hunt&quot;</bucket>
              <bucket>&quot;Equanimeous St. Brown&quot;</bucket>
              <bucket>&quot;Geoff Swaim&quot;</bucket>
              <bucket>&quot;Tyler Higbee&quot;</bucket>
              <bucket>&quot;Zach Line&quot;</bucket>
              <bucket>&quot;Jerome Cunningham&quot;</bucket>
              <bucket>&quot;Rishard Matthews&quot;</bucket>
              <bucket>&quot;Aaron Jones&quot;</bucket>
              <bucket>&quot;Maxx Williams&quot;</bucket>
              <bucket>&quot;Byron Marshall&quot;</bucket>
              <bucket>&quot;Aldrick Robinson&quot;</bucket>
              <bucket>&quot;Rhett Ellison&quot;</bucket>
              <bucket>&quot;Chris Carson&quot;</bucket>
              <bucket>&quot;Demarcus Robinson&quot;</bucket>
              <bucket>&quot;Darren Fells&quot;</bucket>
              <bucket>&quot;Jesse James&quot;</bucket>
              <bucket>&quot;Jeff Wilson Jr.&quot;</bucket>
              <bucket>&quot;Robert Tonyan&quot;</bucket>
              <bucket>&quot;Taysom Hill&quot;</bucket>
              <bucket>&quot;Garrett Celek&quot;</bucket>
              <bucket>&quot;Marcell Ateman&quot;</bucket>
              <bucket>&quot;Brandon Marshall&quot;</bucket>
              <bucket>&quot;Nick O&apos;Leary&quot;</bucket>
              <bucket>&quot;Delanie Walker&quot;</bucket>
              <bucket>&quot;Jordan Thomas&quot;</bucket>
              <bucket>&quot;Richie James Jr.&quot;</bucket>
              <bucket>&quot;DeAndre Carter&quot;</bucket>
              <bucket>&quot;Alex Collins&quot;</bucket>
              <bucket>&quot;Jack Doyle&quot;</bucket>
              <bucket>&quot;Tyler Eifert&quot;</bucket>
              <bucket>&quot;John Phillips&quot;</bucket>
              <bucket>&quot;Alfred Blue&quot;</bucket>
              <bucket>&quot;Jordan Akins&quot;</bucket>
              <bucket>&quot;Andre Roberts&quot;</bucket>
              <bucket>&quot;Martavis Bryant&quot;</bucket>
              <bucket>&quot;J&apos;Mon Moore&quot;</bucket>
              <bucket>&quot;Cordarrelle Patterson&quot;</bucket>
              <bucket>&quot;Blake Bell&quot;</bucket>
              <bucket>&quot;Tommylee Lewis&quot;</bucket>
              <bucket>&quot;Kalen Ballage&quot;</bucket>
              <bucket>&quot;Bennie Fowler&quot;</bucket>
              <bucket>&quot;Raheem Mostert&quot;</bucket>
              <bucket>&quot;Austin Seferian-Jenkins&quot;</bucket>
              <bucket>&quot;Jaron Brown&quot;</bucket>
              <bucket>&quot;Josh Adams&quot;</bucket>
              <bucket>&quot;Travis Benjamin&quot;</bucket>
              <bucket>&quot;Doug Martin&quot;</bucket>
              <bucket>&quot;Bilal Powell&quot;</bucket>
              <bucket>&quot;Latavius Murray&quot;</bucket>
              <bucket>&quot;Keith Kirkwood&quot;</bucket>
              <bucket>&quot;Josh Perkins&quot;</bucket>
              <bucket>&quot;Durham Smythe&quot;</bucket>
              <bucket>&quot;Demetrius Harris&quot;</bucket>
              <bucket>&quot;Kenneth Dixon&quot;</bucket>
              <bucket>&quot;Rashad Greene&quot;</bucket>
              <bucket>&quot;Levine Toilolo&quot;</bucket>
              <bucket>&quot;Marlon Mack&quot;</bucket>
              <bucket>&quot;Jermaine Gresham&quot;</bucket>
              <bucket>&quot;Eric Tomlinson&quot;</bucket>
              <bucket>&quot;Damien Williams&quot;</bucket>
              <bucket>&quot;Damion Ratley&quot;</bucket>
              <bucket>&quot;Spencer Ware&quot;</bucket>
              <bucket>&quot;Jeremy Kerley&quot;</bucket>
              <bucket>&quot;Ray-Ray McCloud&quot;</bucket>
              <bucket>&quot;Dion Dawkins&quot;</bucket>
              <bucket>&quot;Tommy Bohanon&quot;</bucket>
              <bucket>&quot;Deontay Burnett&quot;</bucket>
              <bucket>&quot;Justin Hardy&quot;</bucket>
              <bucket>&quot;Michael Roberts&quot;</bucket>
              <bucket>&quot;Rex Burkhead&quot;</bucket>
              <bucket>&quot;Royce Freeman&quot;</bucket>
              <bucket>&quot;Will Dissly&quot;</bucket>
              <bucket>&quot;Luke Willson&quot;</bucket>
              <bucket>&quot;Adam Shaheen&quot;</bucket>
              <bucket>&quot;Marshawn Lynch&quot;</bucket>
              <bucket>&quot;Matt Lengel&quot;</bucket>
              <bucket>&quot;Brice Butler&quot;</bucket>
              <bucket>&quot;Kamar Aiken&quot;</bucket>
              <bucket>&quot;Ed Dickson&quot;</bucket>
              <bucket>&quot;Niles Paul&quot;</bucket>
              <bucket>&quot;Cam Batson&quot;</bucket>
              <bucket>&quot;Alex Armah&quot;</bucket>
              <bucket>&quot;Travaris Cadet&quot;</bucket>
              <bucket>&quot;James Develin&quot;</bucket>
              <bucket>&quot;Brandon LaFell&quot;</bucket>
              <bucket>&quot;Corey Grant&quot;</bucket>
              <bucket>&quot;Rashaad Penny&quot;</bucket>
              <bucket>&quot;Dalton Schultz&quot;</bucket>
              <bucket>&quot;Cody Latimer&quot;</bucket>
              <bucket>&quot;Jordan Wilkins&quot;</bucket>
              <bucket>&quot;LeGarrette Blount&quot;</bucket>
              <bucket>&quot;Ronald Jones II&quot;</bucket>
              <bucket>&quot;C.J. Ham&quot;</bucket>
              <bucket>&quot;David Grinnage&quot;</bucket>
              <bucket>&quot;Allen Lazard&quot;</bucket>
              <bucket>&quot;Scott Simonson&quot;</bucket>
              <bucket>&quot;Patrick DiMarco&quot;</bucket>
              <bucket>&quot;Victor Bolden Jr.&quot;</bucket>
              <bucket>&quot;Rod Smith&quot;</bucket>
              <bucket>&quot;Tavon Austin&quot;</bucket>
              <bucket>&quot;A.J. Derby&quot;</bucket>
              <bucket>&quot;Antony Auclair&quot;</bucket>
              <bucket>&quot;Ben Braunecker&quot;</bucket>
              <bucket>&quot;Jake Butt&quot;</bucket>
              <bucket>&quot;Darvin Kidsy&quot;</bucket>
              <bucket>&quot;Mark Walton&quot;</bucket>
              <bucket>&quot;Dontrell Hilliard&quot;</bucket>
              <bucket>&quot;Eli Rogers&quot;</bucket>
              <bucket>&quot;Cameron Meredith&quot;</bucket>
              <bucket>&quot;Derek Carrier&quot;</bucket>
              <bucket>&quot;Lee Smith&quot;</bucket>
              <bucket>&quot;Vyncint Smith&quot;</bucket>
              <bucket>&quot;Shaun Wilson&quot;</bucket>
              <bucket>&quot;Neal Sterling&quot;</bucket>
              <bucket>&quot;Sony Michel&quot;</bucket>
              <bucket>&quot;Mo Alie-Cox&quot;</bucket>
              <bucket>&quot;Kevin White&quot;</bucket>
              <bucket>&quot;Justin Hunter&quot;</bucket>
              <bucket>&quot;Kenjon Barner&quot;</bucket>
              <bucket>&quot;Jay Ajayi&quot;</bucket>
              <bucket>&quot;Brian Parker&quot;</bucket>
              <bucket>&quot;Derrick Coleman&quot;</bucket>
              <bucket>&quot;C.J. Anderson&quot;</bucket>
              <bucket>&quot;Leonte Carroo&quot;</bucket>
              <bucket>&quot;Josh Malone&quot;</bucket>
              <bucket>&quot;Russell Gage&quot;</bucket>
              <bucket>&quot;Tyler Kroft&quot;</bucket>
              <bucket>&quot;Keith Ford&quot;</bucket>
              <bucket>&quot;Erik Swoope&quot;</bucket>
              <bucket>&quot;Andy Janovich&quot;</bucket>
              <bucket>&quot;Elijhaa Penny&quot;</bucket>
              <bucket>&quot;Noah Brown&quot;</bucket>
              <bucket>&quot;Mike Wallace&quot;</bucket>
              <bucket>&quot;Seth DeValve&quot;</bucket>
              <bucket>&quot;Logan Paulsen&quot;</bucket>
              <bucket>&quot;Charone Peake&quot;</bucket>
              <bucket>&quot;Cam Phillips&quot;</bucket>
              <bucket>&quot;Corey Coleman&quot;</bucket>
              <bucket>&quot;Jawill Davis&quot;</bucket>
              <bucket>&quot;Rico Gathers&quot;</bucket>
              <bucket>&quot;Bobo Wilson&quot;</bucket>
              <bucket>&quot;Keith Smith&quot;</bucket>
              <bucket>&quot;Jamaal Charles&quot;</bucket>
              <bucket>&quot;Malcolm Brown&quot;</bucket>
              <bucket>&quot;Shelton Gibson&quot;</bucket>
              <bucket>&quot;Samaje Perine&quot;</bucket>
              <bucket>&quot;Alan Cross&quot;</bucket>
              <bucket>&quot;Gus Edwards&quot;</bucket>
              <bucket>&quot;Xavier Grimble&quot;</bucket>
              <bucket>&quot;Tyler Conklin&quot;</bucket>
              <bucket>&quot;Nick Williams&quot;</bucket>
              <bucket>&quot;Javon Wims&quot;</bucket>
              <bucket>&quot;Devonta Freeman&quot;</bucket>
              <bucket>&quot;Darren Waller&quot;</bucket>
              <bucket>&quot;Dwayne Harris&quot;</bucket>
              <bucket>&quot;Matt Flanagan&quot;</bucket>
              <bucket>&quot;Jordan Franks&quot;</bucket>
              <bucket>&quot;Brandon Bolden&quot;</bucket>
              <bucket>&quot;Orson Charles&quot;</bucket>
              <bucket>&quot;David Morgan II&quot;</bucket>
              <bucket>&quot;Marcus Johnson&quot;</bucket>
              <bucket>&quot;Brian Quick&quot;</bucket>
              <bucket>&quot;Dion Sims&quot;</bucket>
              <bucket>&quot;Roosevelt Nix&quot;</bucket>
              <bucket>&quot;Jacob Hollister&quot;</bucket>
              <bucket>&quot;De&apos;Anthony Thomas&quot;</bucket>
              <bucket>&quot;Chris Manhertz&quot;</bucket>
              <bucket>&quot;Justin Watson&quot;</bucket>
              <bucket>&quot;Jamize Olawale&quot;</bucket>
              <bucket>&quot;Ross Dwelley&quot;</bucket>
              <bucket>&quot;C.J. Prosise&quot;</bucket>
              <bucket>&quot;Malik Turner&quot;</bucket>
              <bucket>&quot;Tre Madden&quot;</bucket>
              <bucket>&quot;Nick Bellore&quot;</bucket>
              <bucket>&quot;Dwayne Allen&quot;</bucket>
              <bucket>&quot;Ameer Abdullah&quot;</bucket>
              <bucket>&quot;Marcedes Lewis&quot;</bucket>
              <bucket>&quot;Chad Beebe&quot;</bucket>
              <bucket>&quot;Roc Thomas&quot;</bucket>
              <bucket>&quot;Ricky Ortiz&quot;</bucket>
              <bucket>&quot;Taiwan Jones&quot;</bucket>
              <bucket>&quot;Joe Webb III&quot;</bucket>
              <bucket>&quot;Tyler Ervin&quot;</bucket>
              <bucket>&quot;Stevan Ridley&quot;</bucket>
              <bucket>&quot;Cole Wick&quot;</bucket>
              <bucket>&quot;Terrance Williams&quot;</bucket>
              <bucket>&quot;Sam Hubbard&quot;</bucket>
              <bucket>&quot;De&apos;Lance Turner&quot;</bucket>
              <bucket>&quot;Lamar Jackson&quot;</bucket>
              <bucket>&quot;Charcandrick West&quot;</bucket>
              <bucket>&quot;Darrell Daniels&quot;</bucket>
              <bucket>&quot;Richard Rodgers&quot;</bucket>
              <bucket>&quot;Mike Boone&quot;</bucket>
              <bucket>&quot;Benny Cunningham Jr.&quot;</bucket>
              <bucket>&quot;Bradley Sowell&quot;</bucket>
              <bucket>&quot;Damiere Byrd&quot;</bucket>
              <bucket>&quot;Derrick Willies&quot;</bucket>
              <bucket>&quot;D&apos;Onta Foreman&quot;</bucket>
              <bucket>&quot;Freddie Martino&quot;</bucket>
              <bucket>&quot;Detrez Newsome&quot;</bucket>
              <bucket>&quot;Joe Staley&quot;</bucket>
              <bucket>&quot;Keon Hatcher&quot;</bucket>
              <bucket>&quot;Isaiah Ford&quot;</bucket>
              <bucket>&quot;Khadarel Hodge&quot;</bucket>
              <bucket>&quot;Darrel Williams&quot;</bucket>
              <bucket>&quot;Marcus Kemp&quot;</bucket>
              <bucket>&quot;River Cracraft&quot;</bucket>
              <bucket>&quot;Dan Vitale&quot;</bucket>
              <bucket>&quot;Brandon Zylstra&quot;</bucket>
              <bucket>&quot;Brian Hill&quot;</bucket>
              <bucket>&quot;Khari Lee&quot;</bucket>
              <bucket>&quot;Kyle Williams&quot;</bucket>
              <bucket>&quot;Robert Turbin&quot;</bucket>
              <bucket>&quot;Ryan Hewitt&quot;</bucket>
              <bucket>&quot;Jehu Chesson&quot;</bucket>
              <bucket>&quot;Darrius Heyward-Bey&quot;</bucket>
              <bucket>&quot;Tim White&quot;</bucket>
              <bucket>&quot;Carson Wentz&quot;</bucket>
              <bucket>&quot;George Fant&quot;</bucket>
              <bucket>&quot;J.D. McKissic&quot;</bucket>
              <bucket>&quot;J.J. Jones&quot;</bucket>
              <bucket>&quot;Russell Wilson&quot;</bucket>
              <bucket>&quot;Tyrone Swoopes&quot;</bucket>
              <bucket>&quot;Michael Burton&quot;</bucket>
              <bucket>&quot;Drew Brees&quot;</bucket>
              <bucket>&quot;Jonathan Williams&quot;</bucket>
              <bucket>&quot;Mike Gillislee&quot;</bucket>
              <bucket>&quot;Sammie Coates&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:play_type:nk]'>
            <groupfilter function='member' level='[none:play_type:nk]' member='&quot;pass&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]' included-values='in-range'>
            <min>0.0020618556701030928</min>
            <max>0.89700000000000002</max>
          </filter>
          <filter class='quantitative' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>166.0</max>
          </filter>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:play_type:nk]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]' min='0.0' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]' />
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk] / [federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{C21D716D-A2FE-45B7-80C6-9D5BBF2F1C1C}' />
    </worksheet>
    <worksheet name='WR Adot'>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column caption='Jitter' datatype='integer' name='[Calculation_2499779289429909504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='QB complete' datatype='real' name='[QB_complete]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Incomplete' />
                <alias key='1.0' value='Complete' />
              </aliases>
            </column>
            <column-instance column='[QB_complete]' derivation='Attribute' name='[attr:QB_complete:qk]' pivot='key' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column-instance column='[QB_air_yards]' derivation='None' name='[none:QB_air_yards:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_complete]' derivation='None' name='[none:QB_complete:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QB_air_yards]' derivation='Sum' name='[sum:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QB_attempt]' derivation='Sum' name='[sum:QB_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2499779289429909504]' derivation='User' name='[usr:Calculation_2499779289429909504:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Flex_Years]' />
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='-15.0' function='range' level='[none:QB_air_yards:ok]' to='-1.0' />
              <groupfilter from='1.0' function='range' level='[none:QB_air_yards:ok]' to='57.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='59.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='60.0' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' direction='DESC' using='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' />
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;TE&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Flex_Years]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_2499779289429909504:qk:4]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' field-type='quantitative' max='45.936472780318404' min='2.6511635522703463' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_2499779289429909504:qk:4]' field-type='quantitative' max='250' min='15' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' value='35' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='660' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f2f9f9' />
            <format attr='fill-below' id='refline0' value='#faf5f0' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='text-format' id='refline0' value='N' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='stroke-color' id='refline6' value='#e15759' />
            <format attr='stroke-size' id='refline6' value='4' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='line-visibility' id='refline5' value='on' />
            <format attr='line-pattern-only' id='refline5' value='dashed' />
            <format attr='stroke-color' id='refline5' value='#4e79a7' />
            <format attr='stroke-size' id='refline5' value='4' />
            <format attr='text-align' id='refline4' value='center' />
            <format attr='vertical-align' id='refline4' value='top' />
            <format attr='vertical-align' id='refline5' value='top' />
            <format attr='text-align' id='refline5' value='left' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' value='Highlight WR/TE'>
              <formatted-text>
                <run>Highlight WR/TE</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_complete:ok]' />
              <tooltip column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]' />
              <tooltip column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[attr:QB_complete:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' probability='95' scope='per-cell' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' z-order='1' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' enable-instant-analytics='false' formula='average' id='refline5' label='NFL AVG: &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' z-order='3' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' enable-instant-analytics='true' formula='average' id='refline6' label='&lt;Computation&gt;: &lt;Value&gt;' label-type='custom' probability='95' scope='per-cell' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Air yards:&#9;</run>
                <run bold='true'>&lt;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Result:  &lt;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[attr:QB_complete:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='shape' value=':filled/times' />
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1090' />
                <format attr='maxwidth' value='1090' />
                <format attr='aspect' value='0' />
                <format attr='minheight' value='122' />
                <format attr='maxheight' value='122' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk] * [federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_2499779289429909504:qk:4])</rows>
        <cols>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_air_yards:qk]</cols>
      </table>
      <simple-id uuid='{4CD617CC-0281-44E0-9341-75938A858729}' />
    </worksheet>
    <worksheet name='WR Adot/Success'>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column caption='Completion %' datatype='real' name='[Calculation_904097646053883913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column caption='Total Target Volume' datatype='string' datatype-customized='true' name='[Calculation_904097646060212234]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF INT(sum([flex_target])) &gt;100 then &apos;Over 100&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 74 then &apos;75-99&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 49 then &apos;50 - 74&apos;&#13;&#10;ELSEIF INT(sum([flex_target])) &gt; 0 then &apos;&lt; 50&apos;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='QB air yards' datatype='real' name='[QB_air_yards]' role='dimension' type='ordinal' />
            <column-instance column='[QB_air_yards]' derivation='Avg' name='[avg:QB_air_yards:qk]' pivot='key' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[QB_air_yards]' derivation='None' name='[none:QB_air_yards:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904097646053883913]' derivation='User' name='[usr:Calculation_904097646053883913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904097646060212234]' derivation='User' name='[usr:Calculation_904097646060212234:nk]' pivot='key' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='1.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='2.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='3.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='4.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='5.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='6.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='7.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='8.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='9.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='10.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='11.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='12.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='13.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='14.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='15.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='16.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='17.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='18.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='19.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='20.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='21.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='22.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='23.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='24.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='25.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='26.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='27.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='28.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='29.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='30.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='31.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='32.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='33.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='34.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='35.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='36.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='37.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='38.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='39.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='40.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='41.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='42.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='43.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='44.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='45.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='46.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='47.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='48.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='49.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='50.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='51.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='52.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='53.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='54.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='55.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='56.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='57.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='59.0' />
              <groupfilter function='member' level='[none:QB_air_yards:ok]' member='60.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:flex_target:qk]' included-values='in-range'>
            <min>20.0</min>
            <max>157.0</max>
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646060212234:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_904097646060212234:nk]' member='&quot;50 - 74&quot;' />
              <groupfilter function='member' level='[usr:Calculation_904097646060212234:nk]' member='&quot;75-99&quot;' />
              <groupfilter function='member' level='[usr:Calculation_904097646060212234:nk]' member='&quot;&lt; 50&quot;' />
              <groupfilter function='member' level='[usr:Calculation_904097646060212234:nk]' member='&quot;Over 100&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:flex_target:qk]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646060212234:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' scope='cols' value='Adot' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='line-visibility' id='refline3' value='on' />
            <format attr='line-pattern-only' id='refline3' value='dotted' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#e15759' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='solid' />
            <format attr='stroke-color' id='refline2' value='#000000' />
            <format attr='stroke-color' id='refline1' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_3' value='#00000000' />
            <format attr='body-type' id='annotation_3' value='none' />
            <format attr='body-type' id='annotation_0' value='none' />
            <format attr='fill-color' id='annotation_0' value='#00000000' />
            <format attr='fill-color' id='annotation_1' value='#00000000' />
            <format attr='body-type' id='annotation_1' value='none' />
            <format attr='body-type' id='annotation_2' value='none' />
            <format attr='fill-color' id='annotation_2' value='#00000000' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' value='Highlight WR/TE/RB' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646060212234:nk]' />
              <lod column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' />
              <tooltip column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:flex_target:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='NFL Avg Adot: 10.66' label-type='custom' scope='per-table' value='10.66' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]' z-order='2' />
            <reference-line axis-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='NFL Average Completion %: 63.1%' label-type='custom' scope='per-table' value='0.63100000000000001' value-column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Flex Name:&#9;</run>
                <run bold='true'>&lt;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Targets:&#9;</run>
                <run bold='true'>&lt;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:flex_target:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Adot:&#9;</run>
                <run bold='true'>&lt;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Completion %:&#9;</run>
                <run bold='true'>&lt;[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</rows>
        <cols>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#25a103' fontsize='8' underline='true'>High Value High Efficiency</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='14.821347799526235'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.93546581108835269'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='19.595858312045372'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.88422746462811419'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#e1193e' fontsize='8' underline='true'>Low Value Low Efficiency</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.71170148018179813'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.21227314962098767'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='10.398749404878494'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.15225108662470843'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#ff5500' fontsize='8' underline='true'>High Value Low Efficiency</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='14.889231835249257'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.20788129135296729'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='20.433094752629298'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.16103480316074925'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#ff5500' fontsize='8' underline='true'>Low Value High Efficiency</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='5.113930691134243'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.95156929140442759'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='9.4358809654999085'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[avg:QB_air_yards:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.89886699218818233'>
                  <node-reference>
                    <axis>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646053883913:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{CB00BC72-E1D5-4701-AB14-05F2C8388A68}' />
    </worksheet>
    <worksheet name='WR v Blitz'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
          </datasources>
          <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
            <column caption='Blitz Reception' datatype='real' name='[Calculation_225179997269442561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF ([blitz] = 1.0, [flex_reception], 0)' />
            </column>
            <column caption='Blitz Target' datatype='real' name='[Calculation_225179997272903682]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([blitz] = 1, [flex_target],0)' />
            </column>
            <column caption='Blitz Catch Rate' datatype='real' name='[Calculation_225179997273071619]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_225179997269442561])/sum([Calculation_225179997272903682])' />
            </column>
            <column caption='Catch Rate' datatype='real' name='[Calculation_833728896273481729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_reception])/sum([flex_target])' />
            </column>
            <column aggregation='Sum' caption='Blitz' datatype='real' name='[blitz]' role='dimension' type='ordinal' />
            <column caption='Flex Attempt' datatype='real' name='[flex_attempt]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[blitz]' derivation='Sum' name='[sum:blitz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_attempt]' derivation='Sum' name='[sum:flex_attempt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_225179997273071619]' derivation='User' name='[usr:Calculation_225179997273071619:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_833728896273481729]' derivation='User' name='[usr:Calculation_833728896273481729:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:blitz:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997273071619:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:blitz:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_attempt:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</column>
            <column>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' value='155' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_833728896273481729:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_225179997273071619:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o8o9eo1g1psq913n5y1110ylllr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</rows>
        <cols>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B5D3DAAB-F0AD-47AF-95E3-72DDEBAB0C0E}' />
    </worksheet>
    <worksheet name='pass v run conv'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1st down success rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_NFL_DATA' name='federated.1s1h1w300ngmnh15mb5ik1xikni4' />
          </datasources>
          <datasource-dependencies datasource='federated.1s1h1w300ngmnh15mb5ik1xikni4'>
            <column caption='Flex_FD_Rate' datatype='real' name='[Calculation_904097642935934979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([flex_firstdown])/sum([flex_opportunities])' />
            </column>
            <column aggregation='Sum' caption='Distance' datatype='integer' name='[distance]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Down' datatype='integer' name='[down]' role='dimension' type='ordinal' />
            <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Flex Inside20' datatype='real' name='[flex_inside20]' role='dimension' type='ordinal' />
            <column caption='Flex Opportunities' datatype='real' name='[flex_opportunities]' role='measure' type='quantitative' />
            <column-instance column='[distance]' derivation='None' name='[none:distance:ok]' pivot='key' type='ordinal' />
            <column-instance column='[down]' derivation='None' name='[none:down:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_inside20]' derivation='None' name='[none:flex_inside20:ok]' pivot='key' type='ordinal' />
            <column-instance column='[play_type]' derivation='None' name='[none:play_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
            <column-instance column='[flex_opportunities]' derivation='Sum' name='[sum:flex_opportunities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904097642935934979]' derivation='User' name='[usr:Calculation_904097642935934979:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:distance:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:distance:ok]' member='1' />
              <groupfilter function='member' level='[none:distance:ok]' member='2' />
              <groupfilter function='member' level='[none:distance:ok]' member='3' />
              <groupfilter function='member' level='[none:distance:ok]' member='4' />
              <groupfilter function='member' level='[none:distance:ok]' member='5' />
              <groupfilter function='member' level='[none:distance:ok]' member='6' />
              <groupfilter function='member' level='[none:distance:ok]' member='7' />
              <groupfilter function='member' level='[none:distance:ok]' member='8' />
              <groupfilter function='member' level='[none:distance:ok]' member='9' />
              <groupfilter function='member' level='[none:distance:ok]' member='10' />
              <groupfilter function='member' level='[none:distance:ok]' member='11' />
              <groupfilter function='member' level='[none:distance:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:down:ok]'>
            <groupfilter function='member' level='[none:down:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_inside20:ok]'>
            <groupfilter function='member' level='[none:flex_inside20:ok]' member='1.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:down:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:distance:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</column>
            <column>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_inside20:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642935934979:qk]' scope='rows' value='First Down Rate' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642935934979:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]' />
              <shape column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]' />
              <tooltip column='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:flex_opportunities:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5492265224456787' />
                <format attr='line-interpolation' value='jump' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097642935934979:qk]</rows>
        <cols>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:distance:ok]</cols>
      </table>
      <simple-id uuid='{1A250A6C-1955-439A-8594-49695810D1A3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='3_years_data' name='federated.1o8o9eo1g1psq913n5y1110ylllr' />
      </datasources>
      <datasource-dependencies datasource='federated.1o8o9eo1g1psq913n5y1110ylllr'>
        <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
        <column-instance column='[QB_name]' derivation='None' name='[none:QB_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone fixed-size='160' h='97916' id='6' is-fixed='true' param='vert' type='layout-flow' w='98828' x='586' y='1042'>
              <zone h='7943' id='8' mode='dropdown' name='Air Yards Completion Rate' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' w='98828' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='25' h='4297' id='9' is-fixed='true' name='Air Yards Completion Rate' pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' type='size' w='98828' x='586' y='8985'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7943' id='11' mode='dropdown' name='Air Yards Completion Rate (2)' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' w='98828' x='586' y='13282'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='79750' id='10' name='Air Yards Completion Rate (2)' w='49200' x='50600' y='20875' />
        <zone h='79167' id='3' name='Air Yards Completion Rate' w='51245' x='-220' y='21354' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='29' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='7943' id='11' mode='dropdown' name='Air Yards Completion Rate (2)' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' w='98828' x='586' y='13282'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79750' id='10' is-fixed='true' name='Air Yards Completion Rate (2)' w='49200' x='50600' y='20875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='8' mode='dropdown' name='Air Yards Completion Rate' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79167' id='3' is-fixed='true' name='Air Yards Completion Rate' w='51245' x='-220' y='21354'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='4297' id='9' name='Air Yards Completion Rate' pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' type='size' w='98828' x='586' y='8985'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B4D0884D-6A5F-47B9-A5B7-FE9773A41AAA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='193'>
    <window class='worksheet' name='Opportunity'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' type='color' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B1B2BD9-CFFC-4002-BD02-619784BB739B}' />
    </window>
    <window class='worksheet' name='Fantasy Points'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00026D5E-2C11-4B16-8F66-BAE98025B1A4}' />
    </window>
    <window class='worksheet' name='Fantasy PPG'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Jake_Points:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB07E053-63BF-4819-A8F8-6142837026E8}' />
    </window>
    <window class='worksheet' name='FP - Offenses'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:game_play_number:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:week_number:qk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{939767AF-EDBB-4B26-9921-71DB5834599C}' />
    </window>
    <window class='worksheet' name='FP - Defenses'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:game_play_number:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:week_number:qk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83B11ED8-B706-49B9-8E27-5AD3231FA3DA}' />
    </window>
    <window class='worksheet' name='Points Per Target'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_904097646302031883:nk]' show-morefewerbutton='false' type='filter' />
            <card mode='slider' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_904097646302031883:nk]' type='color' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:play_type:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:week_number:qk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_904097646302031883:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{585628C6-12B0-45FE-AFA6-A6BEC8D5BCA7}' />
    </window>
    <window class='worksheet' maximized='true' name='Target Share'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='slider' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' type='highlighter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:play_type:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:week_number:qk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[pcto:sum:flex_target:qk:4]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_904097646302031883:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C21034B8-86AB-40CC-B89E-419F7304D2FF}' />
    </window>
    <window class='worksheet' name='FD Rate'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation_929711862986338306:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B0AE04A-F461-4093-BB0A-6B6D33E82EA4}' />
    </window>
    <window class='worksheet' name='2019 Projections'>
      <cards>
        <edge name='left'>
          <strip size='124'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qu3v6q1doqf2k14723b31e6ni5v].[none:POS:nk]</field>
            <field>[federated.0qu3v6q1doqf2k14723b31e6ni5v].[none:Player:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[attr:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEBBE455-0FEA-4B72-ADCB-BD963ABC2927}' />
    </window>
    <window class='worksheet' name='2019 Ranks'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.010e9iv0ybyi4613azm040lzf11t].[none:POS:nk]</field>
            <field>[federated.010e9iv0ybyi4613azm040lzf11t].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D8A1E70-8F85-4177-B067-AF164B28B996}' />
    </window>
    <window class='worksheet' name='Positional Scarcity'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.010e9iv0ybyi4613azm040lzf11t].[none:POS:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.010e9iv0ybyi4613azm040lzf11t].[none:POS:nk]</field>
            <field>[federated.010e9iv0ybyi4613azm040lzf11t].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF3D7B06-E825-4384-8A17-85BD518A89BA}' />
    </window>
    <window class='worksheet' name='10Zone Success'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qu3v6q1doqf2k14723b31e6ni5v].[none:Player:nk]</field>
            <field>[federated.0qu3v6q1doqf2k14723b31e6ni5v].[none:Team:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:10_zone:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_inside20:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_position:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_team:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6780FB6E-4451-40F9-BE47-F994EF8C57C7}' />
    </window>
    <window class='worksheet' name='25+ Yd Rec'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card pane-specification-id='4' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_reception:qk]' type='size' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[usr:Calculation1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16F252D5-E24A-443D-997B-BCB327572F99}' />
    </window>
    <window class='worksheet' name='Offense 25+'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='slider' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4A4444A-467F-453F-A27C-A7F2B8AA5678}' />
    </window>
    <window class='worksheet' name='Offense 25+ (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='slider' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D158DD4-FFD6-436F-A323-DC7C12CD7DFA}' />
    </window>
    <window class='worksheet' name='Defense 25+'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:flex_target:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Deep Targets]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{885C001A-0ECB-496D-98DF-8A197D6EED77}' />
    </window>
    <window class='worksheet' name='Offense v Blitz'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:blitz:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9762EE7-4307-4FD0-8C0E-02D831590713}' />
    </window>
    <window class='worksheet' name='WR v Blitz'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:blitz:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C670C4D1-8A30-4264-B99E-4096A5965A0E}' />
    </window>
    <window class='worksheet' name='QB v Blitz'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:blitz:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77A95B8B-D80A-46A1-A7FB-0C9B5E1A255F}' />
    </window>
    <window class='worksheet' name='QB v Blitz (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]' type='filter' />
            <card param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274611718:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:blitz:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:flex_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:offense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:Calculation_225179997274464261:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{012CACF4-5A0D-4CC6-A8D7-1EEBEAC0E606}' />
    </window>
    <window class='worksheet' name='QB Pocket Time'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]' type='color' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[:Measure Names]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[io:Starting QBs:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB pocket time (bin):ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_air_yards:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_pocket_time:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35017231-716D-4AAD-B3D9-39CB614983E3}' />
    </window>
    <window class='worksheet' name='Air Yards Completion Rate'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='checkdropdown' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[io:Starting QBs:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB pocket time (bin):ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_air_yards:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_pocket_time:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE774879-2514-454B-904B-3F14157A9A2B}' />
    </window>
    <window class='worksheet' name='Air Yards Completion Rate (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='dropdown' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1o8o9eo1g1psq913n5y1110ylllr].[sum:QB_attempt:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[Starting QBs]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[io:Starting QBs:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB air yards (bin):ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB pocket time (bin):ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_air_yards:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_name:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:QB_pocket_time:ok]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:defense:nk]</field>
            <field>[federated.1o8o9eo1g1psq913n5y1110ylllr].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73399946-999E-42AD-B877-4FC8F0CE0A57}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Air Yards Completion Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Air Yards Completion Rate (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F6CEFA97-9C45-4510-AB12-658A101C08B1}' />
    </window>
    <window class='worksheet' name='Historic P/Format'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='slider' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[:Measure Names]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DED3297-DFE3-418C-BA00-15DF0A02A703}' />
    </window>
    <window class='worksheet' name='3d pass conv'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:airyards_from_chains (copy):ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:distance:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:down:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{689937F0-1ACD-4502-8C9E-B5D0F5295363}' />
    </window>
    <window class='worksheet' name='pass v run conv'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:down:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:airyards_from_chains (copy):ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:distance:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:down:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_inside20:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{585F0A92-6A56-434A-9149-0E4129C9A723}' />
    </window>
    <window class='worksheet' name='QB Adot SB'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Set 1]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[attr:QB_attempt:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[io:Set 1:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:ID:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:away_team:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:day_of_week:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:roof:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:qk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:year:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[usr:Calculation_904097643511549956:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0E67E79-FCC4-40FD-BA8B-D49F9D17BF2E}' />
    </window>
    <window class='worksheet' name='QB Adot'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='slider' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]' type='filter' />
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]' type='highlighter' />
            <card pane-specification-id='3' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_complete:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Set 1]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[attr:QB_attempt:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[io:Set 1:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_complete:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:ID:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:away_team:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:day_of_week:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:roof:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:qk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:year:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[usr:Calculation_904097643511549956:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2A70103-BCE3-451B-B8E4-687C00A9B008}' />
    </window>
    <window class='worksheet' name='WR Adot'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_complete:ok]' type='color' />
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Flex_Years]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Set 1]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[attr:QB_attempt:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[io:Set 1:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_complete:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:ID:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:away_team:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:day_of_week:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:roof:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:qk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:year:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[usr:Calculation_904097643511549956:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F17D950-C921-4AC4-A147-120154B4C698}' />
    </window>
    <window class='worksheet' name='WR Adot/Success'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:flex_target:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]' type='filter' />
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646060212234:nk]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]' type='highlighter' />
            <card pane-specification-id='3' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646060212234:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[Set 1]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[attr:QB_attempt:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[io:Set 1:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_air_yards:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:QB_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[sum:QB_attempt:qk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[usr:Calculation_904097646060212234:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:ID:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:away_team:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:day_of_week:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:roof:nk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:week_number:qk]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[none:year:ok]</field>
            <field>[federated.1yq3jw10tjf2qa1fuba1i0xnlff2].[usr:Calculation_904097643511549956:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE692EC3-DBCD-4123-93D2-CAF2721731B4}' />
    </window>
    <window class='worksheet' name='Sheet 30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_name:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:flex_position:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:play_type:nk]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:touchdown:ok]</field>
            <field>[federated.1s1h1w300ngmnh15mb5ik1xikni4].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A15D0EA6-B5F8-490D-88BE-0C4BCE56F3D3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='10Zone Success' width='192'>
      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
      PQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2019 Projections' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='2019 Ranks' width='192'>
      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
      eh5NDdlU2MIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='25+ Yd Rec' width='192'>
      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
      2LEIgiD8/+qpcUIKoqEsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3d pass conv' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Air Yards Completion Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Air Yards Completion Rate (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Defense 25+' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FD Rate' width='192'>
      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
      lzD4PxqV4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FP - Defenses' width='192'>
      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
      GYAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='FP - Offenses' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9aXMcWZYldt7mWyxAYCfAfa1iVmbWll1dU1kzPdOjljT9RfqhsjYbk0Y2
      YzOSulXqqa6syj3JJJlkcgOIPXbf3qYPzyOwhAMECIJJJuKUMa1IPgY8Ivw+v+/ec84l1lqL
      McY4o6A/9AWMMcYPiXEAjHGmMQ6AMd4pWKPx9ed/xpd3HsBoiU8/+SPWVl/gy28fvtLrkfEZ
      YIx3Cct3/4SH2TT8ja9gJhbxx0++QENIXP/VvwZLtsBrs8jbq8gQ4tykh60YuLY4iW8fPsXt
      X/wG85PRntcbPwHGeKeQJynCagWV0IdfbeD6zZ/g/IUlXJjU+PzuC3S7XaysbaG98Ry5zNFu
      NvFP/+8/wRKLdrs38nr8B3gPY4zxyrj0/kd49of/jr5o4K8vzoJaC09XMTV/DTcuvsBUo4Ga
      T8EIEEY+BI3xq19/hCerTUzUwpHXe+0p0ODlCCGv82XHGONUcCop0PhYMca7gvEZYIwzjXEA
      jHGmMQ6AMc40xgEwxpnGOADGONN4I30AYy2MBSgB6Lg8OsZbhFMPgFaq8O1Ggk6mUfEYbk4H
      mK2I0/6xY4xxJJxqACTS4F+e99CKJbSx2CYErUTh95frqPvsNH/0GGMcCad6BtiMJbqpQiY1
      +qlEJhXiXGO1m5/mjx1jjCPjWAFgVI4vPvkD1rsSa8tP8PXX36DX6+DTTz/FvYdPR9cXDWFr
      bfELsAD0uFE8xluCY6VAhAlcXJxDX1msPHmCsFrH8yfLuHTrPWw+fwxjDIwxsNbCGINJnyAS
      DEpbMEbBKEEgKGZCCqXUab2nNwpj3SF/fMB/N3HMM4CFVhpKKYSVGi4sLeDJ42Vsb20jyxUo
      pSCEwFoLSinqzOJXS1V8sx6jl2uEguLWTIiZivfOk+WstWhnGnc3ErRThVC4A/5CVbzz7+0s
      4VhsUJWnePLkGSACXFqcxfMXm7h48Tw2XjxDZWoe1cAbpjuU7mRX2lhIY8EpAac/jpsjUwb/
      +LiDZizdE44SRD7D7y/V0QjHLPN3BadCh94fAMfBu9IzWOnm+OcnHcSZO+QLRhEFHO/NV/De
      XPTyFxjjrcBbtVW1U4W7Rc8g8hhuvcU9g93bxu49ZMwEf7fw1gRAqlzPoFn0DOigZ3Cphong
      rbnMIaYjjqrPoY1Lfygl8DnDudrbGbBjlOOtubM2Y4VO0TPIpIbHXdVotSffygDwGcFHSxV8
      s+6eWCGnuDETYGqc/79TOPVvS2qL550M7VSj6jNcqHvw+ej5wBS5g7XY0zMwb2lKQQjBdCTw
      u4scqngK/FgO+GcJpxoAylj8eaWH5XY2TBWedwR+e742EgTTIUfkDXoGZNgzmK++3SkFo+5a
      x3g3capUiK1Y4UUnR5o7KkSSKWz2JFa6cmRtJCh+tVjFXM1DPRSYqXr4+bkKGsGb5QxZayG1
      RS/XyJQZ65t/5DjVJ0AsNbS1UMZAKg1CCIy1iKUeWUsIwXxVYCaq/2A9A2stVnsSX6/H6Oca
      PqO4MRPiWsMfN7d+pDjVAJgIOASjEIyCeBycUXBKMXnIofaHTCliafDpSh/dVEJqi5gSfL1q
      UPcZ5k5YjrXWItMWiTTwOEHE6Tio3gKcagBMBgw3pgM82AKUNmCU4FLD0QXeJKy16GTa9RcE
      QyNkpU22ZqKQSI1MGmS5ghAMnBGs9+SJA2C5K/HVat89WTjF9ekQt2aCt7rZdxZwqgFACcHt
      2RBLdQ/dQhAzGZTffKcFay2+3UxxfzOBLILwwqSPny9URlIsRgkIii40JaAEIDh5KtbLNf78
      vIutbuYCi1PEuUbdZ1iqeyd67ePAWotEWfRzV2auefTMB+Cpl0EJIZgM+KFpz2minWnc30zQ
      TxWk1mCU4kkTmK8IXJjw96ydjjgakYC2O+zVis+weMKbdKMv0UkkOv0U/X4G3xeglGK5k72x
      ALDW4mk7xzfrMVJpwCnBxYaP9+eiM13F+tF3bdqpRq4NpNZIcwWPM3icopVqXJjYu9ZjFH91
      vor7mymaqULFo7gxFZ5YvSaNhTEWWltIrcENgzEG8g02OWJp8NVajG4ih0/Ch1sWUyHHxX0b
      wVnCjz4AIkHBCAGjFIIzcEZBKUEkyivAVY/hF+ciWAAEr8fjtBFw+B6D7zEo5cEXHL7HMR29
      nrOQsRbauNTtoN28nWmkUkMqg6RIwzij2IrVmQ6AY/UBrDV48M3naMUK1lp8+elnUDrHN199
      gacrG6d1jQdcy9Hq9VMhx+KEB18wBB6HJximInFo6kEIASXktVVpJgKGsPj5Yegh8AU8zjAd
      nXz/aWcaf3rew3971MIfnnax3MlLPwuvaC5SSsAZBSu0Gz4/+Xu01qKVKjxpZVjrSai3tX1f
      gmN9A9Zo1CseepmBbD5HN5HYXF3BzOVbaC4/hj03s0cVdppY7SvcWU/Ql66qcnM6xKUJgf1f
      p7VAxClA3I1NCEHAKag10G9Im7kdKyhji4CyGMTVRk9iyn/1XqQ0Fp8872GrP9AkSLQShd9d
      rI40EOsewXxFYMXY4ikI1HyG81UOrUf7MkeFBfComePuRoJcGzBCsFDz8Ktz4TtBDTlWAFAm
      4AsBCWB1fQNxZwvbrRD1YBraGADF7knpUA+QSIOHzdRxgTyKq1MBat7JcupervHZiz66qYIq
      6vVfSYOaVxuhTzcThYfbKeJUIZMKgjOsEGC1PnoIPi1k2iKTGkkmkaQS1likPkeqzCvrJgCg
      FUu0Uz0kEArmqjorXTmSXlEAv1qqYqadYTtWCAXFlYZ/4u+im2nc20zQzxSkckWGFWsxV+G4
      NhWc6LXfBI4VACpPsLzVg+09x3s//wjntzZRn27g+/v3MTO/tCdlIIRAaotPVvpY7+aO4kwJ
      NmKFjy/WER6Qgx8FzVQjkQZJppBkEr7gYMVrz1X3pjad3CDOFDr9DHGSIfAFGCFopRoXJ8t3
      KG0scu260YKdfBdzMtEdsZCxh89RsNaim5tCaknRCHhpbm93/RfWYvfzrOx1fU5wczoEpk/8
      loboS4NcGyhlkOZugxGcop3pd6LRd6wA4F6I9z74xfD3jZkZAMD1Wz8tXb8RS2z2cqS5Qq4M
      BKNoEWC5m+N6ye7QzzXub6VopQpVzzXRysqnBHAfeKaQZgrWAIHHUfZ566L6orSGUgaSaUfN
      KMlTrbVY6yt8sxajm2sEnOLmTIArkyejQjBC4HGKwBPQxsL3OHzOSlMEay3ub6X4dsP1LSgh
      OD/h45eLo32LqZCj5vOhJJNSAk8wnKu9ud5CKFx3nzECjzOw4ilUOeGT5biw1iJV7kzoMYK6
      z470nZ1qFSjXFgauC5xJBYAjsBa5NiVrnSBmsy+hjcslt2KFjy/VUN33YRLi9j0L9x9b/K/s
      7QpGIDiFJxiUx+F5jp7hsdEnUKIs/rLSQ7OfI5canFEkUqPmsRMp0xohRzVw4pnAd7t56HPM
      V0dv1G5ucG9jb0rxrGUxXxW4NLk3ZfM5xa8L04F2qhFwghvTIWZew+H6qBg08x5JA2tdFarq
      M1w6IL3MtcGTVo6tWCIUFJcbAereyWgh1tphpz0pehzvzUe4egQO1+lygXwGWLcLWwto4z6k
      sl19o6/QjKV7WkgNwV0Er3Rz99jeBW0Azgh8waC1gSc4BGMoiSs0Ao5KwKFNgNAX4IyiEojS
      m2QrlmjHEq1uijjJEfhuzWpPnigAIkHxy8UKvl5z7hg+c1SIucroNXQyV9WKU4l+mrv0jvlo
      JmokAAD3FPjr8zXERTEgKNFanCasdYfx3QmYsYAuKYJoY/HZixjPWimUtqAUWOnk+PhSHbUT
      9FpSZfHVah+tREIq1+P4Zi3GTMRfKqY61QDY/yEMYrGsTKaMe1pobZAr7XZ56/QB+zERMPic
      IQpEUdt3KUaZG0PVo/hgoYK76/GQiHZ1KijVGaTKsVbz3KVWACBDjaSEvQrsPHZjaeBzgoo4
      eCebrwhMX55Apg0EJfBYeZmVU0BqFwBxnEN7ZvjUKMNmLPH1WoJOphBwiuvTJ0/ZjoN25pz+
      pDLIpAZnBP2c4nErw8/2mQO0M42VToY018O1APCkleFn869uJNDNNWJpXI8jU8MnfivVP2wA
      dDMNELi8UBkwRkFI8ef7MBnsf1q4gJgsuaknfIafzIb4diNBzgw4I7h8AMmOEIJLEx7mK2K4
      Sx50o3qMgjEKzhmEYAUZrjxdGlAL7qzHSJS7qa9OBfjpbFjKryGEQDBAsMN3Om0AqTTSTCJJ
      cxhrIaUu3TRSZfCX5WLn0wZ9QhDnGlWvnL0qtcXTdobtxB2uL0/6I+nlcZErUzh5WChtQAh1
      zFdVnuYOjMR21gJp2aP7GBCUgBUuIrygsNAj9jhONQAqHgMjBIJRwOfgjIARUvqh59pidxJP
      il/5AbX6qsccea144zWf4aCyMyEEoSAvrTxNhU7onobO3Mr3GCKfY64ksPrS4MvVPnqpGlIL
      7m1YNEKOxRMcQmOpnbME2es2Eeejm0YzUejlTkc9qMBQSvCim48EgDYWn77o4VkrgypMB5bb
      OT6+VDvRgbUeMAScIWcGKJ5UnBLMlHS56z5HKChySV+69jiYCBiWJnw82dXjmKuKI73uqQbA
      dMhxYdLH0xbgFTfJfN0rdU7oS7cLcEbdDVU8LXolX3xfGnz+wvH2lbbIqcHXazEm/PLD6m4u
      vs8JwgO4+D4nQ/2C9Rg4P5g20UoVMmWQF+U/r6AWbMbqRAHgF6/jCw4ZePCLc0uZjto9adz7
      IIQU1I1yP6VWqrFSqPPy4nBNADxt5/jp7Oj83KMi5BQfLET4es2lmIwSXJz0cb6k0x5ygvfn
      R9deOCEhkBKCny9U0Ag4NovD9a2ZozXiTjUAGCW42giw3pdI4SoyVxtBaUpR9airu3MKwIln
      GKGlRLTtAW8/10hyBX/A2++PHlattXjWyR0XP9PwBcWtmQg3S7j4W7FCKjUAUojxCbQBVrty
      5OAuGC2afih2HVf+807YN5gOOSKfo+e5qpFXUCgWSoKqETLUfIYkVzs0B0pLaR6ZNq4kbCyk
      MgB3qUhSkqocB4QQnK97mInEsATpnsblaeBR1x4XghFcnw5wffp4zbdTnw/w55UeeqkqPniC
      z1b6qF5mIzf2VMhxZSrA99spFHd17cW6V1rTZoRAGYs0V8gyCWstgiIl2o9OpvGnZ11sd9OC
      i88Q5xq1Ei6+NhbaWmTSNdiMsQgEK82/p0OXGq0aC8FcRaMe8BPvZgBAKeB7DNZaCF7+vo6L
      us8QCAqpKAjZST+mX4ONy1FTzOOufRM41QDYPR9gj9dPN0fd3/vYpYTg/bkI56peMU2GYq4i
      Sh9jgpEdy3Vg2F0VJWtXexK9RKLbz9DrpwgDD5xTPC/h4geCDndJ95pu1ywrLXJK8NFSFY+i
      FM1EoSIYrk4FJ24AtVLtSoQFb4lSAgtXot2fVjQTjW6mHdXaWFDi9NfLnXzEn6giKN6bi3Bn
      PUGqXK38wkR5qnKWcKoBcNz5AIw6YfzLrFAS6TqkFoCUGpy5x2giRx/nZk+QuOuALfcbSpV1
      1GlCQEBAiTsDpAekCQGnuD37en1ABdu58UWxYZBBIaHkvQ0JEcP3ueOxtBuEEFye9DFXEcMu
      d/01pR/HgbUWfWnQyVw/ZDI4+Al3nLWvilMNgJlot9fPznyAk3r9MEogCypELhUoJcilh5J7
      BHMVD5HPkUU+OGPwBEPoc5wr6cKygk8f+I5WMdAPvEnF1NSu1Mqdg1yeXJZaNUKOqseLppIL
      XJ/TA6kQpKAoHOUpNSgc9HMDjxFUXoN80lqLx60M36zFSIuG1VLdxy/OVUY4V25tjm/W+0iL
      A/Ni3ccvS9aeBKcaAAOvny9W++gVu87P5qMTe/1I7RpWWVErB4Bc6dKS6VTIcG06xD1tIAo1
      2OJEgAsTozfJdMQxETq+zuDGr3gMi2/Q75NTgl8vVvEwSLGdKEQexbVGUNopDTjFr5YqI42w
      2RNSIRy1IMcXL/roZRqCEVybDvGzE8onY2nwzXqCbuq4YYwSPDUWMxWOq41gZO2d9RjdZGft
      M2MxE71elumpBEC32x3WsFs9iW4nRpwbKE7Q9iVq1huqrSYmJg5/sRLEBe9EG4M8l/AEh7Wu
      I7sfmbbYShQYpfCEBacUvVyjk2s09lV2PEbxm/NVfLuZoJW6vP7GdHBoN1Eb+9qtEUNBj9wZ
      nYkEfn+JQxpb9FxOfg19afCnZ11sdVKkuXKcqELEf6Xx6jdftxAvST1gjlIITrEdK1xt7F3b
      y43rzO9ayznFdqJw7YTvbzeOHQBK5iBMAEahF6eo12pI4h6EH0Jwt0ulaQqtNXq5xh+fdtHP
      1PAm6fX7wFIN0xEfCYBEGjxq7rBBrx6w84WcDgOMFz/TWvfn+7EVK3RThTiTQ+o0pQSrXTkS
      AIATifx6sQJjD66pu59nsZ2oEXPcC/Xy6TepMnjUzNBMJCLh3tvEa3K9e91eSut9iW6i0O1n
      6PbTYS/ieTs/UQD4jIJR7DrfuLSqrCLkc7ehsH1rD5KyviqOFQBG5fjqz3/A7E8+hpeuo99v
      YeW5QGYtiAU+/NlPAACzs7Og1PFBwm6AvJ9DpRLC44iqPvhEFYv7mi9SW/xpubdHO7Dek/jd
      pfrIm3YfSkG9pY6+MDgw7ocyFrksuDVJDu272ro8oP1+VA+hTFt8stxHK5ZQ2qBLCXq5RkXQ
      ETGKNhZ/Xu7hRWfw3oC1nsTvD+jCHlUPcNy1R8XgDD0oHsAO2LcnU9BNBAwLVQ/f564RNzgT
      Xi4h+dV9hvMTHh5r4/oshKAW8FJC4ElwPEUY93Dl4gX0ANTrNaxuNDFVE5ifP4+NZ9+PDMnT
      WiOXBmkmkWYSFhaB5NDajAzJW+srbPb3aQcAPGuluNbYm68r7chynuAQnMMrdvWy17XGOLK0
      3VUtKX6NrAVwfyvDvc0UuXJ06IuTPj6cC0Zuqo2eQjuR2O4k6CcZAk9gaiLEcifDhLd37Was
      sNaTSKVCLh13iYDgSSvFzam9X6gF8N12hvtb2VAPsFQX+HB+tLNpATxsZri3ubN2sS7w85K1
      x8F0QFENisIBpxCMIfIFFqriRMMNlRlNU7Wx6GUSPh0Nrp/N+JjwKZa7CjWP4nrDQ0BHv7eT
      YE8A5HkOzvmBMj2VJ3j0+CmyKsFq/AJ+bQphtYKHd75CUJ0cGZJHqdojUiGDtj0l4Hxv7Gmr
      YYw7zCaZghGFi4LFyFpKFUBcB9b3uKNOg5S+LmUagrt1AzGKJxgYpSNrm4mbULPdTZFlzhlO
      KoP5qjey8xho9JIczU6MXj9B4Lv+gjSVkddVGGwKThtBCXUkNzP63jqZxoOtbI8e4HnbYqHm
      j1xDJ9O4v2/tcrG2bFc9KiaYxfvnKvjUWPi5q4RdnApxdepkgdXsO82yKooYllFkyuBFX2O+
      NppabfUkHmxmaKcSW5xCMIL35qLXWrrd8+n/wz/8Az7++GMsLS2VL/ZC/PJ3f1v87vrwz6dn
      50vXU+JUQqHvUoLA4/BFeUpR85m7KZST11FKoI0tpULwYhpL6AvYXa9b1ghrBByhYFChh8Dj
      xWO33JFhM5bop3ubZoJTrPbykZvPUacN0jRHv584XrwySEsO4pMBg88pJN/pwgpGS8lanazw
      MdonMSzTA3QzjbzQDvTiHL6/ox04SQAY64T8ADDYwbqZRqrMgezRwSDEww7igz1+sBEMzkpl
      PZlYavzzkw42OwmSzB3E40wjFKxUTXi892fRTjUSZUZToH/8x3/EzZs3cfv2bUTRyZo8MxFH
      ICh6jIIzt+t6vLwPkCnXdU0zhX6SwRgBHXpIVQkNIXIKK2OBMHDd4soBCquqR/H+EfUAO22l
      Xb/f/4e7MPgCbSFNO2hfqgiKW7MhvnwRA8Qd7JYmykmBoaDDQ+3Qx4gQRN7oU1kwgjTXaPdS
      9OMMXs7hcVq6ERwHzVThaTN1wqBUwhMMxlh838zwfkl1aitR+HotRjtVzvd0KihVY034DB4n
      e9JRAKUExrWeRLfYjDq9BL7nDuJPW9mJAkAbi6/WYzxuOlHOngBYWlqCUgq9Xg8PHjzAhx9+
      +Mo/aIDBDpVmEtpwRLsqL1pr3Lt3D4ATRTx82sbqRhvdXoIo8tGZmUDUm4CcDcEYw61btwC4
      as+vlqr4Zm1n/vDN6RBT4ejudBw9wHQkiqaZ53QAgiEKyunQkXCs0TDwoE2EwPcgRHmTSVtH
      qBt0ogc7bCxHd9RGwDBXFXiSa9DCnyjyGC7UR3f0VDrxUJrm6McptPaQVQL0DxDwHBXdwkQr
      TiW6vQSBL+ALjlY6mntnyuDT5R6248JxjhB8mTsqy8K+DUkZW7rb5yck5B0Ha32JR1spklyN
      BsDHH3/8Wn/Ys3aObuKaVf1+Bh166PsC3zdTTIVVMMZw+/Ztt3g9xp14BehxyKQD61fgTy1g
      6eo53L5Q3/O6hDgS15VGgM1YFtWFgwdUH5WA1QgYrkyFUNoWMkuK+VqA8yU3HwBEgUC9FoJS
      isAXqIZeqTB/O1HY6Du554CQRwnBsxIqsjIWvcxxp9JMQnCGzGeIlRm5/liagmSokSQZKKXQ
      xiDOT3ZDDXUWlAwrbZSiNP9vpa5iNtQkFM57L7pyJAC6uYYseE7ATom5mYwG1nxVoBYIZBUf
      vHgSRoHAxUNSO1OYpdFD0rBmoqCMo7HnUo2mQI/ufI6vnjZx/cIc3nvvvUM+ppcjLw47cZKh
      249hrEWtEiAvSWsSqSFzt5vFcQrPE5C5GgpBdj8tjAXubiRY6eyMXpqOBN5fiCAK7ky1Wj3S
      NRJCMFO4W0htsdWJoWUOqzWMpejGFq0+H/rnBIF7/NZ9htBjaNQCVEMPjFGEPi+VZebaKaAG
      pVjf5xCclpoDrPckNro5uv0M/SSD7wkwRvCkmWI63PueBmkRK55Eg2LASWvljYC7m694Cgnh
      qkBlaaNz0Ebhqk2GuoSyLGzYB2DOvYIf0geIBMO/ulTHp8sU7VTC425YydVGeQC0UoWv11wD
      0+dOHzBT9Jp2IxTuZ7prpKMB0Ot1sfzoDrJcnjgAaoU1BaUUnicKywyUNrcIIfA8jigKUK2G
      qFQCeL4Y7hK7nxYbfYn76GC67qofnFEEPkd9qYorjQDWWvR6vSNdo7UWKysrAFwD6OFyD904
      HxrpViMPlSzCtakAhBBcuXIFgAuAW7Mh7m04agYt2JVlYhhOsYtlCmhth4G7H7E0UNrtTgOa
      h1Qe+iW7OiUEkc9RiXxH3fYFolCUEueOg4pH0QgFukXKM0gH9+/ogDM4aETczX8oziu+YKUs
      04mA4fyEjyfaDk286gE/8MA+XxX4uxuTQ8lpmSgIcBvtX1b62OzlRZWN4M/G4t9cnkAk9n7G
      cxUBVjBsgZI+wI2fvg8WNVCfnjv0QzoqIp+jWglAQBCGAlEgStOE+aqHyXqIhfkGatUQQeBj
      aiLCuZL0I5ZmOHopV+4JYYwd3iSEENRqtSNfY73uUizayjChWtDtBChcIer1EDNLdVw9V9nz
      bwghuD4VwFp3fpmtCLw3V14mVMalFZy5Uu2AGKhLEuKqzwqKAEPgeUWvg6Fe0jWuCIrI55iZ
      rKAa+RCMohp6qJ7AbhFwZ4BWqoZ0FUIIjLFY7uS4sU9wIpijhd/dSNBMdvhIZeNiB8qtmUgU
      tigMlya8Q8l5jJZLaHejnWq0E+cmMqBu9DnFViwR7bNn2U5c7q9UIczf/2Kff/YpwolppGl2
      6A89CgJO4QuGesUf1uIDj5c+8haqAj9dqIEzOtx9L06HpbtDzXclz8HoJVZ0g18HtcDuoRhj
      TwXIWgsp3YA/C+CL1RhPmimktmj3E7TjFL85Xx1WYTzPKz4Hd61RIAqXagqPs1KdwUzEUfE5
      ursVYQeYXU0EDJcaAR5bIBBODzwViQPdnq11pcpUWQhKEPByZ4q+dBwcXcx2A1x+3cnKG1BV
      z9FHtC2GixxSp+fU0bKPUqaV2uBx4SEUCIork36p4RUhRbWW7P5NuTteO9WIM4l2L0WS5qMB
      QIzEyosXaGiGG1cuvPQiD8Nk4Dq0AIYaVEJQysFhlOCj81Us1j20U4Wqz7BUK58pPBkw3JgJ
      8WAzGdaeL0z6J3ZE45QULtICZuDgJtjwQGWtxZMnTwC4w99AaZakOTzB0agFsK0qLhZMU1P4
      pWpjka3H2O7t0DyUz5CQKu5tufc3OIe0M41Ws4O4kyBOJZRg8G2KZ6sKrLhppqedtyElBB/O
      R5irCDQThUg4OeRB3kCrPTn0JvKY82ktG9NUKfLkQapGtXN+OGwnJoTgKEbT2lisdHNsJQoh
      p7gw4ZeeWZyIv49Hm8lQw/y8neFfX54Y6Q1NFGcvqVyTkVGgFvBS76fBWawXZ0iSbDQAGCXo
      tFvwKic3kGwWUkiyKyKtdY+hssMip6Ro9hy+O1BC8NPZEOdqbvRSJCimwsP5Ms6/5yVl0NA1
      zRKPAcRzDnKCYr6oU1NKcePGDQDA41YKr7sJmW6jH/cBFoDVG5g8N4MbS9UhHWSAq9ctnrYy
      d6N6DJcn937xGxvOXn67l6MXJ+jHCfpFc0swYKPLsVQZvVEYdTrblym7Emnw2Ys+OkPzKIq7
      ymAiYCPnlmHA73YftSjVch8Hxlp8uRbj0XY6zNWftDJ8fKmGSOy9qVupwuPtBM1uijjNITiD
      MgEebqf4xb50VDCCXy9V8elKH1uxOzD/1VIVfkklaGCJaQrazMhdOD0zizuPXyBNkxO9WQDI
      lfsIKdnJJS1Q6hlzXFBCMBXy0lxzN6y1eNJ2ovi4GFB3YyY80L/HwXF1Sg8rBbqZRjfO0G73
      sb3dgZQStWqIVuJSJEII2C4PIA0DyhgIG9BE6J6/X1hYAAAkfop614OkMeBl7hwyEaExXcfC
      wtHPNfvRShX6uUY3zodd4wYJsN6TIwHQSTUsbEGJ0aDUnV1cH2B0c5La4OF2hgrGr7oAACAA
      SURBVO1EIuAU16ZC1P3RTaaTaTxtZUP3P1YE1ONWjtv7ysGdTCPLDZJMOkaqJxD4orRkOiAw
      xlLDWEBpi3amndfUPohdBErO2GgAbHVzLM5NIZYnPwNMhgweo5CcAXCHQMFcnvqm0M40PnnW
      QbPrPnhPsCG3fb89+laihsE5kBVqY7FW4jZhzCDXdeQsUzzpyho92lj8ZaWP5bbz5GGEYLmw
      BNz/+I8Egy8YolAABENXiKo/oH1btNvtI7//iYmJ4caTZAqtboJeP3McKkah7WhnlzNSVKuM
      +0XdIbjsgK+Nxf/3tIun2wkyqcApxeNmir+9Njmio0iVgSqqYbkyEHDugWWeRz6joIyAczos
      BHDmzi37kSqLL144g7ABjebL1T6mQj6SLnmssL4RHJ7v7Q0AJTP87MOfY+PFU9Bw6iif76GY
      KJwXHm5pGOrGFM1UxIkVS8fBWk+inzp79F5ciOIZxUonHwmAwferjRmOdbW2/FDXCDlCn6Na
      iaCnDaIoQBgITJe09Zupwotdnjy82PmetTPcmtm7801HHPM1D8a6MwhnFBPR3lkGcRwP/3+m
      DL4fpFaC4vLkXp3BoG/RizPEcYx+r49eP4H0PEQ+Ra/vI033fh9EaWRpik63j36cwxMMghgw
      4yFN3bX7vqM6rPUlnhe0iX6SFeIk4N5mgr86v/eJVfUYfE6Q7uL4c0pK0+HpiGOm6kEpA1+4
      z6EWerg0OUqDGFgjZkX32uNO+tpM1EgAGFs0+Ar3uD0/+fHdzxEt3sZfPv0cJJjA+b//u5Ef
      dhxIYxEJimtTQeFaQBB4FLm2CA/YTbaLXVhbxxE5aVNnIMTHgBJtd+W1+zAZMCcqH+SJhTtE
      2aM0FBTVyMfkRAWcMwSBQL1a7gqRKlvM8TLI5U5VpUxsz4grhVLiPH4YpYXp7c45anFxEYD7
      vP74vIctmkEHFl0CPNYcv5+pDw+sjx49AgA8b2bobLXRb/fR6/ShAx89mmJFJFhhe2/UtZ7E
      yvMmVre66PUS+L5A3qvhHjoIEpd/D/oh/Vw79+9cod9PYQIPMvJK7S8jQVH3OdqxHP4ZASm1
      tPQ5xUdLVXzBKNqpgsdcebWMP8UpgbEWWa6QpBJaGFRDr7Qb7M5mdqh52BMA0zMz+K//9P9g
      ptFARioj//g46Ha7eLbRhK3MFNWBwsMe7kPbXwrVxuJxM0MndQKTrVjhKxD8u2sTIwek42C+
      KlDxOfKK7zTBBb+nrGLUzcweFRgpusrdTAP70u9UGfgew/RkBYEvEPgcUSBKb+oJ37kZ7HbJ
      IASl55d2pvG85Ro6SjstQztxtIn9WtjtRGGtWzxZBmazhOBpOxu6VVy9ehUAUO1LLGMLJujA
      qzly2dxMHe9dbeDqwt7vWm4mqHZCRLqFnPQQhj4qU5Oozk3h6j7tYt3fGTwoBB+eb8ocwHu5
      QStVOyRDuI1huZPj5syoO910JPBvLteRawtGDz6EU+LStTiV6McZlMehauVnPOdKYp12RO/r
      AzQWr+E//A8zSHKNRqMx8o+NyvH5J/+Mc7d/h3TtAZqdPi5cvoLHj58iqk3ivVtXh2ufP3+O
      7W4MpBbUC7G9uYEs7qFajZBUfHQjgSzLYK3FxMQEHjx+BhVNY3XlBfxKDXkwhZ6meDjp4/2F
      Vw/GyYDhvYUKvnphEXjORv3qdFhaNRlQExhzJquckgP9SWs+g2AUgVd4nlLHwiz74gevM3z6
      2J0/349ebqCMgdLOoEtYBo/b0h1VmsLqxdihzsBaW0o1GfQmdguCAJTukpQ4esXOL6e+YyU3
      VN13jF/f49DaEQJ9wTBVkubGUkMW02SyXMEKBi3cAfYgUILCSfvAJW5QotSIkxzdXgwZeMhk
      BZ1MjTxdrHXGarQYGjhylY/vfYOpG78oLSlS7uHqxSX0jEVuGT744Cb+/N/v4OZHv8TGs8dD
      RRgAPH36FJnSmJ1cwKNvv0ZYm8DW2go4O4/YZPjw5of4/PPPsb29jcXFRSxevII//OkvyKUj
      KmlTQd8wbMWyVAFk4W6WvjQIOEHdKzfHHaRVlFII7sqG3UwjzhXCfQeqmnA267KYTcCo8+ls
      +HTkGiocuD7l4bttQGp3cyzWBeaj0bWbfaeJHvREKCWABdZ7OWbDvbtawNxhkzMCT/ChLrYi
      yMjrVjmGbm8YuL0xikYweg0bvdy5aRSpCgBIrbHek7jR2Lt2wnP59tRkFZ4n4HscE9UAMxEf
      vu729rZ7b7FCvxvD5jmslIBlyGOFxys5KnLvE6uXafRaPbT6GdKC428qPjI/wvq6O9c0Go1h
      9ShRBg+2c2wXHeYrkx7mS2Yq5AObzIJHZq1FVjwV938OlDgT5sJJdTQAfF/gv/7H/w3nLt/C
      v//9R3v+zmiJ7WYLiZwEUxmefP8Uc+cXsPz0GUwx8I0QgjzP8fOf/xzwq/juxRaCKML80iWo
      PEUURZiZmQBjDEIIzM7Oolqt4u6332Bq9hw2NzbhBRGSgo3o81Hl1mCM0L3NBHnhcnapEeCD
      +VHbjq2exHpPIivkiIJTtBKC1b7CjX2DNyaYxYcLFWd5Lp0fzpWpAIsTfunj9PZcBUv1wIni
      BcX0Ab0Iwe0wtRqkCwNF2/73NsWcw9zD7RSCWzACzNY8XGoEw8PzALXier9ZjxFLx5e53Ahw
      YXK0uUWpQj/J0Wz30Gx2kOcS9WoIa+3INcxWGd47V8FdSjBZc3LQcxMBbs1G4EWTbfgUsQZK
      Ssg8h5IKxGrIHIARe/ogg3+jlIKWClpJEMugJIUxerg2zx3/SRvgX553sdbNCzdr4MU2w28v
      1IaH5iiKinKzdmeALB8GtzamsLrf+94GDdnB1NCRAPD8EFPnLuHCXH3/XwEA6vOXUGcck0s/
      QTdO0Zioo9tuwot21lNKMTMzg26uUZ9sIKxOQBuLaz/5GQSjmK17sNbi/fffB+CaQFONSZCp
      C6hOL0DmCmu9HD4opkI2MsaznWrcWeuhn6ohCeuh1pgJ6UhNO84VlHIeonGmEBSd3ThXpeNB
      z9c4psOqG3rBCCqCwRqDgx7SdY+g7hUfozUomzg66RHUPQopCQhhYAQIGMG5SvmI0p/O+JgJ
      GVqpQigc1ZvBlq5drHJMBVX0X3K9SmtkWY40SZHECRglSNMcUunya5gOMBO6SkooKM5VPXCy
      cw2DznUkDepdAcUz0IK+Xa34WFqoY3bfmUX3JOoNDvg5ekk+pMn4tQizsy7Nffr0Kay1brrn
      8x7iwv59MFbq87w97BkMKlybXYnm+jram+vobrehEh/NSYHNNYMVGUAIgakpV9XMi/dril+j
      fYDtbaw/f4g0SYYClAEoE5iZ3SHJNYqWf21i73nh2bNnkNINTP56NcZGPx9WgSZDDrJYwfa+
      3SyHwF++vI9mL0WSSvgex2QtwPe8DWzvLVcud3I8XesjyRSyXMMTFKEv4HcDxNOjDZUXT9ro
      xHkxeomiG3pYUDV813lzvpizyiDuZY6uKxjmJz1sPN9C2XhxbSxWexLt1AVspyZOPPro4VaC
      9vo20s4W8l4HmQ3R2zJ4+n2C7+zB3kwcgATw9IA56JuxwspyF+1eNiyZJrUA3yQR7L7mVi/X
      WH3aQbswP+CMohd5mEwr+C7eGyy5VJBKQkkFJTXACBS1yHMGKd1t22w2nft3O0NzYxv91jbS
      bhdQPlobHM9rOcI0hJRymLI9aqZ4uBGjF2fI8pJO8I0b13Hv0XO8/+HPj/Hx7sXly5eHwvpr
      Nwy+b2aO3+MxXGn4paXCoJVhze9iMsmRZAq+4KiFAhcWKri1b9TOZE+iFXUQZ2pYV498jtuL
      1ZFKyVpP4nvSQqWXIclcI2yi6uP8+dpICnTa+LBQgx3mN2SsxWcv+miZDMp3TajtUOC3F2ul
      QWCsxVas0EpdGjZfEaUH27CVYZVtQtTbmO72EQQ+FmYn8N6VKdy68Ood5olujiekBdLqg/Vc
      g216MsKFpTpuLe3VL3QyjcekiaDrFFmCUdQrPq5eqI/0QzJl0Kt2nNKsaG4FguE3F2ojpsaT
      2ynWww2IxhY2NluoVEJcu7yA927O4IOFCozZcQt5sJVicrmLdv+AAPjqzgP83f/8H/CXTz/D
      zYsnp0QHnB5pAEMj5Ag4hRK8GLvpWJNlwvHpyPnlr1gLwR1xqxGJcl985cTXgjuPUq9QY5Vp
      jU8bhLhRPoehlTq6QLKLLmDh1HX7qcjWWtzZSPDdZuKUUNSZC//V+epIyXC+KjBZ8dGpOAp3
      4HPUIu9QhdVgXvJhJUgLN9IpSSWSNIM2BlXpHyh0B3FmZqzYuBil6JVUgXzuBgt+/sJpjQUj
      uDkTlvYBJgNnkFCJAqhGHb4nEPpieFZwehR3b5yfYnjc0eBCQO+XRALAdM3Hf/kv/xlKSnzy
      5X189MHNAz+g14maR/Hhud0HUOe0Nlty6h9Ykz+tiqGL3KVJv3SHnAg4fEYhC7rwwJHhZRyi
      04CxdkiFOIi4N5A5Km2RKw2BgdZh9CZpZxrfbaXoZ2pYDFi1trRnEBemA7wYIDeYwtkr6XEA
      TnT05VqMTiF0vzEd4vrUqNB9d99jtyt1okavN+RuprDHKeCLoS7iMD3AQPdByMEpoMcoIo+j
      Xg1BKB0aIJfeDz7DX52v4v5Win5ecgZYvPITzF64iu2+xrWL5w78oa8bhBBcqHuYq4hilBFF
      eABfHXAfjNTuV65t6RALAKj7FNdnAtxZi4vSJsHShF/afTxNNBOFOxvJ0MHtxnSIpdqojrnm
      seGYJgy0Dgf0F/q5EwR1YyehDHwOSsPSunozVsOnSiYVCCXIcoX1vhxpQqXK4JPlHtbbO96g
      vVSh6o06T4uiBxL4AlL58H0BjzP4JU+Mms9wueHjuy077Cs0onJFWKoM/visi9XWzjWk0qV5
      +/UOiTQglKAaeUP+FOcUfWkwW/JdzFYEpiPnKjIqiPn8M7Q7XdCw9kYDAHBBEHDy0gOfMhaf
      LPewWlgNMkqw2svx8cX6aIe5cGAwdlC6AzqpQqYtotfop3kYsuKGahY2ih1K0E01wkv1EX+i
      uk9xcybE/c0E+bC/4JWmd5wSJJlCp5eiF6fIpXNvKHtbZBcjd6jdJeUNpo2+xHYvR7uXohe7
      vJ4QgqetbCQApkKBasDRTzi08d3N77HSkU6UEMxVBB43M2jjfvZUJEqnOW70JbZ6ObZbfbQ6
      MYJAAKjhcTMbCQDn0OHS3GroDY2KqyVWMruvhZKSALh14wpauYeAncxa4zSxGUusdV0pbcDw
      tLB4XiLZ2ypsCff3AZY72Rs7BG8namdSzr5pjvsDgBCCn8y4ka8v6y84Ho5FLhWyNAcBgdSm
      NKeeiQRqwYAS4iSXUSBKNcy5tkM1WJZJEEKgjSmleRC45qLncRhrhw4OZUGYKoMvVvtIcj20
      UPl+O8VsxEeIiVJbxKnEdruH7e0OwtBH4AtkatTsoOo5ntD9jQQ5p2AEuNQol2Xux142aBbj
      f/9P/xmXr91EK1a4cOFkirDTQlIw/3pJXkx0dwOzywZaZ9oMCVCqEK8PBDJvKwhxDMkyluRu
      KOuefp7g4MJZPjqKc4nW2KP44FwVXxGCRApwSnGpEYzceMAufg8hw+k7lJLSmc3tTCHfNdJp
      QJfY7KuRnbqd6mHalhQ9A1YMN9x/HYwSp9vNciRJBkIIpNQHPN0IfjITYiYSQ13y+bp3JAvF
      Pe+ICR+//e1vIQ3FTxYWX/qPf0gY425qU9zcxpR7F08Gzi0tH9IbXDe2zBrxtDAVctQCPrSI
      Z5Qg4OU63+NgNhIIfY56NXCDvbk7/JW5NxDixOUep1AFt/+g2coBdwfVwBdDXbLPGSolpES+
      y0OIc8fhJ6ScY+QyW1ucQ9w85MDjpU520uwIhwbpG6UEB2mpBulV2YDww7DnLiCUYWttGe0M
      6ObAudmTawJOA27Xc0IRYyx8n8MTtJRcVvPcsIn7m6mrlDA3m/ZNHoIH1N67Gwm6uZt35ZwT
      TibinwwYfrFUxd01d0AUjGJpwi+doJJIg09f9NBJdgZ7312PSyWRvVy785jv0hpXNaLolFSi
      JgMXcCvGgjNSDC3npRN4fE6Hg020MlCF20RQQnkXhWagEoXIJySCwKVAB42hVcZ1j1upewIs
      VMvp0IA7k23GCnGZK8TS4iLa36/gQEPMtwBzFYFG0R+oRh4YdXbeZQxPQtxs4suT/ktLkKeJ
      Rsjxry6+esOpDIQQ3JwOcX0qGE5/P8i9uZkq9IcObnI4fnW1RBI5sH0UxcBuXohXaiXlSk4J
      fnO+ivW+M+UNhKOjlBUyupmGVE4TEac5AiMgQ4NWUq4diAKBSuRD6Qp8TyAKPNRLqmEDxd2z
      VlpM2AQW6j5+e6E2EgSxNPjDkw62Cg+hPa+2/uQeHi5vYmtzEyQYpUO/LQi4G2V0dzNBJ3Wi
      +Jsz4aGjjF7HEOuTIJYaD7bc3K+KYAd657wKjvLeXA2+YJkOhosQgmrJ7lv1GCLh5jMAu01s
      y6+XUYJztfKZzruhiz7IUHA04OWbksN10S0XgsH3BLxCHVeGTqbxopMhLWjRnBFs9Ak2Yzly
      Tc/bGdY7GVq9FPn+TvDcpVu41O2h1WpBiDffKDoOJgKOv1qqOonbS7xofmi4sm0f690cyjg3
      hM1Y4uNL9VL799PAwEPo++106N/ZiMq9NtuZG281uN0GmuIXXVnaj7DWTZxvp25UVD0ot8Dn
      lMArXOa8waGds9Iuc67d+Q52Z0qNOUDrII2FLv7e2a67VKtMx9HOXB8kTvJyX6Bur4vp2Tl0
      +0ezFvwhMajlvu3YihU2B+a4yuXqpBDG149AE3kdoITgg/kIs4WHUChcpaQsVcmUGcoGB47W
      1trSKhsAPGpm+GylhyTXjpo+FeA352sjqWbd56iFHMr4Q71z5PNSe/TBWCbGiKNOcHcYLit1
      1IonVq4oAFcy9jg90HqHEjIU++xZkbQ38P2zNSze+AAf/+7WyD/ejbtffYosl2jMLmFtfQ1B
      VMcHt28c+m/eFTj9bqGMeg0RpsyOLbrRFoYWLm0HzCk7DrSx2IwVmqkTxS9UxYG8naN6CNV8
      N9Aj4xRBcUMxWu7m0UoV/vx8YBAmITiF1AaTIR8ZIh5ygg8XKvhqjbgDaOEDVXY9HnfktzDw
      YC0giqJHmTw24E4H8VWmoYktxkp5qJU0wuarApVQQBmL0Bd7A+Dpo/v46N/+Pb776s8w5jpK
      J08XICDIpUSv28f12++Xzgh7F9HONO5t5ehkjot/vVGuQtoNa1GojMpRE8660JnoiuEONR2y
      E827sha4s5Xi0XYGqZ14ZqYq8NG56ETnnYACt2YCfLuZIlODIdUeFkrUbuvdHEmu0I8zdLoJ
      gsD5mb7o5LjZGL2x5yOKiQuRE/AwgqpgsEaPlDer3FEWjLGIfA5K3BCUxSofuYZcWyx3sqGJ
      gbUEaz2JXiZHJodOBwTzVQ9aW0ixzxdoamYe//f/9Z8AAP/0L1/g33/86wM/pFxpNBoTUNrg
      8Xf3wSgfmRH2riFTBn95MaAsWDCq0EkVPr5UL32c9nKN+5spmqlCRVDcmA5GJkQCQJ0Dv1wE
      vl6L0S/Mua5NBThXL1eaHRWtVOH7Zl7Qwh0ZbgPASl+feIzQ9WmGc3UfncwNOJ88IK/3hLNQ
      dzPX2HCcqVeixhqgyoHqSy6PA/jofBXfbqbYjuXOEPDKKH+qmUl0Uu1YqQXNOs4pmplFbd+Z
      pZ8qdItyLtlPhZi9cB3/y/xFCHHwsIkB3nv/Q2RSIwwC5FkCJl7v+MofAluJu+GzolGzM+wh
      HwkAqS3+9LyHzX5eBAvBVqzw+8vlB9tzVYGZqP5SY9rjoJ+bwj3C0SEsZ/BMuYD+uBg0zl7m
      zHyuKjBV8SCVGVZqqpHAtemTT3OPBMMvFqKXaijowMSP7MwocH8+uv5FTyLJDTKlIWXJjLAX
      Tx7g7sNnCKuT+M1vPkJwgCUJ4wIRd7udH7xZYclpYTeDwA5/U95h3kokmolEVpTeBD/8YEuK
      UuVL7icA7szwrJ0NS6YXJ8sNZCueE+1zRuALDlY4HbypyhLgmlu/v1zHl6sc670cFY/hp3MR
      zh3QaFTGcbaOao9+FA1FPeCYikQxaqn4DA4wxx36RFn3zY6sMCpDr59gZn4Bn3/xNf761yef
      E3YaUIVssJMqVDyGc7WDD39HxXTEUfX5kGFKC8pCGbVAGRRVkoKWUZjdHETLPipcU6eHZ61s
      KCN91s7w8aVRpuuE7/oJ321aSL4jiCnrwp4mJgKO318u15DvhrEWn6/28WQ7HTbunhXmuIcF
      wcvAifvu1rr5cFpNI+Sl56CFqsB3gsIY190eCYBObHDp3CSerbXwv/5Pf/PKF3Wa0MZ9kE+b
      A69NYK7m4TclSqjjwGcEv16q4M56MmRi3jyAsjAVcoQeKywUBWhxsD0uF2U/WqnGSomN4tMS
      G0VCCG7PhpiviJdKIt8GtFON560MvVQ6WxTu5iU/bmV4b+7VJ5LG0uBJM4MqZhoAFMudHNen
      gpHUdTJg+MViFfc2EyRlKZCgEs9ijssncCI+bWynCs9aGeLM8Vo4I1jrAssdiSsHzJA6Cggh
      mIkEfndxh7h2ELUg5AS/PFfB1+vFwZZRXJ8OMfeSitHLkBbKLTf8bseoNymZPwy4PHe2Ispr
      6W8I2lgsd51/z2Ge/6kySAoWb6+fw/dcR7pM7XYc9HJH1VbaIM01BLeQmqGd6ZEAIMSVgheq
      jug3KomcnsWdh59hy397D7Vx7lyGlXGztGAZDC+XDb4KBnXvw0CI87SciSaQaefJ4xzMDlCw
      GYuNWKJVUDcOqtfXfVawV4umTuFSV+a09jbAWIsvVmN839zx/H/ayvC7EudrwKWLWrtypR7+
      /5NdQ8DJ0EDM43SoNjvMV5YXm9vIp/rw6Sqmphqw6uTzAU4L1V0jklA4BzNGS+donSYIIRAM
      EOzwn2usxdfrbjDEoF5/UMpW9Shuz0W4ux4jK0qb5yfLh++9DWhnGk8L6eRuz/8nrWzEDIEQ
      uFFZgkEqZ6HoFYPBT4Kaz3Cp4ePhlh3qGBbrHqYP4FoN3ALjshRoYWEetWqA755vn+iiThON
      gOHadIjvthIoboeT19/amyTVeLSd7qnXrwGl4nVCCK41fMxXBLr54TX4twGp3EnZBp7/xrpp
      PPtR912RQVUcFYJRgtDjmDlh+kYJwftzEaZDPhy9dLURlAaWMhafv+jjaTsbTYFk0sX/+X/8
      Ryycv4LGwtupBgPcG35vzllkdFKNyGOYifiB+foPjX6uC6cHs6de3zsgZSPEiVXKxsm+baj5
      jsyWMYrAY0MRf1njMOQE789H+HotRiIdHfvipI8LL6FmHAWMujG1ZQq33VjtSTwtzo/a7HsC
      iLCGv/8f/xb/8sU9vO1MBlocWMt8g942VHxWUJHpnnr9u3CDvwwVQfHTuQh31mLkfCf9uFAy
      3nZwAJ2JRDGob6BKe3MbVzt1k+KlPmBS/Pp2D//6b/4Gvv/jaG69DZj096ZslBIs1ETpTfKu
      YXfK1iosXxrBwQMLCSEIRfl0+DeBijcYPkIAzkCs3XsGf/7oLu48fI6J2SX85ue3j/0DBtTZ
      d5ELdJow1rE220UVaO4trtf/mJFrgz8+62G9GFk78gTY3tzC48ePMZ3ZVwqAMcrxqqLtMV4v
      PEbxmwtVLHdy9POSKhALarh55Tw6+sfzRWljsd6XaGcalaIGL05Imxjj3YXPXJUIwN4UaPn7
      e6jOXcb66gquX738SmzFty0FGjZqCv4JK/Lvj5ZORpsA3OP0SSsf0qEvT5Y7X4/x9mLPE6C7
      tYL/9s+fobm1ifd/9Vv8u9/96sB/uLHyFGvbXVy+fBEPHnyH6uQsblw5f+oXfFw0E43HTWfH
      PbBFeWEtlmsno01oY/HnlT5Wds3+XenkB3ZATxOm8Ek9jLoxRjn2BMCNX/wel94rJp3Tw3ey
      7x8/RlStY+XZMi7cvI2t54/fSkVYJ3WDOgY1eFgGza37c/Xqu/VWorFaRlprpbheooQ6LbQy
      g7ubKdqpRsAJrk0FOF/jB6rTxtiLvc5wjCM8olVHENVw+fISHtx7DNbqIMvVW6kIqwfYV4N3
      9iAToThQsXQU5EYPZ/9KZUBQuBbo0Zlbp4VMObOrgelulxL0coOqV/tByXHvEl75m7p9+yd4
      /GwNH/76I6w+/x5z195OQXwjdEPnHm2nwxr8Yt3D0iG0iaP4+JdZLgpGS4XjwPF8gQY2I/3c
      2cRXPVraLNpOFLrZjuku5wyMOAXbOACOhlcOAO6FuH7tMgBg8cKV13U9rx2UEPxsLsK5mudq
      8B7FXFReg7fWoplq3FmPd+kBQiyW+PhXPYr35iLc3UiGpLVLDb9UCXUcXyBrLZ60c9xZj5FK
      d2a5NOnjZ3OjEzDJQAfofjNMe04qtTxLeDs5tq8ZjB6tBp9pi0+e99BKdvn4Z87Hf/9u7SwX
      fcxXXVs/4BT1A9r6x/EF6kuDr1b76KU7Hp7faYvpSIzYh0yFDBPBQJRDwSjgi1GvzzEOxpkI
      gKNiK96bUuz28S9LV44qHD+OL1A71ciUGxae5goed7rfzViOBIDHKD46X8Pd9Xg4UvX61MlN
      d88SxgHwBtAIGcISX6CyPN0rHJYHNu60sBkJDuhZDGZevU4jr7OEcQDswnTEUdslimfFaM6T
      +vhHguEXi5URX6D5kvPCVLgzAXMwVb4elNuND0AJwUuq1mMcgBEy3EnxtnWCj4PjHIJf5bWl
      sUfyBcq0weNmhmaiEHkMVyb9HwV1+m3EOABKcJQy6Bg/DoxToBL80LMExnhzeHe36THGeA0Y
      B8AYZxrjABjjTGMcAGOcaYwDYIwzjXEAjHGmcYIAsPjmiy+hjMSdr77As9XN13dVY4zxhvDK
      fYDNlSdodhNsvljG9KVbaK48hp2fHirCXnN/bYwxTgWvHAArq+tIutvY8yXBMgAADiVJREFU
      bkWYjGaGw48HirAxJ32MdwEnokJsb2ygPt3Ao3v3UJtZwrnZyR8FFWKMs4MxF2iMM43xXTrG
      mcY4AMY40xgHwBhnGuMAGONMYxwAY5xpjANgjDONcQCMcaYxDoAxzjTGATDGmcY4AMY40xgH
      wBhnGuMAGONMYxwAY5xpvHIA9DtNfHvvAaTWePr9d2h249d5XWOM8UbwygGgLcXilMA3X9yB
      Cafw/Mn3r/O6xhjjjeCVFWE67+NF0+D8XBW2WkHa5m/lkLwxxjgMrxwAL16swrIAvLaIp9/d
      RWVq/q0ckjfGGIdhrAgb40xjfJeOcaYxDoAxzjTGATDGmcY4AMY40xgHwBhnGuMAGONMYxwA
      Y5xpjANgjDONcQCMcaYxDoAxzjReSwC0tjaQ5up1vNQYY7xRnDgA4u0XWN7u4/79B6/jesYY
      443ixAHQ76c4t3QOvhhnU2O8ezjxXduYmcaju99AE+91XM8YY7xRjOnQY5xpvLIgpgy7FWH7
      46psbthgTdmfv6m1h73Gm1xrjBnZNMZrX8/aw+6H1xoAx1WEHedpcdy1xhgwxt6ZtQBe+9oB
      zvpaYwwIIaVB9NrzFELIyE2qZYZWu4Vvv70PZeyha40q1t69D6lftjYv1t6D1GbP2v0fzGDt
      vaOs1Tla7Sbu3b2HXL1srXRrvz3i2lYT97+9h+wla61RaLW2j7y22drGg2/vIZV7tdijazWa
      zW08uHeEtdat/e7ePaRSv2StQbO5he/u3UNyxLUP791Dkh++FrBobru18RHXPn5wD7vzj8HG
      vBsy6WCr2XozjbCs38I3n3+OXBl0Unn42riNbz77DLkx6KT5oWvzpI1vPv0UuQVa8UvWpp3/
      v70za47jWK7w1+tMz75gZgAQXECAiyguEnV1gw474v41/TG/2A6HHSGKiwiSA2IjtsGsmL33
      Lj/AdlgmUcUIURB1hfN8IqO6qzIr82T2DBtPnxIIOJ35Um7oTdl4+hMBam7kn3FDAYOpJ+XG
      wey/1ysYjF253XDGxtNnhAj6I/lPzsTRnNdPnxF8AjeJ57z+6RmhEHSHMwXXZeOnZwQkdAZy
      rkhcNp4+JySh059KuQiPjafPCUho9ydyLh4bPz0n1BLaXRXX5/WzFyQpHflpgHGnzZutbYwf
      fvjhBwX3V8Ln8KBLZfk6q1eXyKQs6X8IiySGVJH1GytKLppOtlynUc6RdhxM43x/NgyL8WyG
      qRs0GnUsCRcRE1t51ldXyDm2dA26YTHonVK7UqeUL8jtauAUajSqBdJpB8s8n6sbNkIT6LpJ
      vVaV2wWcQpXFaoFU2sE2ZWmBICTF2s3rFLNp+fsVgkBYrN+8QSHnoEv/+1kQJBZrN29QVHJ1
      PN/DNC1y+TyZtOwdm+i6QGBQb9QUz2agG4Ik0SmXy9Lorukm1UbjIm4Ai9nohN3dXZqb2/ix
      /OdSdMPg+P02zc1tAgX3cOcNr143ebu5peQG3hgrW2X91jppycED0AyD9sEuzeY2fhRLuaE3
      ZjSYMBydMprLb4vW/jtevnpLs/kOP5TbjfwJo1lCo9HAVqy3fbjFi5dvaG6++yBV+QCaTvd4
      n2ZzCzeUd+81TaPXOuBtcwtX1enXdPon/8OV3/IID9fXyacFL358ziyRCZE+3YFLo9Egbany
      /YBu36VeVx3shLfPnrK5u3MRDqBz5+uHMJ3iFB2iWK666oZFKZenulhFQxZFEsx0iZWlGrX6
      ovrlCEGvfczOzp7aCTXzf9eAkP/jveWUuX1vFcvMUS86Uu7ilVUq+RR2OkvKlq/XsFIk/pT3
      7/eVztK4skat7GDaDpm0JeVqmkG5WKBaryAUz4ZmUikWWahXENK9ADAol4os1MsIoThWWoZc
      RtAbR9z9+jaOLr8tAnfC+/f7aifEgGjG7t4e8h3WWPvqDjbaxdQAIknwvRn7By0l15+N6LYH
      dLptZr4skmgsX71OMWOhWTaW9CWCYadJWTpRFKHqfATehM5Jj26vw0RahyS0Dg/wEw2T5BfF
      9ccgRIxmplhcbChTGoSGpmtEoU+sOKhJEmCkCizkLU7H8jokiea0j7v0+h1GipoliV3arQ69
      XoehomYRiUf7uEOv1+V0rPqZzJDp5MxeuVLBkKZLJktLNWbj4Sc4QMJ0OKJYySIPGRpJ6GLn
      KhfhADERFt88+Z576+ukpSMTCW6gUV8uEQcGBUcWzTSC+YDuVJCMOwxm8rJH1y1sXSNWxAYA
      O1OiXHFAS1HOpmVWqdcr9Lo9ep0T3jS3pdYNO8vyYpUwDD/ok/x/JElILHRsE3zFxpt2nuVa
      ltAqsVTNSrmakeLm3XUsLUUxJ+/eG0aG1VtX8TxoVDJyu3qKpasNPE+wUJS9MwDBdOaSSqXQ
      FIELIt7vvccpN6jkVXYNsrk0h/snSn0/u3CFkpVchANoaBoMB33aJ51fyKAf46bTafKFMsvL
      NVBcu7ZTxIjGTGJT4SwQuGPc6ZwwjpgqlKhgfsqg75KyBYOJIvKJGCudo1LM4k+mEvUhYjSa
      4Lku87mL9DVwVqTV6jUWFmrY0vTuTKocjefEgYsvzesFcSQYn3aYeBEpS35M4nhGe+Bx7UpD
      vljOboDhNKHiCP7tX/8T91wHT5hOfa5cWVTaPIPB4tISsTdh5ipqCwS5Uo3FpRWl1Wm3xcvX
      mxdTA4hgQmTmWVtbxZZe/RpaMqf56h3j6VAhbYbs7LW4e+8+jaLDzFcUdIbD7W8e0SgUyKTk
      +bftlLi22sD3NaoFeV5v2jmMcExnFHDv4T3Oj1Em+YzJzttN2v3OB5r2BxAxraMjjo5bRNLU
      yqCQz9AbjCiVSpjSRqHg5OiQEIu0nigK5oT93UOiyKPb7f+ix/ExaHqarAPzUOPG6lXOD0ca
      GcemVF1kcaFEpBAZQMc0deyUg5NWzZtpGIbGbNRX3vPpbIbV1WsX4QARR60+83GP3d33SrUm
      nS2zuFxmMg0pObIH1pkMO+wfHHBw0lPIYyEvXzU52G7Snbg4isgX+lMGUx89ighj+QYF7imn
      /RmFSg43VIZ1llYWEfFZM+h8JHQ7pzQW65SqdbIp+Xo1TadRqzIeDRUFs87ySg0zVWR5IcNw
      IqsBdKrVDGhZHDPiVMoFRIgXaKyurbN28xqmJK8PI8Hx7gY/bx+Tle4xgMfE1blaS3PYHim4
      GvlCkYWaXAWKQw83sUmZxkU4QEKiZ3j87TdUc9YH3ccPFhcHTMce1WpeIUEaPPr2W4qFAvcf
      PiIjVVVi4iBkPpkjNH7RWf0YNE3D8+SS5hkEhl3g/ncP0CNBISPbTEG3P6HRWMDJZMimZFyN
      +tIS1UqZcqmEYchTwc7xDlt7LQa9EyaKNEE385Rz0J/rLFdzUq5hZSgVHZxinaWKnItmUio4
      nLTaCicUnPa6OMUF6uUcgUq2xcTWQ1ojwfXFooLr8frFz5yOu8jyAd0w0S0LQ4QX4QAm3rRH
      s9nksDtUypVxGDAZj3i/f0SsKBR1w6RYLGIrIjqkefJPT3jyt7/x+P5XOIo1GKZNPmUSiUgh
      Fbo0N484OenQKDn0pepHSLczYOfghKsLWQZSrkYcTPj3f/4Xmtub9MZyZ1xoXKNRzZEr1Snl
      UlKuiD22327T77c5VQgHjpNhMhoym04JIoUCIyKO9vbo9tpMPbkDOLkClmFg6LpSXAVoHR8R
      h4G6v4DD/ccPMBJ5ZPfnQ7r9GZrlfN5huI9D5+Hj74iiGMMwlMNsQgge/MM/YoRT4LNOan8y
      Qn9G4AVg2Uy9gIx9Xh1g4E56+JGPN5+xcqcmsWpzZbEI6euktJBiVqbWCNDSfP34Hp3BlGxa
      vk1ChAxabao3lhhMPJYrciVoobHAyPVJFOkdmkEYuPh+Rlm0g0a1tsDY8xR2NYb9Lm4Q4WQL
      GAo5uNfucvfBQ8bjMbYpew+CNz+/IBQ6pinvIKUyJbzxSwLTvggHOMtRrU/8YuzkaJ/DQUSp
      mON2Y/k3XtnHYTtF7n77iPl0opBBU/zlyfefbLfauPKJTJ/tnRaGHvLom4fKazqONK7eWcP3
      fIVUKNja3MLH5LvvHykEibN9S1s6fuChyBoBCKKEfL5ELiOXr5eWltjb32fQaVGsVLFz593I
      Z/Vj7E+5dnOFw5MhN1cq53LHE4+cA6MoL38u3eTBo8fAZ/4e4NcjRktXubnkczyYkSQCPn0y
      9rMhcEcctV3K5pzTqafs8H5+6HizAV4YEGy8YXV9nUzqvEMV8frNDmkTrt57oEgxfUaTiLwd
      s3fc5sZSXSoeiCQgiQSR5jOdeZTOPdgJR/v7DGcuK6WScmZocDpm7fZXmMoeAGhJSJjA0XGP
      +pWShGny4NF9ovhs9PlTc/vP/kXYr0PAsx83iHWd5ZJDqnGdalae0/4WSOKQrXfviDBYX7+l
      nMX5fRHw4388RyQheq7E3Tu3yZ7rLAn9bp8oSQCNcrUqdYDpaMDYiykXcqTTssE5QafdoVgq
      4c/G6JkSOcVIxpeCL+wGsLl16wZGOoeWRNhK3fe3QeiNiYwcJdNlOPepK3oBvy9s/vLkr5/I
      1anWZHXK/0XE1s4hOVvDKdzBkUb1mONWl3qjgTucMhyl/jAO8MWFtlyxjJOySDuqkdrfDnam
      TFZ3GccpqjlV+/3vFQIRB4xnM3Y2NxXdc5NryxV+fvWK1kiwUi9c2Cp/Lb6wFOjLQJJEDPqn
      dFuH1Nfu/S5p2CUuBl/cDfBFQCTMZzMwbKVScok/Nr6wGuBLgODd27ckukUYC/XY8iX+0Ljc
      3Q/gEiQZXHfOUjmjnAa9xB8blw7wAWwcKyKVStObBhT/tEXwnwOXRfAl/tS4vAEu8afGfwEG
      AoPpabI5sAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fantasy PPG' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fantasy Points' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy92ZOc13nf/3m33vee7pnu2QfAEBsJLiIpUQolVf0slywpFuVKrixXORdO
      qnyVyn+QquQqF67cOa5KKmW7UopllyNblsLQkkiKBEgQJIgBZsXsS0/ve/fb73Z+Fz0YLJwB
      McAAMwPMt2oK6JnuPuc973ne83yfVRJCCI5xjGcU8kFP4BjHOEgcC8AxnmmoBz2BYxxjJwir
      xfW5DaJuh2BqjLD38WzVYwE4xqGEpHrJLFxnSQlwwbH4bGWdwVPnWZv+nFR/mqvTS3zr//td
      kiH3I41zLADHOKSQODuaYMUe4eqVdwilxyivLVDJbaCbFpHBs4+8+QGkYyvQMQ4rmuUMDRHG
      R42JmWVOjA6SWd8gFo+jBHro7wk+8hhHTgCEEJimicvlOuipPBUQQmAYBm73oz9NjyKOnBXo
      1g07bHAsk2w2jy0EtXIJ3bAQwqHV1kEIKqUCLd086GnuiE6nc9BT+AKEbZHN5rAdQa1Sot0x
      EcLBsBxqlRKZTIaW/uj74JgD7BNq1QqSU2fqegnFrWFn8iSjftbyFU72hVkp6gwN+PB5tIOe
      6pFArVpBEm2mJ2eRVAXHztHXE6IkIgyGXHSy65TdIXyeR9MEjtwJcFjh87rIlTok437iyT7c
      qkwyNYDXpVAplPH4PKytrR30NI8MfF432UKT3mSQaDyJR1OI96ZRVQWP108HF+mo75HHORaA
      fcLiwhKyDKrHx+byLGgeNlYXyefy+JN9NMslfP7AQU/zyGBxcRFF7ppDCxsL2Iqb7NoS2bVF
      2s0KgWgvkiQ98jjbJLjT6XAU+LDjOOi6js/36NJ/jC4ajQaBwLMpnNscYD+k6UlAkqTtnzth
      miaSJKGqe6M1tm2jKMqePiOEQAiBLO/tAD2sY+20nrZt4zgOmrY3zvK4r7G8sIBeq+GLxQik
      0yiPeL+3P32vWXF1cY5a2yISCRBLDODZeqdl6FhoeFwK4JDPlYlF/RhCw+u658IlibnJz4n0
      ncBpbVJuuzh9chAQTN+YQPVFODE6hAR06kVm1yoE3Tb+aIpEdGcbrxAC27a/YLa7dRP3esMs
      y9qz0DiOA7DnTfmwYwkh9rypHnQsIQSapn1hPU3TRAixZ3Pz47zGZi5HK5MBoNFs4vZ48A0O
      PtL8dpmpoKFbnDt7ho2laWYmrxGIJsmtzJDu7Uf2eZmdnOPc+VNMTMzy0rlhWlqc5YnL+JJD
      yO0ChuThta+8gurxUSvnQZjQ6fDpp5/Rl4qieJKcGkuxOj/FJxNLPD+epG36qBZyjDk67y+4
      SHh0FpfXGRwcpnegn1pNZ2yob8cZ7/QUO8bD4zCuZbtSuft1uUx4jwJwL3Z9hAnbYHMziy1p
      jJ86hYRDanCUSNCDonoYGkhSbVsk41E0RaFTzuJLDmEbOtFEir5EtPtFkgpWE8XtR3JsNI+f
      QCBGq5YlXyhRrrfoC/rwhGMMj44yMDBETzTIifHTSEg8d+Yco6dOMX/jOqlUctcLuXWMHmP/
      cNjW0xMO3/f1w2BXT7Bjm5QqdcKhIIqiYNsOIJAlCQHUq1UCkSidZg3N7UVWVBq1Kl5/AEXu
      Pj1UVcOyTCThIBQNYdtYhg6qC0XYtA0btyphWAK/3wOygrBtVBlsSUUWFuVKnYBXY3Ypw/mz
      4wjHodVqfYG0GYZxrAI9xFhCCOr1OqFQ6K7fH0YVSAhBcW6OTrWKNxYjODT0yPf7yIVCOE+J
      AAjLorO6ClvfBaD19qLcc13HAvBwYwnLwpyfR1jW9u/UdBoRDD4IB3gUOCzdnKPcaHNi/Cwh
      3xcXUDgmzZZFIODtvhaCWq2GZRhEexLIEtSqZTz+MC71wTbZUeMAjmFQ+cUvEObt8IjId7+L
      d3z8AGd1G0dpLXeCMAzqP/kJotnc/l3gD/4A9eWX73rfYxAAmaGRETpL64hOlemVMvFokEy2
      RLwnQjwWpVKrgO1ieX6OxOAIiUiAxbkb+HuGcaw1Ngs1/H4XUQGzqxv09iXI53Mk0iPEQzvb
      /4UQR/6mHTYcMeXgofBYPcF6q0lv/zDNeo1WcRPDcbh+Yxa3z0293sHl1mi3WgBYW0/CpaUl
      JMegYwkqhSzpseeo5DNYDhj6/YO2noUb9qTwrKzlYwmGk2SFeCyKR1NweVQMr5dQopdEMoXT
      sQj7/DgxmVKxjtvjBkni5JkLWEaH0MgopWqTRE8cv9fDytIcydQAGxtZfD7v45jugUFS1bs3
      2vEJtq+QVBVxJyfcgbM9NST4YT3Bj4sEO7bdfc8dxO4uEuw4OM0mdy6+4vEg3UPiD4oEW5a1
      7SR7HOPeicdCgh0Hp16HO7a37PViK8r+k+BOu4VumGhuDz7PbY+ibdtIsowMWI6DqiiYRgfd
      sAj4/Xc/8ISD5YCqfHFTWZbVNb9KMof9GSmEoJLNUs5mkYBoKkU4kQCgWCwSiUSQJIl6vY7L
      5aLRaBAKhfD7/dubMRh89Eyn/cARezbeBUmWUe7xEwghaFSrBAIBKpUK8Xh8fwTAMDpcuz7J
      +fMXqOQ28EX70ESb69OznHv+ZfJrC7QlD6eHk1yfnKcnFkECXF4PRruNsAyMVpWcFSKmNHEF
      e9BkB0UCly/Aws05YgEfTihJT2DnzKXDcrMMXae4sbH95CmsreELhWh3OiwtLVEsFhFC0N/f
      TyqVYmZmBq/Xy+uvv87y8jI///nP+dM//dMDvorDs577iZmZGd59913Gx8eRJIloNLo/JDgY
      jtITj+Oxa+hqiI2VBVbX8wyle8msLBFLD+FWZTqNCtHeNNXsOpvrmzQsg7XVVWZml4iEAhiN
      EjOLa8zdvMnG+gZrGxnkw/7Ivwe2ad517CIEtmURCoWo1WqcOXOGjY0NJicnCQaDCCF45ZVX
      cByHf/qnf8K2ber1+sFdwFMKXdf59a9/TbvdRlVVdF0nl8vtnxXI5XLh8gWp5tZA8yA5HTZy
      Jfw+D8tLizjIeMIJatkVDEcmEPKyNHsTC5m+VApFUfD5/QR8Hvp6e4kFVSzFhwRoLheKqm17
      mHfCYfEDePx+XB7P9mu3z4fb62VmZoZcLke73WZwcBC3241pmoTDYWRZJpfL8Ud/9EecO3fu
      UIR6H5b13C+4XC5+/OMfc/bsWQYGBjAMgzNnzhxeEryyOE9yYASPdjcxOgok2DJN6qUSEhCM
      xVC2iORhIYh34mklwQ/6mUObEzw0emJP7z9McqxqGtHe3oOexiPhWQkufGgVKLexwo0bNyjX
      23v+7NryPJOTkyyuZr7wt8xm93fLKysPO7VjHOOB8dAngG1bOELGrcInH32AGkjisutUawbR
      ZJwT4ylufr5Gy9bRPD5ks45uCs5deJl2u41wBIZpMXfjKusVk/6oB3xROrUs9aaJZbZYmZ9i
      fmWDZCJF32A/1UqLkcGdn6xPm8560HhW1vKhTwB/KMpgX5DJG1OonjCtRhWhaAS9bnBsKqUy
      rXaLQLQHWVj4Q1GG+xNYtkB2eRgZGaLTrtJo2ThmG80d4MTwADg29paOXas3GBwaZXB0mNlr
      n5Po7dm3Cz/GMeARTgCPy8VmvcVLL10gl8sRDIURls7N6SXGxkaolCqcvXCeVqOEu+8Emgyy
      BLIqk0omyBUrnDp1mna1yJDmJeB1I0lw6syFrgNNknCpMplsAZfk4I0kCHg0xB3hw3fiWdBX
      nySeFQ6w71YgIQRI0r56bG9NUZKkI5kP4FgWRqVyV0K2FgqhPECs/XE+wO7oVKsIXd9+LSkK
      rnj8vurbY7cC7TZ4Zm2JYrnByPhpAu7bw1qWjmHI+HwuwGFhdhZD9vDciWEkScI0zQfa1IeZ
      A9jtNrlLlxBb8UFIEsmvfY2CrnP9+nVOnTrF4uIiwWCQ1157jZ/+9Kf8wR/8AbIs88EHH+Dx
      eHj11Vef6JwP61reiebSEq3Jye3XaiBA8rvf5fKnn5LL5XjjjTf4zW9+w1tvvcUvfvELPB4P
      b775JisrK1y7do0LFy48ucJYqf5h3C4Vp13jxvXrVOsNbly/Tr6QY+Lz6yyvZwEHG43RoTSl
      3CazN+d57ze/ZjObZXLiKksbxSc13X2HuMc7jBAkk0ls2yafz9PT04NhGFy7dm3bBl+r1Zic
      nDz2DO+GrXW89XNrjVOpFI1GA0VRtmOsyuUypVIJIQTz8/O8/vrrfPbZZ09OAHIby8RSw+it
      BgKdyU+ukxwbJxL0MzR6EqfTzQuol4ts5opUy1WGR0dJDwzR15vE7faS7o3u+v1HUWdtt9t8
      9atfZXNzk1qtRqvVolAosL6+zvr6OpqmMTw8fCBFy47iegIgBIFAYPuBIssyhmEQjUZxu93Y
      ts0rr7zCxMQEgUDgCTnChKBQqkBNJxT0oaheRs70kl+cg1Qvfp8LlxYCZHx+D229Q28igabI
      hHwu1tdWKNd1wrUmsbD/iUx5XyFJSLJ8Nz+SJGzbZmJigu985zusrq4SDodJpVK8+OKLBINB
      6vU6p06dwnGcI6GSPGlIsnxXjL8kyyBJZDIZotEopmniOA7Ly8sMDg7i8XgolUr4/X7cbjev
      v/764Q2F2A1HIRTiXgjbxmw27yLBqs+H/ADjHmQohOM4h5oEG40G0h1J78gyajC468NCWBaW
      aaJ5bydW7esJIBwHIUl0C6fI3Xh/IXDuKXsnhEACHAHyUQv3fAhIioIrFHqozXGQOOynjuzx
      PPB6mhMTtP73/0boOu4338Tz/e8D+ywASzdv0CJMn6dJ0z/CYMxDu9Wg2bZwKw5NE1LJOEtL
      i3gUByXQi9EoEetN02mUMWwJ07RI9cZYXcvSP5Ci3WwgKRqlQon04ADKLvfkiB1khx5HlgPs
      AGEYNP/iLxBb+ef6//k/qKdOIcbG9lcAipUmjmSCx4vTLLLY6C5gp2NhtZt43RpmMk6nWSXf
      kXkpKXNjKUem2MCrCYyOTjIUYLOkUMwuU2vqdEyT8aEEhewKDdvFmdHdq8Md4xg7QTSb25v/
      FpxcDvfp0/tnBbJbBbzhNImwl7ohCPT0s7m8QLovjqrIhCIRfN5unLwvGONkf4yFlTUcyYWm
      SARDYYLhMH6/l2q1gtcfQBaCVDpNo1bF4/cjiZ29wLdw2I/so4SnaS2lSAT15Mnbr30+1HPn
      aLVaxyT4uDTis5EP4DQadN59F6fRwPP1r6P094MkHd58gL3iiMnxQ0FYFtb/+384k5MoL72E
      8q1vdU1/j2OsQ8YB9EaDeqGA2+cjmEjs+YSSAwG83/selmXd1VNgXwTANjtMXJ8gHE8zOpS+
      62+FbI5obxJHb2ArPjyaDMJhbWOTgf40U9evghYkGvHhUTUc1YumQDDQtfeXKxWikQiVcplI
      dHdH2LMA8yc/wfyLvwDA+sd/xNVsov3gB5imyd/+7d/yrW99i6tXrzI4OMjCwgKJRIKvfvWr
      ALz33nsMDw8zPDx8kJfwUDDabTamprYDIW3TJNrfz/Xr11lbW+PUqVOsrKwgSRJer5dSqcT3
      vvc9CoUCV69eRZIkfud3fmfH794XARCOTbutE5Fl1pZmWc426A1p5GsdEpEwlUYVvyJDMMr6
      wjyBaAJhdVtcNptN/LEQerOB5HZjygLDbLM4O42jeamXswwNn2B2ZoqXXn3jaDrC9gn2++/f
      fiEE9vvvo37/+1y6dAm/308sFgO67a5arRa6riOEoFAoUKvVaN5RJ/PLIEnSoTkBWtXqXVHA
      jVKJaH8/p0+f3i5v4nK5th2Gy8vLACSTSc6cOUPrHgJ8J/bp/JToHx5jZKAPULjwwjly+RLx
      eBRhm1TrbRQcGtUypuTC77td2iSeTHHm1Ngd3yUwzTaKK4RXEkR6eukfHKS/f4B4ZPc+Voc5
      GG6/IA0M3P16cBDHcajX60xNTbG6usobb7zBysoKX//616nVati2TSaToV6vc/Pmzb2Nd0jW
      884iAwCuLUfWpUuXOHfuHPF4nIWFBUZGRgiHw/j9fvStKNGZmRnG71NweF9IsHBs5udmULwR
      ZLOBpfhIxXxsltukEjFcLpl6rY0vHCK3toQ/2otLAb/fz9ryPHUdhgZTqLKMkGRs20ZvlHHU
      ABGfwmapQcgjYck+oiHfkQuHftSxbhFEp1jE+C//BWduDvn8edz/4T8gbRXRKhaLaJrGlStX
      +MpXvsLCwgLhcBiv10sikcAwDCzL+sK6HYVwaCEE5Y0N6rkcLp+PxOgoqsvFJ598QqVS4bXX
      XsOyLKLRKBMTE0iSRDqdxu/302q1tk/Gneb31FiBngUBgC2ybxjgcu0p7n03PEkBcBxBuWzd
      pVoFgyqaxoM1yHCcbizV1nUfsqoQgkJ2g7oOw0P9eypo1Ww28Xk0ag0dRXPhc7uQZBBCotVs
      4AsGjxsab0GSJHDvXB3vsMMwHH75yyKGcVuff/PNCKOjHm7evMmJEyd4//33EULw5ptvsry8
      zIkT3eogV69epdVq8dWvfnVfVbN921dGbZNsQyHdG8No15mavEGl3mB68gaZfJnN9SU2NnPM
      TU8xt7hKPrPGzM1FHAG5XJb5uTkURaJRL/HOO79iafoav/7oKmsra+jtBlOTk1Sa+q7jPwsc
      4EnicaynEN1TwHHY/hEC6vU6v/3tb1FVlW9961sIIcjlcly5cgXonoJXrlwhnU7v+dT9Muzb
      t5mtJoGgn88uX2b65iI2EovTU8QHxqgWc5QqDUKqgz/Zj9lpsLCwSLtZw7AERqtGuWGiYVDv
      CIaGhhlI9zI8MoomSywvL2IJh2qltuv4h81ufdTxJNczGAwysEXw19fXSafTpNNpoltmb0mS
      +PGPf8yNGzdot/dehud+2DcVyN87xurkDQLRBIP9CVbWswyOjZFduUkw1otXA184yMLUHHXd
      YjDVS9tWUBWJWDLNqN9Nodwg6PfTaFVoCi+tYoZ4OEwy7GZpZXPbN3CMowlJuv1zJwqFApub
      m0xOTiJJEuPj4ywsLLC5ucni4iJer5epqSncbvcX+hk/8pyeJAkWtsn8/DzBeB+98chDfcdR
      J8G3iN4tO/uXqRlPU1K84wgKBfOu2sGhkILbLT30NSqKcpfP4svW80BLI0qKxsnx04/nu48I
      B+hkMliNBu7eXlpLS4TOn0fa441/EngcaynLEsnkFwXKce4f5LgbhGVRu3ED/9gY7dVVXMkk
      7nh8T512HrMAmExMzDI+fgoJQWZliWhfCkn1YrUq+EIx3JqC49SYnCwxNBBC9QRQhEm9ZRCL
      hiiVysRiMUqFAqFYD7s1jTwS+r8QtBYWaK2sIGsaSBK+kRHqts3ly5dRFAW3283S0hKnT59m
      dXWV8+fPMzY2xk9+8hMcx+FHP/rRvqsBO0/18HMqs1KhMTtLc34ep9MhMD6OKx7n8scfMzMz
      wze/+U1+/vOf8yd/8if89V//NW63mx/96EcIIfjLv/xLXn/99cd/AgjHZHFhFUUyUCRoN0pU
      ah3whLCyNzl39jlAYNbzrGRBmJtIwkTVXBQzK2wUiiR74hTrNhf8IYLevR3JhwqShH98nPbq
      Kk6ng//UKdRgkAjdp6DP52NsbIxOp0O73eYHP/gBH330ESdOnEAIgeM4+24FOcrQYjE8fX20
      V1eRNA3/yZNIkkQqleLatWv09vZycut3dwrzxMQEkUiEZrP5OM3rFjPXJ/FFemhU8mTy5a2E
      cAnV5aZWyoOiYhstJidmifWnaDfK2Ej4giEioQAul4dYTy+9ff2E3Rb5QvXxTfdJQAjqk5Pd
      FMmeHlpLS1jVardRgyxTq9X4m7/5GxRFwev18g//8A/E43E2Nze7baJkmU7n/p0ynyUYhQL6
      xgauZLK7tlsBcysrK3i9Xubn5/nss8+4cePGdlG1TCZDT08PbrebRqPx9HiCj0o+ALqO3W6j
      hcMY+TzudPq++vZxPsB9xjJNzFwOd28vZrGIGgqheO/fSfTI9AfYKw5ajoUQdDodXC7XdlM/
      dYfNowYCqFvC6+nvf9LTfGAcBQ6AJOHdWkP3Tv0YhMDO55G2gumErsMdcUGwRwFYujlDQ7cY
      GjtJaCuiU9gdrk8v8vy5u607eqWA6Y8R1O5+StaKGZRginpxk95U3xdqiBYKeXp6EtTrdQLB
      4KHvCnkLpmmyvraGx+PBMAw0l4v+/v4jYZl6WuG029T/5/9E2jLlik4H/7/7d3DHabcnAdBN
      wdmzp5mdu0kOB91RScc8OJZJ3XCYu3oJLdBDxCuR38gQGxlntpgnGQlSKVUYOfM8rWqBlbUK
      er2G2WlQrjboi4dYLhpEw0Ekq0a13kaWHKr5TSqtFtFwhEyhzqnxk4eWBGuaRjAYpFKpIEkS
      iWTyePMfMCSvF/fXvkbr7/4OAN9bbyHdoyLtmQSbnRZCCJZW15ElWN/YRMJkbTVDNNFHwKvS
      MhxGBlI4ls3Q2Ek211ZAkXBsgSSrnBw/QzIeptEyGB3so1Iqkh45iak3KeU2saVuFz8HlZOn
      TmBZEHBDudLY/WIP2A9gWRbNZnPb4lCv1w+/CnEfHPR67gs6HYyrV0FVQVUxPv8ccY8RYU8n
      QCziZzVT5NSpcXrCAdpCI5zuJRwMUqs3UGQJIYEwdXKFGr2pGJrbxfMXLrC8XsDnVnAn+pFd
      oPan0WTBeq7MQF+Mq4sLvHB6BAbTWKaFJAfQZAVNdRPvibKZ6ZCMh3ed20Fvtu0ul4EAHV2/
      K+/0qOKg1/SRoWlo4+O4X38dSZKwS6VtdegWDoUVyLFNHEnb1cl113sPYSiE44itKnhwJ2m5
      9wl6GCsmHJWEmFthI0II5K2AogcZ697tbdv2XZ95rF6VRqXIzMwMK+vZ+75PVjSsTptbU222
      umpWq9mk0Wigt1oYHZ2OaT/O6T4UHMdhZSVLNlsms1lkbS23bRG6ePEihmFw+fJlNjc3yefz
      XLt2bfumTE9PUy6XD/gKDj86zSbr09O0qlUys7OYW9Wyr169Sj6f56OPPuLdd99F13U+/fTT
      rrkZ2NjYYGpqalud20mle6wC4A9FsWyb/t4Y5XKVSqlMsZBlPZNjdekmG7kShc115pfXyGU2
      qVZKdEybldVuh8iVlRU6nQ6ba2tUSlkK9+lIedA6azZbIp+v0D0CJPL5PP39/Vy+fJmxsTEu
      XrzIpUuXqNVqZLNZyuUyxWKRS5cuHdic74eDXs97YXU6ZObmsE0TJIlGo0E6nebjjz/mlVde
      wbIsPvnkEyKRyPaafvzxx6yvr9+3v8JjFQBJlpFlGVlRyedz5EtFspkcPRGV+cUc+XyWubmb
      FHJ59HaduaUNXKoCVoepqSmKlQa5fO6BxjooTa6rdt0+ujVNRZK6nclnZmZ47bXXmJ+fx+Vy
      oaoq2WwWRVFoNBr09fXh/RLHzUHiEGjHACiqirylHsmahrzlKf/ss8947bXX6HQ62+vY399/
      17wrlcp9g+0eO1MLBAJIkkRQszD9aUIBHZc7RE/MRzASJaAKDNlLNOgjgklDNwmE4wz097O+
      vg6AS5JwuTUUbW/63pNAl5PoRCJBhHBoNts4ToTr168DsLq6SrlcxufzAd30z1vJ6b/97W/p
      6+t74nN+EByWzQ/dukCO4xAfGKCaz3dPg3yedrtNNptFlmVeeeUVSqUSv/zlL3n55ZfJZDIE
      AgF0Xb8vL3wyJFgIlldWGBwa6hKYR8BhJMGWZSPL0lac++5k7pgE74wHIcG2aaJoGrZpdj3s
      D0iCv2x+T8ZWJ0mPvSLZQeqsqvrgm7OTy2E3m7h6emivrhJ47rlnJh/gYSFJEuqWIKr3CKQQ
      An15GUnTkDUNs1rFtxUB+iB4KAGYufEZ/p4RFKNAriYxnO4hEPBi2JDNrJPsS+PRFFq6QcDv
      o9Vq4vH6WVycZ2QwzbXLF+kER+gLySQSSfw+H61mA4/Pj9XRcZCwHYHP46LZ0vEH/LQaDbx+
      /5EJjdgRQtCYnkZfX0f2eBCmiSedpu44XL58GbfbjaIorK2t8S/+xb/gV7/6FX/4h3+IEIJ3
      332Xqakp/viP//iJ5AN0p3t41KDdICyL+rVrWLVal3O6XHgGB1HuKaa1Gx5KADRfCL1eRsLC
      LctsbmaxzA6J1ACVcpFitcHJdIyLH11h9Llx5m8u0zc4hk+zUV0+xobT6JETlJaustGsghZE
      qDKOtYleq9HqdAgG/aRTvXx65QrDI6Os5mq89pWXCHh2VnGOws1CkgiePYu+vo7dbOIfH0cN
      h4lsxforisJzzz1Hs9mkv7+fVCq19TGJr3/96wghjjf/PZBUlcD585R/8xsEEHzxReQ9rNFD
      WoFkFNFGct3WwyUElm0TjvYQCwfJ5UsMDfSiGw79Q6MMD3yR7Hn9Ifr74tiiq3MiSURiCWKx
      GIl4mFy2wMDwEKajkgprbOaOuM1cCGrXr4Mso0UitBYXsSoV8vk8oVCIarXKT3/6U+Lx+LYN
      e319nVKpxKeffsqLL7540Fdw6CBMk/rnnyP7fCjBII3r13H03cvn3IuHIsFdEtjtA3Y7w9nB
      dkBRtmRKdAVCVTUs00DRNECgyArCsRGSAsJBkkAgYRlGV78Tgq1mioDAsmxURcG0LLStvx/l
      fADRaHTzAaJROpubeIeHEULQbDbxer3bBW1dLlc3qlTTkCQJRVG2E8D387qOdD7AVlK8kc0i
      aRqSqmLX67jvE4X71JZGPKwCIBwHs9VC8/vRazU8odCeCOaznBBjWRYIgawo3e6O95SD3A8r
      0EM7wpZuznD9xiTtBwxP2Kk0d724wVr2dppjqfTwneAPawJHbW2NzOXLlGZmyH7yCc3NzYOe
      0gPhoNdTCMHmxgbrq6tsbmywurKCZVkUCgV++ctfsrCwwK9//WsuXbqEEIJ//ud/3m4o/pvf
      /IaLFy8+0Pwf2gzaNgXnzpxk5uYiXsWh7Wj4PSpeTcaWVXIbG6QHBlnZ2CAQDLI8N8v5F16k
      XC7gCcQYHUyRLTawadB0myysZVE0F/Vykbaj4UKnXK3j8njpiUbI5KucOHV488xkkP8AACAA
      SURBVAF2gy+RoLa0RG1lBc3vx3tPRtIxdoYkSYQjETLr63Q6HcKRCKqqEolEeOmll5ifn2d9
      fZ1z586xvLzM6uoqhmGgqiobGxucvKMn2P3wSKEQlmEgCZtipcH62gaOoZMp1WlVSxiNPJli
      g9TQCVQE6cFB/IpBrtRtGI1jspnJkN/Mspwt8dzp53BhbH3XOqgeUvEg6aFRDMPB65ao1XZv
      8HDYYlduoVOtYhsGkixj6Tqd+8SlHCYc9Hre4kW35tJut7Ftm3w+z9zcHK+//jo//OEPyeVy
      TE1NUavVtrvE/OAHP6BYLGIYxpeO89AnQMjvYmktz9iJE6wtLxJN9JFOhHA3TTwYOMhEE3E8
      Xhc+uQejVUeXfQz2RvAHAthmhxdefQOv3KHVsVmcXySeSKGoRaKJPuKRAAo2iseNFg3RyepE
      wrs3yDisUD0evD09hEdHqczPox7Rys4HAZfLRSwex+3x0KjXkWWZdrtNq9ViaWmJzc1NBgcH
      eeGFF3j55ZcJhULk83mWl5dJpVIP5MV+akjwoS2NKEQ3TUCSsEyzO9YuT1Zh20iKgthq9cNW
      KY9nNRTi3q251/yKW/0EblkqJVne/1CIRr2GLxB6oH4A7Xb7ruhHvVmnUK7R09uL50sC3Y4s
      JOm293qnyrBbsAsF6j/7Gb4336T90Ud4Xn4Z1+nTXL58mU6nw1e+8hUuXbrEhQsXmJycJBKJ
      cP78eSRJ4tNPP2V8fPwLD4WjjkdRwYRh0Pj7v0cdHMRpNMA08f3u77K8vMz8/Dznzp1jamrq
      UQVAMD3xGQNnvoJqVinVOvikNqslm/PP9ZPJVRnsT7Cxvkmkpw9hdTBadfK1DidGBslnNvHG
      o8zNLtCfDGNJGq1qkWA8hSJZ6K02kZCfmm5SKxZJj4zh2SVt7KB11keFYxjY+TzVv/orANxn
      zgAwOjrKe++9x7vvvou0FQdfr9cpl8ucP3+ecrnM1atXSaVS+yoAR3ktofv0d2o1mv/4jyAE
      7hdfBCFIJBLk83nq9Tpf+9rXHo0Et8vr1C2VlaVliuUaPreEyxNkaHiItfVN+qMac0ureEIJ
      KoU8+Xye9VyBuNZms25hWx3WNzK4vR5W1zJoThslkCCbWSO3mWFjeZHphQ2q5QIDvREyxd2T
      4o86lEgEORwG20ZyuVC3wqRvdT7UdZ2vfe1r2zVEb6UHfvrpp5imycLCwgFfweGC5HKhptPb
      XTjUgQHYUrEURaHdbvP5558/mgCUGw7f+Pob9Mb8BEMhvF4vXr+fQmYDv8/N/FqRZDyK3+fG
      6/Pi8/nwaTIrhTZRv4Lb40GRZBRFIdHbSzAcoZxdRvP48WCTOnkaJAj6g7jcHryu++h7h9QP
      8KCwMhnsUgnv17+OpGl0ZmYQQjA7O0skEuHb3/42Fy9e5Bvf+AaappFOp8nlcnz729/mrbfe
      4oUXXtjX+Rz19RStFsbMDK7z59HGxujcuAGmycrKCqVSiZGREfr6+o5J8GFpkieEwCmXkaNR
      nEoFORRCUpRnmgQ/0lhCYNdqyF4vwrbBcZB9vq3wnCeUFP8kcZAcwLJsSqUqtu1QKlWxLBsh
      BLVabTsf9da/pVJpu82PZVnkcrltNUeJxbr/RqMHniNwWDmAEIJWPk+nXMao1Whtbu58UkkS
      SjiM5HIhe73Ifv+OBoh9EwBhNXnvg0+6jdBsm9WVVRzHwbK7m8G2LWzbxnEc7E6Tj99/n8+m
      ZlleWcWybOxOi6Zudt8jBIsLiwjHwb71ecs6tEdytdpgYyPP4uIaGxt5qtUGQgimp6d5++23
      aTQa/Nmf/Rm1Wo35+XneeecdAJaXl5menmZycvKAr2BnHEYhEJZFeWqK3JUrFD79lNLUFI5p
      PvT37ZvtcX15nf5UlGq9xtLCAoYlIdstPrs+x4Wz4+T1Ns2SSTge4oWz4wyn02gDQ2RnrzOV
      WyWcTNMRKvM3rhHuHSLqU7l6+QPWslWGT47isjp4+04y2LOzpeMghSMSCVIuV9F1A4/HRSQS
      RJIk3G43o6Oj/OxnPyMYDFKr1dB1nTNbFp54PM7s7Cyvvvrqgc19NxxWDiBrGuGTJyl89hkA
      0fPnUfaopt31ffsyKyEoVip02g1WV9ZRNA8uTaFca5JORuhYMHrqBImePgLeu3V0TyDMqeE+
      DBtsyyKRHmJ0KN2dnObl+Reex+vxMn5yBPshW+k8blSrdXTdwO12oesG1Wod0zT58MMP0XWd
      H/7wh7z44ovbHsxWq0Umk+G9995DluUdAwWPsTMc06Q6P4/sciG7XFQXF7EfIORhN+wPCRai
      G6+vaZimidnRQXGhSDaGJfC4XSiqgm114/9VVcW2TFBUhG2jSGAJkCQZvVVHdflQZJCEQ1M3
      8Pu8KLKELSRkiV1JsCzLBxIObVk21WqdSCRIpVInHA7umCd8aAjiHbhfOLTjOIeOBAshaOdy
      yJqGIwTCMPD19T10nsT+qEB3WF80TbvLEnNn5It8R6l0Rd16z9Zkbn0iELy7/mfYdfsbVHZv
      qHaQ+qqqKsS3ul7GH7L75WGEJEnMzQkuXhS88ILEhQsHzwskScK31QvgYYTtXuwbCc7mcnvS
      GTvtFkuL81Tv0/19LzisOutRhRCCd95xePNNh3//7wXf+Y7DX/1Vd303Nzd5++232djY4Oc/
      //l2DaRcLsfbb799kNPeM/aNBGc2M/g0wZXPrjN25hQbi3lMp40vGCGomKxkKgwP9VJpO7z4
      /HlWlpcZGT+N6NS4cmUKlz8A7Sp6B8KJMHanieqOkV1fwB3uRTOqJEfG6dvlCXvUQyEOGyRJ
      4n/8D7ilXts2/Lf/Jvjxj6Gvr4+JiQkajQayLHP9+nXOnz9PMpk8ck389mW2RkfvNkHOF+mJ
      Bak22gwMn6Cnp4dYyEe9pTM6OkSkJ4FL6DR0C59bIV8sU69VCUSTSHa3ItxQMo4pq5w+M47V
      qKO4Q/QlYoRivaQTx8kkTxLnz9/9+vnnuw+YiYkJrl27tq3qPvfcc2QyGW7cuMHExAT5fP5J
      T/WhsS8kuF4tYeHC75YoVppEoiEUScW2TWRZRhIWuVKDRDRAodIk3ZdEQpDd3CAQ6aFdL+EN
      xVElgQxYgMelYRg2zVoR2RPE61Jxu91PrSf4fmMdlCe40XD4T/9J4913BS++KPGf/7NEIrG3
      TuwPgsd9jff7zHEoxLEA3DcUQtNcsFW4/kFUzEe9xm6ZSXmbz21XGdmnsR7MCuRYlCpNYrHb
      FplSsUQsflsFMTstFhZX6BsYJhy4I8a/1UDWPMiSTKfdxBsMbutZm+vLNE2FsZEBJLrhAcFg
      cMcpmKa5p818zAH2F7fWsvvPk1lXy7KZnc3g97sxTRsh4MSJJNVqlY8++ohUKkWpVMLr9aKq
      Krlcju985zu0Wi0++ugjOp0O3//+9/c05i6RWSaraxkM00ARDrG+XlZXVzFNk6DPhan4KK0t
      EOoZwOOCqWsTGMJB0dykkxEatRVuZkyGogotAcMjpwj7NVbXs5w9/zy1YpbVQh3ZbCGQSfX1
      ILw9mI0CzUoJTyTO9OdXOffiKzQqBdyBGOhVlGB8VxJ8jKMPWZbwel3kcjUA0uloNzk+HObc
      uXOsr69vN7jWNI3h4WEKhQJ9fX28+uqr3Lx5c+9j7vRLIUBWJMrlCrVyGYfucV8ul+m0GrQ6
      JiPjZ7GbRRZXVvAE4rjcbmJBF9VKGW8wxsjIMG6Pn5MjQxRzayyt5Th/9jmmJq6zmqtw/rmT
      ePxBxkZTVDc3qek25XIZWVYwOhbpoSFCmk22WKPVbtHQLVL3IcHHZtD9xUGspxBg27f9PLbt
      IETX7Lq+vs5rr73Giy++SLlcpt1uU6lUtrWEq1evcuHChT2P+cUTwDaYmV1gYGiMcmaJhg7Z
      1UWCsR58ksnqZomh8STVYo5aUyeRSiM7Mj5LweNScXssvMEw2ZtLpPoSqKqLWE8vkaCPuakp
      /NE46Z4AN2bmScYjqJqHaGqQ5fU5/KEgmB0kWSHi91AzFeJhXzePINLtGXy8xZ9uOI4gnY5i
      mva2MCiKQr1e5+bNm+Tzed544w00TWNzcxOXy0W9XufcuXN75n/wFJHgw1oZbq9j3Xs7bj2J
      n5VQCNt27ui1cCuNWtpukveoYz2x/gDOVka+xO0uijsRVSGcLeav3JfxPwsQjoP+61+j9PYi
      DAOn2cT9xhsHNp+DMCrc2gOSBLquU6tUiMRilAsF4olEtznGPuKxCcDSwhSGFCLhNZhebzE+
      2ke93qC/rxdJkcnmygz091HNzDNfgsHeKMFwBGwDo92k7ahE/G6KxRLJVJrs2io96QFcyi4l
      RY7WQbYjhK7TuXYNO5vt5rEODeF69VXY55v+QHM5BJyq3WxSKZWoVSoIIQiEQkdHAGTVh2Lq
      lNuCeMBNoVDAMZpMt0wUo9oNAfaGCG5VgEaClaUlJASaZLK4mqW/r49YMsrK3DT5pk0gbuDy
      Pb2FpSSvF/fLL9P62c8AcL/6KpLLdeAb8aAQCIUoF4tYloXH68W71WdtP/HYdA5ZUQj5FCw8
      qKqCqqoEIj0ENAfN6ycQ6yXmdyPJCrIEDipCrxCIJajVWni9bjS3n1AwiOb241dNyuX7V4U4
      6n4A0WqhX7yIMjiIkkqhv/8+otM5kLkchrWsVSrYjkMgGKSj6zQb+18V5JgEHyYSLATWxgZy
      MIiwbUSng5xMPrPl0R3HoaPreLxe2q0WXp9v38ujPzXl2I6YHANgFgq0pqaQNA3/Cy+g+Hyo
      /f13ved+PW4fJw4DB5BleVvt8fn9e/qssG30K1ewMhlcp07hOnNmx1NtTwKQzyzRJkQy4DC7
      WuWFsycAWFtfY6B/AADL0DEcBd8dvbw2VhaoNHTSQ2NEAl9sXpbLZkluJTncDYf1tU0kySHo
      ceN4wwQ9T4fM2vU6hb/7O8RWvHFneZmef/WvmJqeZmZmhgsXLrC8vLx94um6zu///u9jmia/
      /e1vsW2b3/u93zvgqzicEELQfOcd2u+/D4D+ySeE/vW/xnX+PB999BHz8/PbDcz3tJt0Exrt
      Ik5LICO48fknNC0XAb/G4sICyViAjUIDfyDM5Ooc7kCM50+PUmnaRINeLL3BZzen0TwBFLOG
      P5qkWizS6Ni0GxUq9RbJeLhbOCscZHysn3q9gSzZuISNowUIPiWHVmd9fXvzA5j5PHa9TiqV
      4tKlS9TrdSzLwrIsQqEQw8PDNJtNIpEIyWRyzyrRXnHL9n5UYdxZaUMIOlNTuJ9/nr6+Pqam
      ppiZmcHlcu2dBHs1aFoyqiQolKrEIiEEkO7x8fGNFeIhD5blkEwNEvCogIKpN0n0BFld2SQY
      TyHZBm5/mP54AHc4QTToo9UxGUr10Gi2GRwbR5UerPPMLRy1YDg1fHfq5636NSsrKyQSCSqV
      Cj6fj2KxSLlcZnJyEsuymJub4+LFi0/kWo/Set4Lpafn7tfxOEIIVldX0TSNZDLZjSDeCwnW
      9TaKBLotIQsbs92gbkpEQ34Cfh+lUplQwI/pSIADwsHr9WG0GyyuZhgZO0E5u4onlMStCrwe
      L9nMGkILEAtorOcqDKZ7sCUXttnB5/XQbLYA0BQZVBeqLD0V4dBCCJpXr9KcmEDSNEJvvIF7
      aOgLn7mli9851i2v6P026LNeGc4ul6n//d9j5/NoY2ME/+W/BE07zge4Fzstom0LHKebr28Y
      ApdLvquo2H5agYRtdz3mu3zXQecDPG4BcByxFf4AjiOhqnev9aOMJYQAywJV3X5YPAYrkM3C
      7E20YJSBvkRXd3RsWlvlTO6F43TDHsx2E1v1Uq8U6emJ02i0CAa/WPTKsQ06hoTX+2S8oY4j
      eP/9BuWyxeCgi+lpnd///QjB4OPRuQ+6BOJBols9r0KzaRCNutncbPOVryTw7JOhQ5KkL/Wi
      78NIFobtwiwXaAQ0lpc3GBwaZHrqBsnUMGEPZMtt+pJhKuUai4vznH7+ZXqDsLTRoLo6gyyd
      oKK7WVtZJtrbj1kv0MFNb8TD4uoyoVCaZqPMwOhJgrsIwn5xAEmCQEDm008N5ucNhoY0VPXo
      6sIPiyel/3s8MktLOrmcTjzuRn6QTiv7iH3xBGfXFig0DXIbWcZPn2BjLUMyPYjVqjO3sIDZ
      qrC2kaN3YJh0/wDpZBzFG0MvLJAYGWN6ehW3VaN39BTlzRWatoLqtFjeLHP6uRNItoWQZAxj
      9xqQ+2m3Vu6IN5Jl6YGP5KcJT8oPcOeG7671kRMAmfFzL3AiFSUQiTAzNUcilaJVKSJ7/Ayk
      UmjeIIlEDx5NIeT3sJErARK+YJhkso9ILEJfqpeNhRkC8RQu0aFtayQjXubm13H5vCiS80Ru
      iBBQKlkMDbn4xjf8NJsOhnGkaNKRQqNhEY+7OXkyhK7bWNaTdfwdk+AdiJRlCRxHoGkSui7w
      eG4TMyHEdnj3s5AUv98kuHuy3I7z7xocuiTYtkHTlH0jwQ/ymacmAH8//QCqKm1ZfiS83tub
      v9m0uHQpz69+leHGjQq23X12FItFTNMkn88zPz9Pp9Phww8/ZGNjA4DPP/+cDz74AF3fnyp4
      TwKPw69Sr1v84hdl/tf/yvPBBzVsW6AoEtVqGdM0sW2Dq1c/Q9d1PvzwQ9bX1wFYX1/nww8/
      xHyEMui7Yd8F4MbEBLqhkysUcWyLcqlIrValWm9idtqUKjUsQydfKG23AGrmV7l8Y56FuTlu
      LtykUChitusUCnmuTUzTMS0K+QK2s/th9bh1ViEEn39eIpfTabVsFhYaLC83MAyDX/ziF5RK
      JT755BOWl5e5fPkyjUaDaDQKdAtHtVqtI+VY2u/1FELw/vs1VlY61Os216+3uH69iWEYvP32
      25TLZX75y18CsLCwQLVa3V6/jz/+mJ6enkeuA7oT9l0AhCOolXLcuPIhCysZMuUyU5PzrK2t
      8fmVj7ny8SUmZ+fI5Es4AoKaxELZJO6VsACr3UIvrbGWK1HTTTqmxebSLNdvTDC9sL7f031g
      OA40Gnc/gWo1A5fLtd2uNBAIsLKyQiqV4tSpU7z33nsA270C3M9wk2whoFy27vpdqWRtr58Q
      gna7TbvdRlEUzp49y7vvvgvAN7/5TVZWVshkMvs+r30VgFxmlZYN5WKZnliYjuEQ6+khEo7g
      9bjxBYIMDo+SSiSoZjPotkMsEadcrOBVTSzhweMLkIiHsIWE6vLgdJo4sko0niSViO7ndPcE
      WYZE4u5Avt5eL81mk6mpKSYnJwkEAqTTaTRNY3p6mv7+fjKZDGtra/vexO6oQZJgcPDuB8DQ
      kJtWq8Xk5CSTk5OMj49TKpWQJImpqant9Zufn6fRaBCJ7H9JnKeGBD+JfADbFszP16jXTfr6
      vPT37y1E9yiR4MeRD2BZgomJJuWyxfCwmxMnuo7SgyyN+HSEVvJk8gEURWJ8PLwdClGttmg2
      b2dsaZpCT0/wSOn6u+FxcCpVlXjppZ1bXGWzjW2jAkAo5CEc/mLo/H7jsQtAJbfOar5GX3qA
      RDT4hXyBTi3P5FKOvr4UquyQuCeK7zCjUmmxuVndfu3zuejp2bnU4zF2hxCwtlZF129HAA8N
      hZ8OAdCbNUzR9fJ9+tEHJNMDqO4As1OrDI6exGM2aZkOkiyzsjjD6lqGWNiN4bgQnRptUyYS
      dtOsNogPjZMMfzG+6BjHeFg8dj+AorgZP32GeDhAJNFH2KfSqhXxJ4cJBzwgK5w4dZq+ngiR
      eC8Rt0LLUTg1NogtNGIemaatcObUMK3O7nbgo5YPcNjxrKznYz8B/JEIS7NTJFID9CZ7cWkK
      ff4E5ewaTd2LzxehuDiH6OnDowK+JMmgB1DoS0ZomAojYR+SSyMZ3v2GHASXVxQZl+v2Et75
      /6cBT3JNXS4VIW7f352aDD4OPDVWIMMwthZQxeW6FcLw5YFsj5IQA19MG7xfQNdRsgI96YSY
      bk7AbYVEkqQvjQzdMb/CcbpOG0UBy0JS1bs6xD9WK1BHb6O53LRabQKBvZkIwaZYrBGPhWm2
      O0hC4PM/eCEkIeDP/1zw0UcOb70l8d//u+DP/1xmcPDxHePdG/T0qwlPArIsPXJpTCEErStX
      MFZX8Zw+Teuzz4h8//s0JYmLFy8yNDREqVTCsiyee+45rl69ur8CUMxnMEyBL9ZLafEmWiCO
      bNZpOxoBVVCo1BkaHmR1aZnkwDC13Cqm4uPkyCD1fIapxQJfC59hZX0TyerQl4iSq7bpifjI
      54r0j57E59r5Sdj1AcA778D//b+Cs2d5JsOY9wtHVv+XZToLC3Tm51F7ekCSCAaDpFIpstks
      GxsbjIyMEIvFOH/+/P6SYNvQWcuW8CltllYL5PPrzM0uksvlqdZb9EVDFEpFOqbF4vIqhpCQ
      nG5lhOW1DWSjymbpdtf02bk5GuUcG4UqowMJcuX7d1Tv7++efI4D8TgEdjY5H+MBccS0YwCU
      YLDrthcC2edDcrkwTZN4PE69Xud73/sejUaDhYUF1tbW9vcE8IdivJIaJlcsEwt7CEUSeCQB
      7jABnxu3x43arCEpCgGfj5BPQ2zp0ZFEmnMvJFnP5An4fUi2htcl07YkQuEgqsuNz7O7vDpO
      t6HziRMy3/2uxE9+Ishk4DF4z58JHMXND2CsraFGo7hPnkS/cQO7XqftcjE1NcXZs2eZnZ3d
      5ju1Wu3pIsGmKaHrKtGoRC4n6O19vCT4OB/g4ce9E/t5jcKyEIaB5PXiNJsofv99SfBTlQ/w
      X/+r4N/8G4e33rL5t//W4T/+x+5GvRVlqOs6S0tL227+1dVVcnvscH8YkM1mmZmZod1uMzMz
      g2EYrKyssLCwsP2e/7+9M2mOKzvu/e8ONc8oFOaJAEESJJvdJJtPasnRQ7gVT/JCER0Mr+21
      7Q+hlff6AF5o47AlSx2WLFttPUst9yCOaJLNJsBCAVVAAVWFQs3Tne99i+LcACcABAnivwEL
      uId5TtY992Tmzcx/o9G4X39w8SJ8+CF897vwz//8VDIEQWB1VeBv/sbmvfcsfvpTG9Ps6klV
      VTqdDpqmkUql7j0QyuUylUplZxf7jBBkuWv6CAJSMPhER3DbJlBu6RsKTQhFwkwMJdBN8Lhl
      ZKnLEqnjxiVYZHMFpqcmwdK4lVzl8KEhbEGmuL5GT08Cv9+LqmrILjeOqeOILiTBwrQF3LKE
      qqr4ntAfcn4evvji/mePp/uF/eEPf2B0dJRCoUA4HEbTNKanp9F1natXr3L+/Pld77S2k/ji
      iy84fvw4nU7nTp79ZxQKBb7//e8D3Sfqxx9/zPe+9z1mxsfho4/gbirx3/5tlwH7Cdmptg1/
      //c2Fy92n5E3bzqMjAicPw+fffYZsViMUqlEIpHg+vXrvPHGG1y4cAHbtvnRj360K7n7u4Ft
      z9JBZPrYDPlMkvzKEjfmM0wdniIe9tJSDCzZi9ZqYTr3az11XWVubr7bGl0Gq10Ffw/lpoFP
      tmgU84wePUk1n8VxBCSfC78IQmSUscTmnu3jkrfOnDlDuVwmFouxsbGBruscPXr0jtlkvFIR
      D8dxOH36NLOzs7z//vssLi7S39/P0NAQly5dYnR0lE8//RRFUVhaWmJGFO/f/ACGAV999cQN
      oCgCt28/KBdmZx3Onxc4ffo02WwWv9/P8vIyJ0+exDAMent7sW0bwzBemQ2wbRPItgyWM4vY
      ootqvc1APEjfQD83kmsMRL3dlt+m0T0mLZN0eglfKIxjW9g2eHxBxof7MCybgaERfB6Z4dFh
      VrOrOI6NZdu4PD7GRwaxnWcvmHYchytXrnDr1i1CoRCGYfDmm2+Sz+fJ5XL4fL5XzgTK5XII
      gkC5XEaWZSzLIpvNEggE2NjY4IMPPuCjjz7i5MmTMDEBhw/fH+zzwZ2T4nHw+WzOnr2vF1GE
      d98V7ulzbm6u273Z58O2bRqNBrVajVqthte7+0lsO4VtO8G2ZaIbFh6PG8sycRzufCk2kiTg
      OAKWaSCIUtcs0rtVVJZlAuK9tiOOA3f/YVkmgighOA6200056DZrBXC2rAf4p3+C69fv7+kT
      JwT+4R8ev8dfCyd4YQH+8R+h1YK/+zv44IN71z2uHqBcdvjpTyUyma4Vdf78872dfRL2sh5g
      30SB9gVBxhay9ktBzMNyQVFMcjkFl0tgcND7zLlUr0xXCEtrsl5ubvq3bDpJS7Oorq+wWqzR
      bD7+ZddWeBkIHfYTdlufmmbx6afr3LhR4+rVKrOzXSK8crnMz372M0zT5OOPP+Z3v/sdmUyG
      X/3qV0DX/Pv1r3/N5cuXd2QeL8RTsfQ2G8UOhdUMgUgMl63Q1ByOH5tG03WKhXWczga6S8Du
      iFSqZWRJRmlW6RgisYibRq1JYvwIvaFXx748wNbI5xVU9b5Pl8spaJpNPB5naGgIXdexbZt8
      Ps+HH37IwsICALVajXA4zOLiIqdPn972PHb9BHAcB9MwMNp1ekanMDpVMpksjm3jOCC5/Vhq
      FUH2ATYdRUdvFNEcF4YtEXND3RCYOTxGS9G3lPO65K+/KOy2Pr3eh006WRaQZYFWq0WhUEBR
      FCYnJ4lGo9TrdQqFAvV6nbGxMXw+H319fTsyj10/AUytzUpJ443Tp1hZSpEYnCAei9LSBURB
      IB7vxdE7yMEoumaAZSFIcWzLxJKCtEyR8WgQwe2mN3xwg+8X9Pd7mZgIkM12kCSBN96IIMsi
      juPwzjvv4DgOfX1993oq3f2d2+1mYGCAkZGRHTHR9o0TvNcEGXdJK+7+3ElZ+zkVQtMsRLEb
      Zn1wjbulz111gh3bJJ/Loermt/7WrFfoqJuXNFY21ilV6ziOjaLsDS/udtDpqGQyOVothUwm
      R6ej4DgOFy5c4MqVKziOw+eff45t21y8ePFeikI6neb3v/89zebmAYLXAR6P9FA3bgBFUUmn
      7+ozT6ul7Jr8Hd0AK4u3MUUXnWaZ//l/f6Rab7KYWqBWq/D553+m0axz/aL9MgAAEiNJREFU
      O5lE0TQyiyly62UA1vJ5tPo6uWKNtqJSzGdZWFxGVZrMz89TbzZJzt+mtcUGgr31ASzLotPR
      yGTW6HQ0LKt7Qhw/fpz19XWWl5f5+uuvUVWVWq1Gp9Olferr6yMYDO5Kx7PtYm/1aaOqd/Wp
      YFnPxhf3LNjRDTA0dohWOU9DsRkeHkGt5qg0WhTKDQ5NTtOulBgdHSSTyWDYLpRWFQCX28PQ
      6BDtapni+ga1jglah+XVHGOjvayvrNHSDLTHFMXvJTwe9x37FWRZxOPpmg0XLlzgO9/5Dtev
      X6fdblMsFonH4w+NFQThlWqa+yLgdruRZakbJJEkvN5nM8OeBTu6AdrNBjYikiTjmG1wB3DL
      MvFYDL/PRywaIrWQJtrTQygUxO/rljzqSpNv5pYZHh8iEAhgKU0KpRohv4dUKo0lefC5QFW3
      No/28j1Au61gWTaJRAzLsmm3FUzTpNPpkEwm+fGPf8z58+fp6elhbW2NZDJJPp9neXmZRqPB
      yMjInsz7cdhLfXY6CqZpkUjEsG1nV02gl88JdmwySykM0Utf2MtqYYPxw0cJerqOy8voBDuO
      g66buN3yvZ+bmQ8HTvDmeHSND+rTMExcrp3T58vfGlEQmZg6cu9jJP508d69tFm73Z+7G+/u
      T7hTpF0s4goGsQ0DyzSR4vFX4n3FXhJlP6hPSRRoVCqEolEa1Srhnp5nTkF5HLa9ASylztVb
      i4iSi7NvnryjNAfHEe5QX3Y5bm3bJreWIxKNEAoF75AjiJhqk29up0kMjjDYG+1ShgrdcZ1a
      EcufIOKVsCzrlcrZB7B0nXIqBYKAY1nIXi++WIxkKsXCwgL9/f2srq4SjUbRdZ1Wq8UPf/hD
      XC4XP//5zzl9+jQzMzN7Nv+XYaM2q1U2cjnqpRKaquL1+/H6n75byJOw/XoA28IwLSRbYGnu
      JqYvitQpcStb4cR4Px3TIhQOUal2EASRdruFYOuYmkr88Bms9TUmT5wiLKpc+eo6yC5CbgdN
      NQhGghQzGxwejnD1VpbvfufcliyRL5slByB7PERGR6mkUgCEjxxBlCQOHz5MNpslGAzS6XTw
      er1omoaidG1d0zQJBoOUSqU9m/vLklsV6umhXi6jqSoenw/3Dqda78hZEgpHEUVweQNMTQzT
      VEwiQS+y28/U5CFsvY3LF0K+E+91+0NMHxrCtBwiPRFWltJUqnUklxdJFLAd8Pvc2Aj43C4s
      KcB4f5D1jepOTPeFwdQ06tkskseD6HLRyGaxLYtPPvmEaDSKqqqMjo6iKN1QXzwep1QqoSgK
      ExMT1Gq1vV7CnqNZqaBrGm6vF01R0Hc4YrZtJ9ixLer1OrLHh9ftQpJl1HYLCwmv24UoidiO
      g9Ju4fL4kO50TpNEsJCQBWi3m4iyFywdZDduEdqqQdDvwRFELNNA6SgEwmFE2NIJFkXxpUqH
      dhyH9vo67mAQ644PEOjtpVqt0mq1SCQS1Ot1wuEwtm2jKAqRSATo1tdGo1E8Hs+epUPbtr3n
      RfGmadKq1QjFYjQrFcLx+D29H9QDPIDt1AMsLzu02/czE6NRkbGxraNJB/UA25f7IGzbptlU
      MYz734EsS0Qi3sf6Ia9EFGh9vUh//9aRHNNQUDWRYEBmKZXCE4ozPPAwR4DeqmN6Q/jlrW+4
      7ezj//7vDouL99M3zp51MzoqMzs7y9TUFOVymaWlJd5++21mZ2cZGRlhenqaa9eusbq6yrlz
      5+jv739u+S8jXrQPUCg0KRbv14KEQh7efHOIy5cvo2kaZ86c4dq1a8zMzHDp0iXOnTtHOBzm
      5s2bFItF3n///eeKDu36BsgX8thGh3JTpy/so6rZ+EWDpgaJiJe1fJ7ewaOotRy+3hH6wx4W
      5r/BFH3E/CIb1SZ9IT+KVyPkCxALvRh+ANu20XWdSqXC4OAgrVaLjY0N3n77bS5evMj09DRv
      vfUWnU6HUOiAFGO3MDMzw5/+9Cfa7TbVapXr16/zzjvv8MUXX/CDH/yAdDqNKIq0Wq1vnWJP
      g12tB3Ccbsffeq1OodBNbhofHySTWcM0DSqNDkcOT9yZRPdpY5sajsuPB41iTWV6op/iRpXk
      QpqA/8UVw0iSRCKRAGBhYQFZlhkeHubLL7/k3XffBbpml67r+HcwLPey4GUIgUKXIvXs2bMk
      EgncbjenTp3iz3/+8wMdusHv99NuP18l4a6eAMuLSYZGD6FUCwy6/MQTCVySi6mpMTqmRG/I
      w0quzNDwIcKBcZYWFlgPx/FJNqY7ynhcZGmtxuTRwxxye2k2msRjm+/y7bwIk2WBB01dSRLQ
      dZ2FhQU8Hg9utxtVVe/JSKVSxGIxZFnm3LlzzyXzVcCL3ASCwEMF96Io3KNOnZ+fp91u02g0
      aDabiKLIe++9R6FQYGxs7F5/oueSu1+c4O2kQmia+BBBm8vVZYh/3BxgfzvBLzoVwjAsHmw1
      L4oCsizuiBPsmCaOpiH4/ViWtXtOsGmaiALYjvDMDB+maSBKMpZpPvNNvF0EAvumQ+QrC1kW
      d+VNv55M0v6Xf8Fut3EfP473r/8a1TT58ssvmZ6e3lkfIJtdIZ1KomgqyeRtFF2nUixSa7RY
      Wkyh6iZrK2nqLYWN/CrLK1mWljJYDqyuZFANm8VUimaziaF2aHXarGTSVKpV/vTpHylVX9/C
      kQM8OxzTpP3LX2JXq6Dr6NeuoV2+jCiKnDhxghs3buzsCdCqb2CIYYZMBUXVSC7MY7RF+mMi
      lbZO5asrqI6Iv6bgd0lousJwPEBNBSyd5PwcjWYbWGMw6mNds/C6wlRKVfr7B+iNhR5yfh7E
      QVH8zmI/6NIxTZxHnGO7Xsftdne5AWR5Z0+AWGKYkbif1UIZ0eXG45YZGBogGosiiTKj42P4
      PW76+xMEQyFC4Qherw9JAJcvyLGZGUYHE3gkh6VsDpfLSzDgx+fzINj6Y0+AlyV3Zb9gP+hT
      8HhwP9A6RfB68bz1FqVSiVKpRH9//4ETfNAZ7uVwgndrjY5pot+4gV2p4Dp5Enp7X/J6gAMc
      YAchyDKeM2fufTbNhxs2bNsEqq6vcPXa16QyWXK5bnF3p9mkml+h1qiRKVRoNlsPjcmsrHSv
      azcxHzHp87ncc83jwAfYWbwu+tz2CWAYOv5gGF1Tqa1vsJpbpyfkJ+hxkDx+FE0jX6uTUebQ
      LJETp95CudMVoZTPIUoCxbZB2O+jWaujWQ7VYg7H10MiKHD95m0mD08Ticep1zscGh3YdB6v
      mCX30mM/+ABPgx1wggXcHh/TU5P09A0y0BPBeiRSYzs2Hl+ASNCH7Tg4jkWz2epeJ8gcPjKD
      ZDaR/VECPg99g0N0GhXWyw0SUS+eniEWvr5B32OS6g5wgOfBtk+Anv4RekQXsiQyPDSMQPeG
      l0QQRJlQ0AHbZmlhjoHRKQIemUNjo5QqDfpHJ5AlEckl4JmYQWnVQU7gFi0OTU0T8Ai01RH8
      LpNyrI+gV+4ygR/gADuEfRMFeqX4ARwHS1URvd4uo6EkIWwxh/1eD+A4Dppm4XIJmCa43Y9P
      f9iOrM3G7GoUyDY1kskFDFvkyMxx9GYFTyhKu9EgFusS+NaqNSLRCLV6HVmSsEwTfyCAy+V6
      JifsVdrHZqtF+b/+C+/EBPr6OnIkQvQv/oKFVIp8Ps+pU6eYnZ3l6NGj1Go1Go0G77zzzh3m
      xlWAF9JL6EXodG2tTSpVY2wsxPJykxMneujt9XLlyhV8Ph+JRIJUKsXp06e5cOEC586dIxQK
      cePGDQBOnTq1LWd9VzeAKHsYHeylonrxSCC4RRbm5wjG+ojFutesra7icsvkCgV6olHq1SrV
      cpH+sWkko0XblOgJuSiX6wwdmibid2NZ1rfCWZZlPVfk4nna7t11EJ/1BLgry5FlhEiExs2b
      IIpEpqawbJuhoaF7VKNnzpzh4sWLnDlzhmw2e+89x9WrV+nv72dgYPNgwPOsazN93j0BHv39
      067xaeH3dzuGJJMVfD4Zj0fANE2mpqa4dOkShUKByclJ0uk0Z8+eJZ1OMz09Ta1WQ1VVpqam
      nomT7NH57boJZJkGliPgdnX3WrNeJxCOcDfztVou0mgpROMJ3LKI4Dg4goDX40HTtC5PmCji
      dUnoFrgkkUqlgs/3cGHM3WU86wawbfuZb+T9JqvdbhN4hIJ2v61xqzH7xgfYr1/YbsvaygfY
      T2t83Jh98yb4ee3A56kj3a+y9krui5T16BjpJz/5yU+eS/oewXEcDMN4OEfFsVmYv0VTs4iG
      n1yfW17PUqzp+CSDW3NJPMEIa5kFai2dWHTzirNWrURqcQlb9lJYWaTeMXC0JqnMKrGeONJm
      9KG2zu35JJVGB0dvs7i8RjQcJDk/jyV6CG5V4uk4ZFPfYHlj5DJJqi0dwWiTSmeJxHqQpc2+
      eIe5m9dpqhaO1iKVXiUSDpGcn8PARSiwdS21rut4PJ4H/iubVHKOWscgFnmyPqsbaxTKCkGX
      xTe3krgCIQori5SbCrFIhM3u706jwkJqEUt0U1xNU2npiGaHhaWVrddoGyRvJ1EMqJVyFMpN
      fJLFfDKFP9yDx7VFpMxx+ObmDSLRKMn5OUzBTaOUY61YfTEskbsNs1VEjI6iK09XLxCIhFCb
      HbK5IidPnaSwdAP8CUx967pSf7iH4YFemsUMQmgQQ2tRqrc4OtJDbgsGTEQ3kZAfVVOpNNsc
      GYpw83aKgYljNKobW8pSW1Vq9TrNehn8CSy9TanW5NhEP/nSFs2ybJ1WUweH7rzGepi/PU/v
      2FFa9WfrMGd1KgjBAUyt9eSLAV8ohNbusLy2zslTJykuz2N5omAqOGxuYXuDUUYG+2iW17D9
      vV0ixWqju8aNLdYoupBFCaXTQrNlgi6ThdUSJ07MUMitbjm/jdwyimFSLubpnzhGs1airVsk
      /C+IJnW3IUguDK3bUvtp4PV2n3YSDoqq4IgeDE19bMSjXipQUWByYhRD7bY/t00LRdOQNn0i
      g2OZRHr7MZQOlmmiqDoet4yqKfdINDZDcaOEoauUKrV787ItC0XVkMTNn3K2I3Li9Ju06uXu
      vNQuIbmmKliPJlw9AYIkP1EfD+KuPmXBoaOqOIILQ9cwja3HNyvrbLQspiZGMR9Zo/gYfQ6N
      DtFqNjANA103kAUbVe3gCFtZ8w7laoNmpUS91UFVu7o3TRNVM/aHDyD5ewhLGVwDTxcbX0ln
      MSyT0fEJctk1Jo+dpLa+BtGhLcfYgNKsUg4ME3UbiNFhwh5YXa8xeSi4xSiHXHaF/uFR4kGZ
      tY0Gx48eYSW9xMjYxJayxiaPMDQ4iCb5aW105xX1iWTzFQ4dGtx0jCCIbOSXSQyOEPNLrK7X
      OHr0KKuZNEOPkbUZRG+EqLuOGB1+qutXM1kMU2N0fJJcNsuhIzM0SnlseXBL+95yQGvXKLX9
      xHwORIaI+h+/RgTIZtcYP3QYtAYdW+ZYT5D08hqHJie3mJ3AsZOnGBkfx+sPsppJMzw2ga3U
      aKj7KAp0gOfDVlGg1wX7wgQ6wAGeFwcb4ACvNQ42wHNAe4CrzNR1zEcyVB3Hplat0Fbut/K2
      TB39KZ301w0P6dPQMa1H9elQr1Vod9QHxqjYO2C974/3AC8Yv/3Nf9DXE+R2Jk954SZ1dwAM
      i0xqHncohsvq8It//4T0UorhwT4W0mu41XVSJZNmOU+jrfPJr/8NX7Sf0loay+Un4PM8WfAu
      4VvvAV4wfvub/2CgN8zc0iqtldsULA+iZZFdmkfyR/EIJr/45b+TzSzh8/spN1SW528i+/ys
      ZpcxTYN//ddfMDQyymIySbinF9djGik/iIMT4DlRXF/n68/+h1xb47e/+R2lpVlmF/J8eeEq
      AGqnRTAc44+f/i8hs8jlW2k28st8vVzn+tVL+MNRDg0EmL258K2S0dcRxfV15i/+L5lqm//8
      zW+pr97gwtwaX164DIDaaeMNRrn01RLpaxdYq1RZujmLIri5fG2e3t5epHaRpdzGQyfvk3Cw
      AZ4R6eRN/LEEuXyent44Xl+I//PmYSqaC59L5NiRKRBEpo+9wV/9379kuC/K7dUqo4MJ/D4v
      8WiEQDBIIhIklS0zPhJnKZ3d62XtGZZTc3gj8Tv67MXrDfLO2RmKLZGAW+TYkcMgCEwdPclf
      /fAHxLwaHcFHPBTA6wsSDgUI+P14RIuW4yXsUlktPD2T0EEY9DXHQRj0AAd4jfH/Afd+lpgJ
      85hUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Historic P/Format' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Offense 25+' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Offense 25+ (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Offense v Blitz' width='192'>
      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
      BVhLKygvKeeN9uMsPX1KJPHqZQyoVCoMBgPwTBZM31WsVislJSVUV1fLHYfT1txM7QoHoNfr
      5e5vn02KTyaT9Pb20traKne7y+SIJFEU0Wq1nDlzBrvd/rmxqlQqdnd3EQSB6upqZmZmUKlU
      FBcXMzc3Bxw5AbS8d6mNnvs9lDe0UFBcSWlJMRVFeRSU1VJcVER9pZXi6joKTFZsJRoWnW4C
      0ThF1pLfap34KpJOip+enpZtt5ubmygUCvx+P5OTk5jNZlwuF0VFRdy6detz7QUzCbfbjd1u
      Z3R0lJKSErq7uwmHw8zOzhIKhVhYWCAYDHJwcEAsFqO7u5uKioqXPezPoVar5ZN5q9VKPB7n
      7t27lJaWsr6+jiRJBAIBIpEIVquVoqIi2traWFtbk1unZJPis7y2ZJPis7zWvDApPhGPIUqg
      1hydAp9KJlFkaM/4LFm+KC/sDfpf//Tf0Nx2koBQzh9eOYMogUqlRBRTiBJ88uGPuPDN71Bo
      0CAgkRKl//e6iAQIkoQIqJSqV0IS/awM2tzczJ07d9DpdJw9e5b+/n5ycnLo7OwkNzcXj8fD
      2NgY9fX1HD9+/GUP/Uii0Sh37tzh4sWLhMNhpqen0Wg0tLS0MDY2hlqtlmXQiYkJPB4P58+f
      l0NCMgVJklhcXGR1dZW2tjY2NzfZ3Nykq6sLs9lMPB6nt7eX3NxcysvLmZqa4sqVKywtLdHS
      0gK8wAxnKLDS+UYrvu1tJp/088Ff/Q/sjlX++q9+xNDoFEkJph9383hynp//9Cf87Yc/YmR0
      hH/77/+UG3d7+N9//r/oGxgi+ooIQqlUioqKCqLRKJFIBK/Xi9lsRhAEtra2MJvNskq0sLDA
      +++/j8fjecmjfjHpiKBYLEZpaSkXLlwgHA6Tl5fHe++9J/fZTxfNX7lyhenp6Zc97M+RSqWY
      np5Gq9Wi1WoJBAJcuXKF+fl54Fm3C0mSKCgoYH19nfb2dh49esTGxobcyvLICXC452F8bpd/
      /p13mZx8So4qxfqiA215M291tqNKhhmfddJYqmN6xYOltBpLbg7W2pN8+2uX6TjZyPraOtFX
      RBJVq9Xk5eUBz1LWv/vd7wLg8Xj43ve+h0qlknXyr0JSvNFolIv8U6mUfNcXRZF79+7R0tKC
      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
    </thumbnail>
    <thumbnail height='192' name='Opportunity' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Points Per Target' width='192'>
      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
      Nf8X92szNPgzyawAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Positional Scarcity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='QB Adot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='QB Adot SB' width='192'>
      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
      Z3dPAiD87RsTaY/rWHUTZAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='QB Pocket Time' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='QB v Blitz' width='192'>
      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
      LBaj2WzSbDbp7+8nmUzidruRJAm9Xo8oisRiMXp6ejq2SS4Wi2QyGfR6PZIkYbfbaTabOBwO
      Go0GarW6/X2ltHqt1Wokk0l8Ph+pVAqTyYTZbCaVSj0Reu4klUrlyT7BSonPXnHF8+KSFygd
      PSJalLk2Nvi5XmBt8SHFuoqbt29j0n0yQ56EQnhGRlBGNc3P5mJ9f3HQVKvVkCSJSqXSnm0v
      ukgqJUyay+WQZRmbzUYkEqG3t7d9YGc2mzstDzg/VIxGowQCAeLxOCqVCqvVSi6XIxAIKOIJ
      8MzaoMsrG6QrTYJeM4vLq3h6+tnb3cHr9VEo5OjvH2Dv4AiDycyffOM19sKnvDrh4/H6HmL2
      FKvbj7qW5vGDFd74CzgJHePq9lNKxTC5fJRiIbQ2N+VCmYmZWwS8nU2M2NzcpNlscvv2bWRZ
      Zm5uDqfTicfjYXd3t20/WF5eVoSNV5ZlVldXkWWZkZERVCoVc3Nz7TLuX//61zstEThfUqtU
      KhYXF0mn09y6dYtarUYqlUKlUikiWlUsFp+uDSoRDh9QiJ+yHTqkIjXYWloj1zJSi58w843X
      WZ/7kJrKRC4ZBaBaSPHTdxfo1+dReUY53l/n8DTNcL+Px8vrXB8bYGf5AevhNK1mk5N4jlsz
      k4itGpls5zaWF4yOjrZDctvb22QyGU5OToDzp4HVaiUcDiumOK5KpUKj0bS9NcfHxwwODuLz
      +Z6wS3Qas9nM4eEhdrudiYkJ1tbW0Ov17XwLJXC5NmizyNf+9Cf0WJocJfKYjQ4CUwNgtDLo
      MfDo/n1e+fYPyFda0DgPy82+8nV63VZOCy0MsTAT119GKiVIpiq8Ouzl8eIy9v6bBKQ8Nrud
      2Vu3ECQZm8OBydTZBZIsy2xtbbV7gI2MjDA0NMTp6SnRaBSDwdCOYigpwmKz2VCr1e36m2q1
      moODA8Usf+A8aUev19NsNslms+2G5CaTSTH38ujo6MlN8JdNKZdi+yDC9esz6LUKDgdx/ji0
      Wq2dlnHFc+YqI+yKF5pL0/L2ykPeef9Bu6yFLMvIssSdO3d+8/Fn/9tbuM9pofnk1yWJSiHC
      w8WQIgfY0dERx8fHwLkhbm5uDlEUCYfDrK6uUi6XefjwoaISuZeXl7l79y75fL6trVgssr6+
      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
      APD/AAP0NtGlnfSbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='QB v Blitz (2)' width='192'>
      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
      g7q4OORPVkPjaWw/238AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 30' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Target Share' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WR Adot' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WR Adot/Success' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WR v Blitz' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pass v run conv' width='192'>
      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
      Kkc4cPuz/3+I+DAwREIs0gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
