<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='3_years_data' inline='true' name='federated.04uydbo1p1kgsl13kbeg40cch8ge' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3_years_data' name='textscan.0jozvu40he6h4q12nd97j143yomg'>
            <connection class='textscan' directory='C:/Users/habet/Desktop/Python_Practice/NFL' filename='3_years_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0jozvu40he6h4q12nd97j143yomg' name='3_years_data.csv' table='[3_years_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='week_number' ordinal='1' />
            <column datatype='string' name='weather' ordinal='2' />
            <column datatype='integer' name='time_zone' ordinal='3' />
            <column datatype='string' name='game_time' ordinal='4' />
            <column datatype='string' name='stadium' ordinal='5' />
            <column datatype='string' name='roof' ordinal='6' />
            <column datatype='string' name='surface' ordinal='7' />
            <column datatype='string' name='home_team' ordinal='8' />
            <column datatype='string' name='away_team' ordinal='9' />
            <column datatype='string' name='wall_clock' ordinal='10' />
            <column datatype='string' name='offense' ordinal='11' />
            <column datatype='integer' name='home_points' ordinal='12' />
            <column datatype='integer' name='away_points' ordinal='13' />
            <column datatype='integer' name='game_play_number' ordinal='14' />
            <column datatype='datetime' name='duration' ordinal='15' />
            <column datatype='integer' name='drive_number' ordinal='16' />
            <column datatype='string' name='start_reason' ordinal='17' />
            <column datatype='string' name='end_reason' ordinal='18' />
            <column datatype='integer' name='plays_in_drive' ordinal='19' />
            <column datatype='integer' name='drive_play_number' ordinal='20' />
            <column datatype='integer' name='quarter' ordinal='21' />
            <column datatype='datetime' name='game_clock' ordinal='22' />
            <column datatype='string' name='field_position' ordinal='23' />
            <column datatype='integer' name='line_of_scrimmage' ordinal='24' />
            <column datatype='integer' name='down' ordinal='25' />
            <column datatype='integer' name='distance' ordinal='26' />
            <column datatype='real' name='play_clock' ordinal='27' />
            <column datatype='string' name='huddle' ordinal='28' />
            <column datatype='string' name='play_type' ordinal='29' />
            <column datatype='string' name='play_result' ordinal='30' />
            <column datatype='real' name='men_in_box' ordinal='31' />
            <column datatype='real' name='players_rushed' ordinal='32' />
            <column datatype='real' name='blitz' ordinal='33' />
            <column datatype='string' name='qb_at_snap' ordinal='34' />
            <column datatype='string' name='play_direction' ordinal='35' />
            <column datatype='string' name='pocket_location' ordinal='36' />
            <column datatype='string' name='pass_route' ordinal='37' />
            <column datatype='integer' name='screen_pass' ordinal='38' />
            <column datatype='real' name='touchdown' ordinal='39' />
            <column datatype='string' name='QB_team' ordinal='40' />
            <column datatype='string' name='QB_name' ordinal='41' />
            <column datatype='real' name='QB_attempt' ordinal='42' />
            <column datatype='real' name='QB_complete' ordinal='43' />
            <column datatype='string' name='QB_incomplete_type' ordinal='44' />
            <column datatype='real' name='QB_air_yards' ordinal='45' />
            <column datatype='real' name='QB_yards' ordinal='46' />
            <column datatype='real' name='QB_firstdown' ordinal='47' />
            <column datatype='real' name='QB_blitz' ordinal='48' />
            <column datatype='real' name='QB_hurry' ordinal='49' />
            <column datatype='real' name='QB_knockdown' ordinal='50' />
            <column datatype='real' name='QB_pocket_time' ordinal='51' />
            <column datatype='real' name='QB_inside20' ordinal='52' />
            <column datatype='real' name='QB_goaltogo' ordinal='53' />
            <column datatype='string' name='flex_team' ordinal='54' />
            <column datatype='string' name='flex_position' ordinal='55' />
            <column datatype='string' name='flex_name' ordinal='56' />
            <column datatype='real' name='flex_yards' ordinal='57' />
            <column datatype='real' name='flex_attempt' ordinal='58' />
            <column datatype='real' name='flex_running_lane' ordinal='59' />
            <column datatype='real' name='flex_brokentackle' ordinal='60' />
            <column datatype='real' name='flex_yacontact' ordinal='61' />
            <column datatype='real' name='flex_target' ordinal='62' />
            <column datatype='real' name='flex_reception' ordinal='63' />
            <column datatype='real' name='flex_yacatch' ordinal='64' />
            <column datatype='real' name='flex_firstdown' ordinal='65' />
            <column datatype='real' name='flex_inside20' ordinal='66' />
            <column datatype='real' name='flex_goaltogo' ordinal='67' />
            <column datatype='real' name='flex_scramble' ordinal='68' />
            <column datatype='real' name='flex_kneel' ordinal='69' />
            <column datatype='real' name='flex_dropped' ordinal='70' />
            <column datatype='string' name='DB_name' ordinal='71' />
            <column datatype='string' name='DB_team' ordinal='72' />
            <column datatype='real' name='DB_target' ordinal='73' />
            <column datatype='real' name='DB_completion' ordinal='74' />
            <column datatype='real' name='DB_tackle' ordinal='75' />
            <column datatype='integer' name='10_zone' ordinal='76' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[week_number]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>week_number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_zone]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>time_zone</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_time]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>game_time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stadium</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stadium]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>stadium</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>roof</remote-name>
            <remote-type>129</remote-type>
            <local-name>[roof]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>roof</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>surface</remote-name>
            <remote-type>129</remote-type>
            <local-name>[surface]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>surface</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_team]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>home_team</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[away_team]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>away_team</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wall_clock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wall_clock]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>wall_clock</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense</remote-name>
            <remote-type>129</remote-type>
            <local-name>[offense]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>offense</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[home_points]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>home_points</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>away_points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[away_points]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>away_points</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_play_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[game_play_number]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>game_play_number</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>134</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[drive_number]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>drive_number</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_reason]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>start_reason</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_reason]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>end_reason</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>plays_in_drive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[plays_in_drive]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>plays_in_drive</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_play_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[drive_play_number]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>drive_play_number</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_clock</remote-name>
            <remote-type>134</remote-type>
            <local-name>[game_clock]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>game_clock</remote-alias>
            <ordinal>22</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>field_position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[field_position]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>field_position</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_of_scrimmage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[line_of_scrimmage]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>line_of_scrimmage</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>down</remote-name>
            <remote-type>20</remote-type>
            <local-name>[down]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>down</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_clock</remote-name>
            <remote-type>5</remote-type>
            <local-name>[play_clock]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>play_clock</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>huddle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[huddle]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>huddle</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_type]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>play_type</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_result]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>play_result</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>men_in_box</remote-name>
            <remote-type>5</remote-type>
            <local-name>[men_in_box]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>men_in_box</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>players_rushed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[players_rushed]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>players_rushed</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blitz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[blitz]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>blitz</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qb_at_snap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[qb_at_snap]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>qb_at_snap</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>play_direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[play_direction]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>play_direction</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pocket_location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pocket_location]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>pocket_location</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pass_route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pass_route]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>pass_route</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>screen_pass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[screen_pass]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>screen_pass</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>touchdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[touchdown]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>touchdown</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_team]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_team</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_name]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_name</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_attempt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_attempt]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_attempt</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_complete</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_complete]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_complete</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_incomplete_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QB_incomplete_type]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_incomplete_type</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_air_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_air_yards]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_air_yards</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_yards]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_yards</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_firstdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_firstdown]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_firstdown</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_blitz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_blitz]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_blitz</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_hurry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_hurry]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_hurry</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_knockdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_knockdown]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_knockdown</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_pocket_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_pocket_time]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_pocket_time</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_inside20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_inside20]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_inside20</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QB_goaltogo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QB_goaltogo]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>QB_goaltogo</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_team]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_team</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_position]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_position</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flex_name]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_name</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yards]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_yards</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_attempt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_attempt]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_attempt</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_running_lane</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_running_lane]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_running_lane</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_brokentackle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_brokentackle]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_brokentackle</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yacontact</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yacontact]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_yacontact</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_target]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_target</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_reception</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_reception]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_reception</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_yacatch</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_yacatch]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_yacatch</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_firstdown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_firstdown]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_firstdown</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_inside20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_inside20]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_inside20</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_goaltogo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_goaltogo]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_goaltogo</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_scramble</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_scramble]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_scramble</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_kneel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_kneel]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_kneel</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flex_dropped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flex_dropped]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>flex_dropped</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DB_name]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>DB_name</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DB_team]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>DB_team</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_target]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>DB_target</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_completion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_completion]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>DB_completion</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_tackle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DB_tackle]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>DB_tackle</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10_zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10_zone]</local-name>
            <parent-name>[3_years_data.csv]</parent-name>
            <remote-alias>10_zone</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='10 Zone' datatype='integer' name='[10_zone]' role='measure' type='quantitative' />
      <column caption='Games Played' datatype='integer' name='[Calculation_1046805453226582016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([week_number])' />
      </column>
      <column caption='DB completion' datatype='real' name='[DB_completion]' role='measure' type='quantitative' />
      <column caption='DB name' datatype='string' name='[DB_name]' role='dimension' type='nominal' />
      <column caption='DB tackle' datatype='real' name='[DB_tackle]' role='measure' type='quantitative' />
      <column caption='DB target' datatype='real' name='[DB_target]' role='measure' type='quantitative' />
      <column caption='DB team' datatype='string' name='[DB_team]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='QB air yards' datatype='real' name='[QB_air_yards]' role='measure' type='quantitative' />
      <column caption='QB attempt' datatype='real' name='[QB_attempt]' role='measure' type='quantitative' />
      <column caption='QB blitz' datatype='real' name='[QB_blitz]' role='measure' type='quantitative' />
      <column caption='QB complete' datatype='real' name='[QB_complete]' role='measure' type='quantitative' />
      <column caption='QB firstdown' datatype='real' name='[QB_firstdown]' role='measure' type='quantitative' />
      <column caption='QB goaltogo' datatype='real' name='[QB_goaltogo]' role='measure' type='quantitative' />
      <column caption='QB hurry' datatype='real' name='[QB_hurry]' role='measure' type='quantitative' />
      <column caption='QB incomplete type' datatype='string' name='[QB_incomplete_type]' role='dimension' type='nominal' />
      <column caption='QB inside20' datatype='real' name='[QB_inside20]' role='measure' type='quantitative' />
      <column caption='QB knockdown' datatype='real' name='[QB_knockdown]' role='measure' type='quantitative' />
      <column caption='QB name' datatype='string' name='[QB_name]' role='dimension' type='nominal' />
      <column caption='QB pocket time' datatype='real' name='[QB_pocket_time]' role='measure' type='quantitative' />
      <column caption='QB team' datatype='string' name='[QB_team]' role='dimension' type='nominal' />
      <column caption='QB yards' datatype='real' name='[QB_yards]' role='measure' type='quantitative' />
      <column caption='Away Points' datatype='integer' name='[away_points]' role='measure' type='quantitative' />
      <column caption='Away Team' datatype='string' name='[away_team]' role='dimension' type='nominal' />
      <column caption='Blitz' datatype='real' name='[blitz]' role='measure' type='quantitative' />
      <column caption='Distance' datatype='integer' name='[distance]' role='measure' type='quantitative' />
      <column caption='Down' datatype='integer' name='[down]' role='measure' type='quantitative' />
      <column caption='Drive Number' datatype='integer' name='[drive_number]' role='dimension' type='ordinal' />
      <column caption='Drive Play Number' datatype='integer' name='[drive_play_number]' role='dimension' type='ordinal' />
      <column aggregation='Hour' caption='Duration' datatype='datetime' name='[duration]' role='dimension' type='ordinal' />
      <column caption='End Reason' datatype='string' name='[end_reason]' role='dimension' type='nominal' />
      <column caption='Field Position' datatype='string' name='[field_position]' role='dimension' type='nominal' />
      <column caption='Flex Attempt' datatype='real' name='[flex_attempt]' role='measure' type='quantitative' />
      <column caption='Flex Brokentackle' datatype='real' name='[flex_brokentackle]' role='measure' type='quantitative' />
      <column caption='Flex Dropped' datatype='real' name='[flex_dropped]' role='measure' type='quantitative' />
      <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
      <column caption='Flex Goaltogo' datatype='real' name='[flex_goaltogo]' role='measure' type='quantitative' />
      <column caption='Flex Inside20' datatype='real' name='[flex_inside20]' role='measure' type='quantitative' />
      <column caption='Flex Kneel' datatype='real' name='[flex_kneel]' role='measure' type='quantitative' />
      <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
      <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
      <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
      <column caption='Flex Running Lane' datatype='real' name='[flex_running_lane]' role='measure' type='quantitative' />
      <column caption='Flex Scramble' datatype='real' name='[flex_scramble]' role='measure' type='quantitative' />
      <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
      <column caption='Flex Team' datatype='string' name='[flex_team]' role='dimension' type='nominal' />
      <column caption='Flex Yacatch' datatype='real' name='[flex_yacatch]' role='measure' type='quantitative' />
      <column caption='Flex Yacontact' datatype='real' name='[flex_yacontact]' role='measure' type='quantitative' />
      <column caption='Flex Yards' datatype='real' name='[flex_yards]' role='measure' type='quantitative' />
      <column aggregation='Hour' caption='Game Clock' datatype='datetime' name='[game_clock]' role='dimension' type='ordinal' />
      <column caption='Game Play Number' datatype='integer' name='[game_play_number]' role='dimension' type='ordinal' />
      <column caption='Game Time' datatype='string' name='[game_time]' role='dimension' type='nominal' />
      <column caption='Home Points' datatype='integer' name='[home_points]' role='measure' type='quantitative' />
      <column caption='Home Team' datatype='string' name='[home_team]' role='dimension' type='nominal' />
      <column caption='Huddle' datatype='string' name='[huddle]' role='dimension' type='nominal' />
      <column caption='Line Of Scrimmage' datatype='integer' name='[line_of_scrimmage]' role='measure' type='quantitative' />
      <column caption='Men In Box' datatype='real' name='[men_in_box]' role='measure' type='quantitative' />
      <column caption='Offense' datatype='string' name='[offense]' role='dimension' type='nominal' />
      <column caption='Pass Route' datatype='string' name='[pass_route]' role='dimension' type='nominal' />
      <column caption='Play Clock' datatype='real' name='[play_clock]' role='measure' type='quantitative' />
      <column caption='Play Direction' datatype='string' name='[play_direction]' role='dimension' type='nominal' />
      <column caption='Play Result' datatype='string' name='[play_result]' role='dimension' type='nominal' />
      <column caption='Play Type' datatype='string' name='[play_type]' role='dimension' type='nominal' />
      <column caption='Players Rushed' datatype='real' name='[players_rushed]' role='measure' type='quantitative' />
      <column caption='Plays In Drive' datatype='integer' name='[plays_in_drive]' role='measure' type='quantitative' />
      <column caption='Pocket Location' datatype='string' name='[pocket_location]' role='dimension' type='nominal' />
      <column caption='Qb At Snap' datatype='string' name='[qb_at_snap]' role='dimension' type='nominal' />
      <column caption='Quarter' datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column caption='Roof' datatype='string' name='[roof]' role='dimension' type='nominal' />
      <column caption='Screen Pass' datatype='integer' name='[screen_pass]' role='measure' type='quantitative' />
      <column caption='Stadium' datatype='string' name='[stadium]' role='dimension' type='nominal' />
      <column caption='Start Reason' datatype='string' name='[start_reason]' role='dimension' type='nominal' />
      <column caption='Surface' datatype='string' name='[surface]' role='dimension' type='nominal' />
      <column caption='Time Zone' datatype='integer' name='[time_zone]' role='measure' type='quantitative' />
      <column caption='Touchdown' datatype='real' name='[touchdown]' role='measure' type='quantitative' />
      <column caption='Wall Clock' datatype='string' name='[wall_clock]' role='dimension' type='nominal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Week Number' datatype='integer' name='[week_number]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
      <column-instance column='[flex_firstdown]' derivation='Sum' name='[sum:flex_firstdown:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.557692' measure-ordering='alphabetic' measure-percentage='0.442308' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_reception:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_firstdown:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:flex_position:nk]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;WR&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.04uydbo1p1kgsl13kbeg40cch8ge' />
          </datasources>
          <datasource-dependencies datasource='federated.04uydbo1p1kgsl13kbeg40cch8ge'>
            <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_firstdown]' derivation='Sum' name='[sum:flex_firstdown:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_reception:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_firstdown:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]&quot;</bucket>
              <bucket>&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_reception:qk]&quot;</bucket>
              <bucket>&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_firstdown:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;A.J. Green&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adam Humphries&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adam Thielen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Albert Wilson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Allen Hurns&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Allen Robinson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alshon Jeffery&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Amari Cooper&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Andrew Hawkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Anquan Boldin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Anthony Miller&quot;' />
              <groupfilter from='&quot;Antonio Brown&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Antonio Gates&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Hooper&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Seferian-Jenkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Benjamin Watson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bennie Fowler&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandin Cooks&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon LaFell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon Marshall&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Breshad Perriman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brian Quick&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bruce Ellington&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Fiedorowicz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Uzomah&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Calvin Ridley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cameron Brate&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cameron Meredith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Charles Clay&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chester Rogers&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Conley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Godwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Herndon IV&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Hogan&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Christian Kirk&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Clive Walford&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Coby Fleener&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cole Beasley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cooper Kupp&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cordarrelle Patterson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Corey Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Corey Coleman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Corey Davis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Courtland Sutton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Curtis Samuel&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;D.J. Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Danny Amendola&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Davante Adams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Njoku&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeAndre Hopkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dede Westbrook&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Delanie Walker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Demaryius Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dennis Pitta&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Deonte Thompson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeSean Jackson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeVante Parker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Devin Funchess&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dez Bryant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Donte Moncrief&quot;' />
              <groupfilter from='&quot;Dontrelle Inman&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Doug Baldwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dwayne Allen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eli Rogers&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Emmanuel Sanders&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eric Decker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eric Ebron&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Evan Engram&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Gary Barnidge&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;George Kittle&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Golden Tate&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Greg Olsen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Hunter Henry&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;J.J. Nelson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jack Doyle&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jamison Crowder&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jared Cook&quot;' />
              <groupfilter from='&quot;Jarius Wright&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Jarvis Landry&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jason Witten&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeremy Kerley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeremy Maclin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jermaine Gresham&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jermaine Kearse&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jesse James&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jimmy Graham&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Ross&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Matthews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Reed&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordy Nelson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Doctson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Gordon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Reynolds&quot;' />
              <groupfilter from='&quot;JuJu Smith-Schuster&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Julius Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kamar Aiken&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keelan Cole&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keenan Allen&quot;' />
              <groupfilter from='&quot;Kelvin Benjamin&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Kendrick Bourne&quot;' />
              <groupfilter from='&quot;Kenny Britt&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Kenny Stills&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kyle Rudolph&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Lance Kendricks&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Laquon Treadwell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Larry Fitzgerald&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mark Andrews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marqise Lee&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marquez Valdes-Scantling&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marquise Goodwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Martavis Bryant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Martellus Bennett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marvin Jones Jr.&quot;' />
              <groupfilter from='&quot;Michael Crabtree&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Michael Gallup&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Michael Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Evans&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Wallace&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mohamed Sanu&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Nelson Agholor&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Odell Beckham Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Paul Richardson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Phillip Dorsett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Pierre Garcon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Quincy Enunwa&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Quinton Patton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Randall Cobb&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rashard Higgins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ricardo Louis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ricky Seals-Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rishard Matthews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rob Gronkowski&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robby Anderson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robert Woods&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Roger Lewis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ryan Grant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ryan Griffin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sammy Watkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Seth DeValve&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Seth Roberts&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Stefon Diggs&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Stephen Anderson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sterling Shepard&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Steve Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;T.Y. Hilton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tajae Sharpe&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tavon Austin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Taylor Gabriel&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Taywan Taylor&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ted Ginn Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Terrance Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Terrelle Pryor Sr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Torrey Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Travis Benjamin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Travis Kelce&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trent Taylor&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trey Burton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tyler Boyd&quot;' />
              <groupfilter from='&quot;Tyler Kroft&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Tyrell Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Vance McDonald&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Vernon Davis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Victor Cruz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Will Fuller V&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Will Tye&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Willie Snead IV&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Ertz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Miller&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zay Jones&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Julio Jones&quot;</bucket>
              <bucket>&quot;JuJu Smith-Schuster&quot;</bucket>
              <bucket>&quot;DeAndre Hopkins&quot;</bucket>
              <bucket>&quot;Davante Adams&quot;</bucket>
              <bucket>&quot;Adam Thielen&quot;</bucket>
              <bucket>&quot;Michael Thomas&quot;</bucket>
              <bucket>&quot;Zach Ertz&quot;</bucket>
              <bucket>&quot;Antonio Brown&quot;</bucket>
              <bucket>&quot;Travis Kelce&quot;</bucket>
              <bucket>&quot;Keenan Allen&quot;</bucket>
              <bucket>&quot;Stefon Diggs&quot;</bucket>
              <bucket>&quot;Robert Woods&quot;</bucket>
              <bucket>&quot;Mike Evans&quot;</bucket>
              <bucket>&quot;George Kittle&quot;</bucket>
              <bucket>&quot;Tyreek Hill&quot;</bucket>
              <bucket>&quot;Jarvis Landry&quot;</bucket>
              <bucket>&quot;Brandin Cooks&quot;</bucket>
              <bucket>&quot;Odell Beckham Jr.&quot;</bucket>
              <bucket>&quot;T.Y. Hilton&quot;</bucket>
              <bucket>&quot;Kenny Golladay&quot;</bucket>
              <bucket>&quot;Tyler Boyd&quot;</bucket>
              <bucket>&quot;Julian Edelman&quot;</bucket>
              <bucket>&quot;Adam Humphries&quot;</bucket>
              <bucket>&quot;Amari Cooper&quot;</bucket>
              <bucket>&quot;Larry Fitzgerald&quot;</bucket>
              <bucket>&quot;Golden Tate&quot;</bucket>
              <bucket>&quot;Sterling Shepard&quot;</bucket>
              <bucket>&quot;Corey Davis&quot;</bucket>
              <bucket>&quot;Eric Ebron&quot;</bucket>
              <bucket>&quot;Dede Westbrook&quot;</bucket>
              <bucket>&quot;Jared Cook&quot;</bucket>
              <bucket>&quot;Emmanuel Sanders&quot;</bucket>
              <bucket>&quot;Mohamed Sanu&quot;</bucket>
              <bucket>&quot;Alshon Jeffery&quot;</bucket>
              <bucket>&quot;Chris Godwin&quot;</bucket>
              <bucket>&quot;Calvin Ridley&quot;</bucket>
              <bucket>&quot;Taylor Gabriel&quot;</bucket>
              <bucket>&quot;Zay Jones&quot;</bucket>
              <bucket>&quot;Willie Snead IV&quot;</bucket>
              <bucket>&quot;Nelson Agholor&quot;</bucket>
              <bucket>&quot;Cole Beasley&quot;</bucket>
              <bucket>&quot;Jordy Nelson&quot;</bucket>
              <bucket>&quot;Austin Hooper&quot;</bucket>
              <bucket>&quot;Demaryius Thomas&quot;</bucket>
              <bucket>&quot;Michael Crabtree&quot;</bucket>
              <bucket>&quot;Allen Robinson&quot;</bucket>
              <bucket>&quot;Jimmy Graham&quot;</bucket>
              <bucket>&quot;D.J. Moore&quot;</bucket>
              <bucket>&quot;Robby Anderson&quot;</bucket>
              <bucket>&quot;Kyle Rudolph&quot;</bucket>
              <bucket>&quot;Tyler Lockett&quot;</bucket>
              <bucket>&quot;John Brown&quot;</bucket>
              <bucket>&quot;David Njoku&quot;</bucket>
              <bucket>&quot;Donte Moncrief&quot;</bucket>
              <bucket>&quot;Danny Amendola&quot;</bucket>
              <bucket>&quot;Jordan Reed&quot;</bucket>
              <bucket>&quot;A.J. Green&quot;</bucket>
              <bucket>&quot;Trey Burton&quot;</bucket>
              <bucket>&quot;Devin Funchess&quot;</bucket>
              <bucket>&quot;Vance McDonald&quot;</bucket>
              <bucket>&quot;Doug Baldwin&quot;</bucket>
              <bucket>&quot;Josh Doctson&quot;</bucket>
              <bucket>&quot;Courtland Sutton&quot;</bucket>
              <bucket>&quot;Rob Gronkowski&quot;</bucket>
              <bucket>&quot;Chester Rogers&quot;</bucket>
              <bucket>&quot;Antonio Callaway&quot;</bucket>
              <bucket>&quot;Mike Williams&quot;</bucket>
              <bucket>&quot;Josh Gordon&quot;</bucket>
              <bucket>&quot;DeSean Jackson&quot;</bucket>
              <bucket>&quot;Kendrick Bourne&quot;</bucket>
              <bucket>&quot;Tyrell Williams&quot;</bucket>
              <bucket>&quot;Evan Engram&quot;</bucket>
              <bucket>&quot;Christian Kirk&quot;</bucket>
              <bucket>&quot;Marquez Valdes-Scantling&quot;</bucket>
              <bucket>&quot;Keelan Cole&quot;</bucket>
              <bucket>&quot;Jermaine Kearse&quot;</bucket>
              <bucket>&quot;Curtis Samuel&quot;</bucket>
              <bucket>&quot;Seth Roberts&quot;</bucket>
              <bucket>&quot;C.J. Uzomah&quot;</bucket>
              <bucket>&quot;Jarius Wright&quot;</bucket>
              <bucket>&quot;Quincy Enunwa&quot;</bucket>
              <bucket>&quot;Kenny Stills&quot;</bucket>
              <bucket>&quot;Marvin Jones Jr.&quot;</bucket>
              <bucket>&quot;Cooper Kupp&quot;</bucket>
              <bucket>&quot;Michael Gallup&quot;</bucket>
              <bucket>&quot;Sammy Watkins&quot;</bucket>
              <bucket>&quot;Chris Herndon IV&quot;</bucket>
              <bucket>&quot;Rashard Higgins&quot;</bucket>
              <bucket>&quot;Ricky Seals-Jones&quot;</bucket>
              <bucket>&quot;Randall Cobb&quot;</bucket>
              <bucket>&quot;Mark Andrews&quot;</bucket>
              <bucket>&quot;Chris Hogan&quot;</bucket>
              <bucket>&quot;Kelvin Benjamin&quot;</bucket>
              <bucket>&quot;Taywan Taylor&quot;</bucket>
              <bucket>&quot;Anthony Miller&quot;</bucket>
              <bucket>&quot;Josh Reynolds&quot;</bucket>
              <bucket>&quot;Laquon Treadwell&quot;</bucket>
              <bucket>&quot;Chris Conley&quot;</bucket>
              <bucket>&quot;Ryan Grant&quot;</bucket>
              <bucket>&quot;David Moore&quot;</bucket>
              <bucket>&quot;Benjamin Watson&quot;</bucket>
              <bucket>&quot;Will Fuller V&quot;</bucket>
              <bucket>&quot;Tajae Sharpe&quot;</bucket>
              <bucket>&quot;Cameron Brate&quot;</bucket>
              <bucket>&quot;Jamison Crowder&quot;</bucket>
              <bucket>&quot;John Ross&quot;</bucket>
              <bucket>&quot;Antonio Gates&quot;</bucket>
              <bucket>&quot;Phillip Dorsett&quot;</bucket>
              <bucket>&quot;Bruce Ellington&quot;</bucket>
              <bucket>&quot;DeVante Parker&quot;</bucket>
              <bucket>&quot;Pierre Garcon&quot;</bucket>
              <bucket>&quot;Marquise Goodwin&quot;</bucket>
              <bucket>&quot;Jesse James&quot;</bucket>
              <bucket>&quot;Greg Olsen&quot;</bucket>
              <bucket>&quot;Dontrelle Inman&quot;</bucket>
              <bucket>&quot;Ryan Griffin&quot;</bucket>
              <bucket>&quot;Vernon Davis&quot;</bucket>
              <bucket>&quot;Trent Taylor&quot;</bucket>
              <bucket>&quot;Cordarrelle Patterson&quot;</bucket>
              <bucket>&quot;Jack Doyle&quot;</bucket>
              <bucket>&quot;Albert Wilson&quot;</bucket>
              <bucket>&quot;Charles Clay&quot;</bucket>
              <bucket>&quot;Paul Richardson&quot;</bucket>
              <bucket>&quot;Allen Hurns&quot;</bucket>
              <bucket>&quot;Jordan Matthews&quot;</bucket>
              <bucket>&quot;Torrey Smith&quot;</bucket>
              <bucket>&quot;Ted Ginn Jr.&quot;</bucket>
              <bucket>&quot;Terrelle Pryor Sr.&quot;</bucket>
              <bucket>&quot;Martavis Bryant&quot;</bucket>
              <bucket>&quot;Deonte Thompson&quot;</bucket>
              <bucket>&quot;Breshad Perriman&quot;</bucket>
              <bucket>&quot;Bennie Fowler&quot;</bucket>
              <bucket>&quot;Lance Kendricks&quot;</bucket>
              <bucket>&quot;Travis Benjamin&quot;</bucket>
              <bucket>&quot;Jaron Brown&quot;</bucket>
              <bucket>&quot;Brandon Marshall&quot;</bucket>
              <bucket>&quot;Michael Floyd&quot;</bucket>
              <bucket>&quot;Brandon LaFell&quot;</bucket>
              <bucket>&quot;Austin Seferian-Jenkins&quot;</bucket>
              <bucket>&quot;Eli Rogers&quot;</bucket>
              <bucket>&quot;J.J. Nelson&quot;</bucket>
              <bucket>&quot;Tavon Austin&quot;</bucket>
              <bucket>&quot;Jermaine Gresham&quot;</bucket>
              <bucket>&quot;Cameron Meredith&quot;</bucket>
              <bucket>&quot;Corey Coleman&quot;</bucket>
              <bucket>&quot;Seth DeValve&quot;</bucket>
              <bucket>&quot;Rishard Matthews&quot;</bucket>
              <bucket>&quot;Kamar Aiken&quot;</bucket>
              <bucket>&quot;Tyler Kroft&quot;</bucket>
              <bucket>&quot;Delanie Walker&quot;</bucket>
              <bucket>&quot;Dwayne Allen&quot;</bucket>
              <bucket>&quot;Brian Quick&quot;</bucket>
              <bucket>&quot;Terrance Williams&quot;</bucket>
              <bucket>&quot;Jeremy Kerley&quot;</bucket>
              <bucket>&quot;Mike Wallace&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;TE&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]</column>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]</column>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</column>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]' value='N' />
            <format attr='text-format' field='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values]' value='N' />
            <format attr='vertical-align' field='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values]' value='auto' />
            <format attr='wrap' field='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values]' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]' />
              <shape column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]' />
              <text column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values]' />
              <lod column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</rows>
        <cols>([federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok] * [federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{41E2345B-752F-4373-A066-BEFD9866CA22}' />
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.04uydbo1p1kgsl13kbeg40cch8ge' />
          </datasources>
          <datasource-dependencies datasource='federated.04uydbo1p1kgsl13kbeg40cch8ge'>
            <column caption='Flex Firstdown' datatype='real' name='[flex_firstdown]' role='measure' type='quantitative' />
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Position' datatype='string' name='[flex_position]' role='dimension' type='nominal' />
            <column caption='Flex Reception' datatype='real' name='[flex_reception]' role='measure' type='quantitative' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[flex_position]' derivation='None' name='[none:flex_position:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flex_firstdown]' derivation='Sum' name='[sum:flex_firstdown:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_reception]' derivation='Sum' name='[sum:flex_reception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_firstdown:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_reception:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;A.J. Green&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adam Humphries&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Adam Thielen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Albert Wilson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Allen Hurns&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Allen Robinson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Alshon Jeffery&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Amari Cooper&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Andrew Hawkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Anquan Boldin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Anthony Miller&quot;' />
              <groupfilter from='&quot;Antonio Brown&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Antonio Gates&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Hooper&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Austin Seferian-Jenkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Benjamin Watson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bennie Fowler&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandin Cooks&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon LaFell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brandon Marshall&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Breshad Perriman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Brian Quick&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Bruce Ellington&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Fiedorowicz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;C.J. Uzomah&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Calvin Ridley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cameron Brate&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cameron Meredith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Charles Clay&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chester Rogers&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Conley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Godwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Herndon IV&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Chris Hogan&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Christian Kirk&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Clive Walford&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Coby Fleener&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cole Beasley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cooper Kupp&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Cordarrelle Patterson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Corey Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Corey Coleman&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Corey Davis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Courtland Sutton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Curtis Samuel&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;D.J. Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Danny Amendola&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Davante Adams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Moore&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;David Njoku&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeAndre Hopkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dede Westbrook&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Delanie Walker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Demaryius Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dennis Pitta&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Deonte Thompson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeSean Jackson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;DeVante Parker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Devin Funchess&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dez Bryant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Donte Moncrief&quot;' />
              <groupfilter from='&quot;Dontrelle Inman&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Doug Baldwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Dwayne Allen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eli Rogers&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Emmanuel Sanders&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eric Decker&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Eric Ebron&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Evan Engram&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Gary Barnidge&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;George Kittle&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Golden Tate&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Greg Olsen&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Hunter Henry&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;J.J. Nelson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jack Doyle&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jamison Crowder&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jared Cook&quot;' />
              <groupfilter from='&quot;Jarius Wright&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Jarvis Landry&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jason Witten&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeremy Kerley&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jeremy Maclin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jermaine Gresham&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jermaine Kearse&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jesse James&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jimmy Graham&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Brown&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;John Ross&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Matthews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordan Reed&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Jordy Nelson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Doctson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Gordon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Josh Reynolds&quot;' />
              <groupfilter from='&quot;JuJu Smith-Schuster&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Julius Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kamar Aiken&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keelan Cole&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Keenan Allen&quot;' />
              <groupfilter from='&quot;Kelvin Benjamin&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Kendrick Bourne&quot;' />
              <groupfilter from='&quot;Kenny Britt&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Kenny Stills&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Kyle Rudolph&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Lance Kendricks&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Laquon Treadwell&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Larry Fitzgerald&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mark Andrews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marqise Lee&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marquez Valdes-Scantling&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marquise Goodwin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Martavis Bryant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Martellus Bennett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Marvin Jones Jr.&quot;' />
              <groupfilter from='&quot;Michael Crabtree&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Michael Gallup&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Michael Thomas&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Evans&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Wallace&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mike Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Mohamed Sanu&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Nelson Agholor&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Odell Beckham Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Paul Richardson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Phillip Dorsett&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Pierre Garcon&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Quincy Enunwa&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Quinton Patton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Randall Cobb&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rashard Higgins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ricardo Louis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ricky Seals-Jones&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rishard Matthews&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Rob Gronkowski&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robby Anderson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Robert Woods&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Roger Lewis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ryan Grant&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ryan Griffin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sammy Watkins&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Seth DeValve&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Seth Roberts&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Stefon Diggs&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Stephen Anderson&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Sterling Shepard&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Steve Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;T.Y. Hilton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tajae Sharpe&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tavon Austin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Taylor Gabriel&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Taywan Taylor&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Ted Ginn Jr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Terrance Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Terrelle Pryor Sr.&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Torrey Smith&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Travis Benjamin&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Travis Kelce&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trent Taylor&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Trey Burton&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Tyler Boyd&quot;' />
              <groupfilter from='&quot;Tyler Kroft&quot;' function='range' level='[none:flex_name:nk]' to='&quot;Tyrell Williams&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Vance McDonald&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Vernon Davis&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Victor Cruz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Will Fuller V&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Will Tye&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Willie Snead IV&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Ertz&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zach Miller&quot;' />
              <groupfilter function='member' level='[none:flex_name:nk]' member='&quot;Zay Jones&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;TE&quot;' />
              <groupfilter function='member' level='[none:flex_position:nk]' member='&quot;WR&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]' included-values='in-range'>
            <min>50.0</min>
            <max>153.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]' member-value='2018' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]</column>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]</column>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]</column>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</column>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]' />
              <shape column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]' />
              <shape column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]' />
              <shape column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</rows>
        <cols>([federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok] * ([federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk] + [federated.04uydbo1p1kgsl13kbeg40cch8ge].[Multiple Values]))</cols>
      </table>
      <simple-id uuid='{E5A84224-D4BE-400B-BFC4-8B5DB36D563A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='3_years_data' name='federated.04uydbo1p1kgsl13kbeg40cch8ge' />
          </datasources>
          <datasource-dependencies datasource='federated.04uydbo1p1kgsl13kbeg40cch8ge'>
            <column caption='Flex Name' datatype='string' name='[flex_name]' role='dimension' type='nominal' />
            <column caption='Flex Target' datatype='real' name='[flex_target]' role='measure' type='quantitative' />
            <column-instance column='[flex_name]' derivation='None' name='[none:flex_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flex_target]' derivation='Sum' name='[sum:flex_target:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:qk]' included-values='in-range'>
            <min>2018</min>
            <max>2018</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[sum:flex_target:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</rows>
        <cols>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{7BC633B7-419D-453D-AF36-CCEBCAA07C3A}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]' type='color' />
            <card pane-specification-id='7' param='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[attr:flex_position:nk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_firstdown:qk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{934320FE-755A-4D3F-A1F5-D6D8C537FEE1}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]' type='color' />
            <card pane-specification-id='6' param='[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[:Measure Names]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[attr:flex_position:nk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_firstdown:qk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_position:nk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:ok]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E9C35D7-1547-40DF-903E-42A14121DBCE}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:flex_name:nk]</field>
            <field>[federated.04uydbo1p1kgsl13kbeg40cch8ge].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{936DD8BF-A153-4922-99F9-F4EF6F53FA3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      hbgislNtcioSQAuYBL1+YiE/tm3TO0AZD8dxDqSDw+0gPUpau15HvXxl158yDOq/+g/k8+dZ
      XFxEkiRqd8sumqZ5JPfqyqer7FSbeAS4vVXm2pdb0NjANE1UVeX69evMzc1hWda+fbaD3Ksj
      XwJ91ZfLMAzsnoXsD+DaNq7r4Djg80rYjoDjWMiyD0FwMUwLHAcXAZ8sohs9bCCkKDh3QysO
      cqDlOM6BA+IG2sdTe6J8gB/SFzPQHo/2ZMQH3+Uw4dAD7eOpPTEG0FbLLCws0tb3t65t1kqs
      ZrfoGR2WFhco1dt9awu5LItLN2m3mywtLlDuuzSgS35zncWlm3TaDZYWF6io/ZcVdF2bhS8W
      MbQWS4sLVBvdvrUb67dZvrWK1m6wuLhAtdm/trKTY/n22l3tIrVmnymsrkNm9TaffXqdRqPO
      4uIi9Va/6a8u2bXbLN28Rbe1q723n8D3YVvGyTGAQrnOU0+eYadQ2JfOq0Sw9DalXJ7p+adp
      lPvXj4xNEpRhK5Njev48ajnfp1IgGothWya5jTwz8+epl/ofdzuzjuWK7GzvMDv/FLV9aNut
      Fq7rUiwUOTs/T634zZCX+2GzuprB6fUo5IucnZ+j2q9WEJmePUs4EqReqnBufo7KTr/jurRb
      HfRuh1y+zBPzT1Au9KftNConxwAEx0HTNBD3F1L91cGZ5BHQNJ2e06/L5LK5fpvYaJp4WEbX
      dHp9hzO5iHKAeFDGsCx0TaPn9rcj4jo29WaLWnGbjm6gaRq20+9uikv6zJNEPDZtw0TTdOw+
      xwUBJRwjFZJo6ia6pmPvI9esq5bwR1N4BBdd03D6fTQdG1v0MqTImHf9Q0foTxseGjk5TrBl
      dMluFkjPzCB7+n8gCltZKmqbqZlZyvkco5MzKL5+do9dNtbu0DVdpqanKGxt7ktbzG/R1BzS
      k2NsZjcYnZzuU7tLs9EgGAyQzWwwNjVNwNvfuOWdbVoGTI2nyGQ2GO9bC221SrHeZWoiRTa7
      ycTUDH5vfy+cZqNBOBLF6RlksltMpKd/Z4+5vWsubNM0YGo8QTab43R6uq/cEcfunRwDGDDg
      uzgxS6ABA76LgQEMONEMDGDAY8NuK14XXf+6xqxh6HzfGn9gAAMeG/778m9otxu8/+FHrN1a
      Irtd4oPfvEe+WKRSKaFpHb74YgHjnu24gRM84LFhY+kaK3mVVPpZtJ1lFta2mRwK0QOUgJdm
      s4kcCJKafJqXnp4GBjPAgMeI0+fmWb21wbl0nJ1SlcTwEEowxMhQhEJJZeL0BD4lTno8sacZ
      zAADTjSDGWDAieb/ATdKsMXtAJlxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1 (2)' width='192'>
      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
      pDYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
